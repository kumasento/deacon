
# Some simple incrementers

INCLUDE "prelude.rby".

m     = 3.
k     = 1.

hadd0 = fork ; [xor,and].
hadd1 = fst and^~1 ; fork^V ; fst xor.

inc0 m n = pi2^~1 ; fst T ; row (m*n) hadd0 ; pi1.
inc1 m n = pi2^~1 ; row (m*n) hadd1 ; snd T ; pi1.
inc2 m n = pi2^~1 ; [T, /\ m (map n D)] ;
           row m (row n hadd0 ; snd D) ; pi1 ; /\~ m (map n D).
inc3 m n = pi2^~1 ; row (m*n) (hadd0^V) ; snd T ; pi1.

try_inc inc = inc m k.

############################################
# Examples
#
# current = try_inc inc0.
# current = try_inc inc1 \ rev (m*k).
# current = try_inc inc2 \ (group m k^~1).
# current = try_inc inc3 \ rev (m*k).

# current = uint2bit (m*k) ; try_inc inc0 ; bit2uint (m*k).
# current = uint2bit (m*k) ; try_inc inc2 \ (group m k^~1) ; bit2uint (m*k).

# re "F F F;T F F;F T F;T T F;F F T;T F T;F T T;T T T"
# re "0;1;2;3;4;5;6"

# current = uint2bit (m*k) ; try_inc inc0 ; bit2uint (m*k).

current =  try_inc inc0.
