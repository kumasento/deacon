Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v1_par_s16 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 MobilenetV1ParS16Manager \
	DFEModel=MAIA maxFileName=MobilenetV1ParS16 target='DFE' enableMPCX=false \
	FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16/data/data-mobilenet-v1-par-s16.txt 
]0; maxJavaRun: MobilenetV1ParS16Manager DFEModel=MAIA maxFileName=MobilenetV1ParS16 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16/data/data-mobilenet-v1-par-s16.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v1_par_s16
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v1_par_s16.MobilenetV1ParS16Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV1ParS16 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16/data/data-mobilenet-v1-par-s16.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Wed 22:04: MaxCompiler version: 2021.1
Wed 22:04: Build "MobilenetV1ParS16" start time: Wed Dec 22 22:04:51 GMT 2021
Wed 22:04: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Wed 22:04: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16_MAIA_DFE_FREQ_300
Wed 22:04: Detailed build log available in "_build.log"
Wed 22:04: 
Wed 22:04: ENGINE BUILD PARAMETERS
Wed 22:04: 	              Build name: MobilenetV1ParS16_MAIA_DFE_FREQ_300                                                                                    
Wed 22:04: 	             maxFileName: MobilenetV1ParS16                                                                                                      
Wed 22:04: 	                  target: DFE                                                                                                                    
Wed 22:04: 	                DFEModel: MAIA                                                                                                                   
Wed 22:04: 	              enableMPCX: false                                                                                                                  
Wed 22:04: 	                bitWidth: 32                                                                                                                     
Wed 22:04: 	                     WBW: 32                                                                                                                     
Wed 22:04: 	                   DTYPE: fixed                                                                                                                  
Wed 22:04: 	           NUM_FRAC_BITS: 8                                                                                                                      
Wed 22:04: 	                      PF: 1                                                                                                                      
Wed 22:04: 	                      PC: 1                                                                                                                      
Wed 22:04: 	                      PK: 1                                                                                                                      
Wed 22:04: 	                       H: 1                                                                                                                      
Wed 22:04: 	                       W: 1                                                                                                                      
Wed 22:04: 	                       C: 1                                                                                                                      
Wed 22:04: 	                       F: 1                                                                                                                      
Wed 22:04: 	                       K: 1                                                                                                                      
Wed 22:04: 	                     PAD: 0                                                                                                                      
Wed 22:04: 	                       S: 1                                                                                                                      
Wed 22:04: 	                     SEQ: 0                                                                                                                      
Wed 22:04: 	                    FREQ: 300                                                                                                                    
Wed 22:04: 	                USE_DRAM: false                                                                                                                  
Wed 22:04: 	                 USE_BNN: false                                                                                                                  
Wed 22:04: 	            USE_WINOGRAD: false                                                                                                                  
Wed 22:04: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                  
Wed 22:04: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                      
Wed 22:04: 	                   DEBUG: false                                                                                                                  
Wed 22:04: 	           COEFF_ON_CHIP: false                                                                                                                  
Wed 22:04: 	              INIT_COEFF: false                                                                                                                  
Wed 22:04: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16/data/data-mobilenet-v1-par-s16.txt
Wed 22:05: Generating kernel conv0 ...
Wed 22:05: Instantiating kernel "conv0"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 224, output height = 224, pad = 1
Wed 22:05: Counter H = 226 W = 226
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Read for key = conv0
Wed 22:05: Ifmap buffer configuration 262144 x 1
Wed 22:05: loop = false
Wed 22:05: Building line buffer for "conv0" ...
Wed 22:05: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 1, output vector size: 9.
Wed 22:05: Number of separated line buffers: 1
Wed 22:05: Initialising line buffer kernel with 3 x 226 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv0" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 9
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 22:05: Connecting to output: ofmap
Wed 22:05: Compiling kernel "conv0"
Wed 22:05: 
Wed 22:05: Generating kernel conv1 ...
Wed 22:05: Instantiating kernel "conv1"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 112, output height = 112, pad = 1
Wed 22:05: Counter H = 114 W = 114
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv1" ...
Wed 22:05: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv1_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 16384 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv1_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Wed 22:05: Depthwise coeff ROM depth = 2
Wed 22:05: Pointwise coeff ROM depth = 8
Wed 22:05: Read for key = conv1_dw
Wed 22:05: Read for key = conv1_pw
Wed 22:05: Compiling kernel "conv1"
Wed 22:05: 
Wed 22:05: Generating kernel conv2 ...
Wed 22:05: Instantiating kernel "conv2"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 112, output height = 112, pad = 1
Wed 22:05: Counter H = 114 W = 114
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv2" ...
Wed 22:05: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 114 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv2_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 16384 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv2_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 22:05: Depthwise coeff ROM depth = 4
Wed 22:05: Pointwise coeff ROM depth = 32
Wed 22:05: Read for key = conv2_dw
Wed 22:05: Read for key = conv2_pw
Wed 22:05: Compiling kernel "conv2"
Wed 22:05: 
Wed 22:05: Generating kernel conv3 ...
Wed 22:05: Instantiating kernel "conv3"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 56, output height = 56, pad = 1
Wed 22:05: Counter H = 58 W = 58
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv3" ...
Wed 22:05: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv3_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 4096 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv3_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Wed 22:05: Depthwise coeff ROM depth = 8
Wed 22:05: Pointwise coeff ROM depth = 64
Wed 22:05: Read for key = conv3_dw
Wed 22:05: Read for key = conv3_pw
Wed 22:05: Compiling kernel "conv3"
Wed 22:05: 
Wed 22:05: Generating kernel conv4 ...
Wed 22:05: Instantiating kernel "conv4"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 56, output height = 56, pad = 1
Wed 22:05: Counter H = 58 W = 58
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv4" ...
Wed 22:05: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 58 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv4_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 8192 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv4_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 22:05: Depthwise coeff ROM depth = 8
Wed 22:05: Pointwise coeff ROM depth = 128
Wed 22:05: Read for key = conv4_dw
Wed 22:05: Read for key = conv4_pw
Wed 22:05: Compiling kernel "conv4"
Wed 22:05: 
Wed 22:05: Generating kernel conv5 ...
Wed 22:05: Instantiating kernel "conv5"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 28, output height = 28, pad = 1
Wed 22:05: Counter H = 30 W = 30
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv5" ...
Wed 22:05: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv5_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 1024 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv5_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 22:05: Depthwise coeff ROM depth = 16
Wed 22:05: Pointwise coeff ROM depth = 256
Wed 22:05: Read for key = conv5_dw
Wed 22:05: Read for key = conv5_pw
Wed 22:05: Compiling kernel "conv5"
Wed 22:05: 
Wed 22:05: Generating kernel conv6 ...
Wed 22:05: Instantiating kernel "conv6"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 28, output height = 28, pad = 1
Wed 22:05: Counter H = 30 W = 30
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv6" ...
Wed 22:05: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 30 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv6_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 4096 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv6_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 22:05: Depthwise coeff ROM depth = 16
Wed 22:05: Pointwise coeff ROM depth = 512
Wed 22:05: Read for key = conv6_dw
Wed 22:05: Read for key = conv6_pw
Wed 22:05: Compiling kernel "conv6"
Wed 22:05: 
Wed 22:05: Generating kernel conv7 ...
Wed 22:05: Instantiating kernel "conv7"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 14, output height = 14, pad = 1
Wed 22:05: Counter H = 16 W = 16
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv7" ...
Wed 22:05: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv7_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 256 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv7_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 22:05: Depthwise coeff ROM depth = 32
Wed 22:05: Pointwise coeff ROM depth = 1024
Wed 22:05: Read for key = conv7_dw
Wed 22:05: Read for key = conv7_pw
Wed 22:05: Compiling kernel "conv7"
Wed 22:05: 
Wed 22:05: Generating kernel conv8 ...
Wed 22:05: Instantiating kernel "conv8"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 14, output height = 14, pad = 1
Wed 22:05: Counter H = 16 W = 16
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv8" ...
Wed 22:05: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv8_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 8192 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv8_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 22:05: Depthwise coeff ROM depth = 32
Wed 22:05: Pointwise coeff ROM depth = 1024
Wed 22:05: Read for key = conv8_dw
Wed 22:05: Read for key = conv8_pw
Wed 22:05: Compiling kernel "conv8"
Wed 22:05: 
Wed 22:05: Generating kernel conv9 ...
Wed 22:05: Instantiating kernel "conv9"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 14, output height = 14, pad = 1
Wed 22:05: Counter H = 16 W = 16
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv9" ...
Wed 22:05: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv9_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 256 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv9_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 22:05: Depthwise coeff ROM depth = 32
Wed 22:05: Pointwise coeff ROM depth = 1024
Wed 22:05: Read for key = conv9_dw
Wed 22:05: Read for key = conv9_pw
Wed 22:05: Compiling kernel "conv9"
Wed 22:05: 
Wed 22:05: Generating kernel conv10 ...
Wed 22:05: Instantiating kernel "conv10"
Wed 22:05: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: coeffOnChip = true
Wed 22:05: Input height = 14, output height = 14, pad = 1
Wed 22:05: Counter H = 16 W = 16
Wed 22:05: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:05: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:05: Building line buffer for "conv10" ...
Wed 22:05: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:05: Line buffer input vector size: 16, output vector size: 144.
Wed 22:05: Number of separated line buffers: 16
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:05: Size of line buffer output: 3
Wed 22:05: Number of line buffer output chunks: 3
Wed 22:05: Connecting outputs from chunk (#000) ...
Wed 22:05: Connecting outputs from chunk (#001) ...
Wed 22:05: Connecting outputs from chunk (#002) ...
Wed 22:05: Building the CORE arithmetic unit for "conv10_dw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 144
Wed 22:05: CORE coefficient vector size: 144
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: Ifmap buffer configuration 8192 x 16
Wed 22:05: loop = false
Wed 22:05: Building the CORE arithmetic unit for "conv10_pw" ...
Wed 22:05: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:05: CORE ifmap vector size: 16
Wed 22:05: CORE coefficient vector size: 256
Wed 22:05: CORE ofmap vector size: 16
Wed 22:05: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 22:05: Depthwise coeff ROM depth = 32
Wed 22:05: Pointwise coeff ROM depth = 1024
Wed 22:05: Read for key = conv10_dw
Wed 22:06: Read for key = conv10_pw
Wed 22:06: Compiling kernel "conv10"
Wed 22:06: 
Wed 22:06: Generating kernel conv11 ...
Wed 22:06: Instantiating kernel "conv11"
Wed 22:06: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: coeffOnChip = true
Wed 22:06: Input height = 14, output height = 14, pad = 1
Wed 22:06: Counter H = 16 W = 16
Wed 22:06: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:06: Building line buffer for "conv11" ...
Wed 22:06: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:06: Line buffer input vector size: 16, output vector size: 144.
Wed 22:06: Number of separated line buffers: 16
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Building the CORE arithmetic unit for "conv11_dw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 144
Wed 22:06: CORE coefficient vector size: 144
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: Ifmap buffer configuration 256 x 16
Wed 22:06: loop = false
Wed 22:06: Building the CORE arithmetic unit for "conv11_pw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 16
Wed 22:06: CORE coefficient vector size: 256
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 22:06: Depthwise coeff ROM depth = 32
Wed 22:06: Pointwise coeff ROM depth = 1024
Wed 22:06: Read for key = conv11_dw
Wed 22:06: Read for key = conv11_pw
Wed 22:06: Compiling kernel "conv11"
Wed 22:06: 
Wed 22:06: Generating kernel conv12 ...
Wed 22:06: Instantiating kernel "conv12"
Wed 22:06: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: coeffOnChip = true
Wed 22:06: Input height = 14, output height = 14, pad = 1
Wed 22:06: Counter H = 16 W = 16
Wed 22:06: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:06: Building line buffer for "conv12" ...
Wed 22:06: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 22:06: Line buffer input vector size: 16, output vector size: 144.
Wed 22:06: Number of separated line buffers: 16
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 16 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Building the CORE arithmetic unit for "conv12_dw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 144
Wed 22:06: CORE coefficient vector size: 144
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: Ifmap buffer configuration 2048 x 16
Wed 22:06: loop = false
Wed 22:06: Building the CORE arithmetic unit for "conv12_pw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 16
Wed 22:06: CORE coefficient vector size: 256
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 22:06: Depthwise coeff ROM depth = 32
Wed 22:06: Pointwise coeff ROM depth = 2048
Wed 22:06: Read for key = conv12_dw
Wed 22:06: Read for key = conv12_pw
Wed 22:06: Compiling kernel "conv12"
Wed 22:06: 
Wed 22:06: Generating kernel conv13 ...
Wed 22:06: Instantiating kernel "conv13"
Wed 22:06: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: coeffOnChip = true
Wed 22:06: Input height = 7, output height = 7, pad = 1
Wed 22:06: Counter H = 9 W = 9
Wed 22:06: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 22:06: Pointwise coeff type = {DFEVectorType: 256 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Wed 22:06: Building line buffer for "conv13" ...
Wed 22:06: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 22:06: Line buffer input vector size: 16, output vector size: 144.
Wed 22:06: Number of separated line buffers: 16
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Initialising line buffer kernel with 3 x 9 x 1
Wed 22:06: Size of line buffer output: 3
Wed 22:06: Number of line buffer output chunks: 3
Wed 22:06: Connecting outputs from chunk (#000) ...
Wed 22:06: Connecting outputs from chunk (#001) ...
Wed 22:06: Connecting outputs from chunk (#002) ...
Wed 22:06: Building the CORE arithmetic unit for "conv13_dw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 144
Wed 22:06: CORE coefficient vector size: 144
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: Ifmap buffer configuration 64 x 16
Wed 22:06: loop = false
Wed 22:06: Building the CORE arithmetic unit for "conv13_pw" ...
Wed 22:06: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Wed 22:06: CORE ifmap vector size: 16
Wed 22:06: CORE coefficient vector size: 256
Wed 22:06: CORE ofmap vector size: 16
Wed 22:06: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 22:06: Depthwise coeff ROM depth = 64
Wed 22:06: Pointwise coeff ROM depth = 4096
Wed 22:06: Read for key = conv13_dw
Wed 22:06: Read for key = conv13_pw
Wed 22:06: Compiling kernel "conv13"
Wed 22:06: 
Wed 22:06: Generating padding kernels for DRAM access
Wed 22:06: Instantiating kernel "ifmap_unpad"
Wed 22:06: Compiling kernel "ifmap_unpad"
Wed 22:06: 
Wed 22:06: Instantiating kernel "ofmap_pad"
Wed 22:06: Compiling kernel "ofmap_pad"
Wed 22:06: 
Wed 22:06: Setting up stream connections for conv0
Wed 22:06: Setting up stream connections for conv1
Wed 22:06: Setting up stream connections for conv2
Wed 22:06: Setting up stream connections for conv3
Wed 22:06: Setting up stream connections for conv4
Wed 22:06: Setting up stream connections for conv5
Wed 22:06: Setting up stream connections for conv6
Wed 22:06: Setting up stream connections for conv7
Wed 22:06: Setting up stream connections for conv8
Wed 22:06: Setting up stream connections for conv9
Wed 22:06: Setting up stream connections for conv10
Wed 22:06: Setting up stream connections for conv11
Wed 22:06: Setting up stream connections for conv12
Wed 22:06: Setting up stream connections for conv13
Wed 22:06: DRAM will be used to build the design
Wed 22:06: Setup streams for kernel "conv0"
Wed 22:06: # cycles:       306456
Wed 22:06: # ifmap stream: 150528
Wed 22:06: # coeff stream: 864
Wed 22:06: # ofmap stream: 401408
Wed 22:06: coeff vec size: 144
Wed 22:06: coeff stream bit width: 1152
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv1"
Wed 22:06: # cycles:       103968
Wed 22:06: # ifmap stream: 401408
Wed 22:06: # coeff stream: 2560
Wed 22:06: # ofmap stream: 802816
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv2"
Wed 22:06: # cycles:       415872
Wed 22:06: # ifmap stream: 802816
Wed 22:06: # coeff stream: 9216
Wed 22:06: # ofmap stream: 401408
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv3"
Wed 22:06: # cycles:       215296
Wed 22:06: # ifmap stream: 401408
Wed 22:06: # coeff stream: 18432
Wed 22:06: # ofmap stream: 401408
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv4"
Wed 22:06: # cycles:       430592
Wed 22:06: # ifmap stream: 401408
Wed 22:06: # coeff stream: 34816
Wed 22:06: # ofmap stream: 200704
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv5"
Wed 22:06: # cycles:       230400
Wed 22:06: # ifmap stream: 200704
Wed 22:06: # coeff stream: 69632
Wed 22:06: # ofmap stream: 200704
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv6"
Wed 22:06: # cycles:       460800
Wed 22:06: # ifmap stream: 200704
Wed 22:06: # coeff stream: 135168
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv7"
Wed 22:06: # cycles:       262144
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 270336
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv8"
Wed 22:06: # cycles:       262144
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 270336
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv9"
Wed 22:06: # cycles:       262144
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 270336
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv10"
Wed 22:06: # cycles:       262144
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 270336
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv11"
Wed 22:06: # cycles:       262144
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 270336
Wed 22:06: # ofmap stream: 100352
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv12"
Wed 22:06: # cycles:       524288
Wed 22:06: # ifmap stream: 100352
Wed 22:06: # coeff stream: 532480
Wed 22:06: # ofmap stream: 50176
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:06: Setup streams for kernel "conv13"
Wed 22:06: # cycles:       331776
Wed 22:06: # ifmap stream: 50176
Wed 22:06: # coeff stream: 1064960
Wed 22:06: # ofmap stream: 50176
Wed 22:06: coeff vec size: 2304
Wed 22:06: coeff stream bit width: 18432
Wed 22:06: coeff stream chunk size: 9
Wed 22:09: Generating input files (VHDL, netlists, vendor specific IP cores)
