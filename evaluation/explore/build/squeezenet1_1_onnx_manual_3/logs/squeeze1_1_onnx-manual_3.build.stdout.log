Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=squeezenet1_1_onnx_manual_3 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 Squeezenet11OnnxManual3Manager \
	DFEModel=MAIA maxFileName=Squeezenet11OnnxManual3 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_3/data/data-squeeze1_1_onnx-manual_3.txt 
]0; maxJavaRun: Squeezenet11OnnxManual3Manager DFEModel=MAIA maxFileName=Squeezenet11OnnxManual3 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_3/data/data-squeeze1_1_onnx-manual_3.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : squeezenet1_1_onnx_manual_3
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : squeezenet1_1_onnx_manual_3.Squeezenet11OnnxManual3Manager
Class arguments     : DFEModel=MAIA maxFileName=Squeezenet11OnnxManual3 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_3/data/data-squeeze1_1_onnx-manual_3.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Fri 01:16: MaxCompiler version: 2021.1
Fri 01:16: Build "Squeezenet11OnnxManual3" start time: Fri Dec 31 01:16:57 GMT 2021
Fri 01:16: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Fri 01:16: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200
Fri 01:16: Detailed build log available in "_build.log"
Fri 01:16: 
Fri 01:16: ENGINE BUILD PARAMETERS
Fri 01:16: 	              Build name: Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200                                                                                         
Fri 01:16: 	             maxFileName: Squeezenet11OnnxManual3                                                                                                           
Fri 01:16: 	                  target: DFE                                                                                                                               
Fri 01:16: 	                DFEModel: MAIA                                                                                                                              
Fri 01:16: 	              enableMPCX: false                                                                                                                             
Fri 01:16: 	                bitWidth: 32                                                                                                                                
Fri 01:16: 	                     WBW: 32                                                                                                                                
Fri 01:16: 	                   DTYPE: fixed                                                                                                                             
Fri 01:16: 	           NUM_FRAC_BITS: 8                                                                                                                                 
Fri 01:16: 	                      PF: 1                                                                                                                                 
Fri 01:16: 	                      PC: 1                                                                                                                                 
Fri 01:16: 	                      PK: 1                                                                                                                                 
Fri 01:16: 	                       H: 1                                                                                                                                 
Fri 01:16: 	                       W: 1                                                                                                                                 
Fri 01:16: 	                       C: 1                                                                                                                                 
Fri 01:16: 	                       F: 1                                                                                                                                 
Fri 01:16: 	                       K: 1                                                                                                                                 
Fri 01:16: 	                     PAD: 0                                                                                                                                 
Fri 01:16: 	                       S: 1                                                                                                                                 
Fri 01:16: 	                     SEQ: 0                                                                                                                                 
Fri 01:16: 	                    FREQ: 200                                                                                                                               
Fri 01:16: 	                USE_DRAM: false                                                                                                                             
Fri 01:16: 	                 USE_BNN: false                                                                                                                             
Fri 01:16: 	            USE_WINOGRAD: false                                                                                                                             
Fri 01:16: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                             
Fri 01:16: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                 
Fri 01:16: 	                   DEBUG: false                                                                                                                             
Fri 01:16: 	           COEFF_ON_CHIP: false                                                                                                                             
Fri 01:16: 	              INIT_COEFF: false                                                                                                                             
Fri 01:16: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_3/data/data-squeeze1_1_onnx-manual_3.txt
Fri 01:17: Generating kernel squeezenet0conv0fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv0fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 223, output height = 223, pad = 0
Fri 01:17: Counter H = 223 W = 223
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 65536 x 3
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv0fwd" ...
Fri 01:17: Line buffer shape 3 x 223, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 3, output vector size: 27.
Fri 01:17: Number of separated line buffers: 3
Fri 01:17: Initialising line buffer kernel with 3 x 223 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 223 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 223 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv0fwd of depth 4 and type {DFEVectorType: 432 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4ef37659
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv0fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 27
Fri 01:17: CORE coefficient vector size: 432
Fri 01:17: CORE ofmap vector size: 16
Fri 01:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv0fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0pool0fwd ...
Fri 01:17: Instantiating kernel "squeezenet0pool0fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 111, output height = 111, pad = 0
Fri 01:17: Counter H = 111 W = 111
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Building line buffer for "squeezenet0pool0fwd" ...
Fri 01:17: Line buffer shape 3 x 111, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 16, output vector size: 144.
Fri 01:17: Number of separated line buffers: 16
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 111 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0pool0fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv1fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv1fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 0
Fri 01:17: Counter H = 55 W = 55
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 16
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv1fwd of depth 16 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@549debdb
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv1fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 16
Fri 01:17: CORE coefficient vector size: 64
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv1fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv2fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv2fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 0
Fri 01:17: Counter H = 55 W = 55
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 16384 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv2fwd of depth 64 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@170b27a7
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv2fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv2fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv3fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv3fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 1
Fri 01:17: Counter H = 57 W = 57
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 16384 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv3fwd" ...
Fri 01:17: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv3fwd of depth 64 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7b9b244e
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv3fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv3fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat0 ...
Fri 01:17: Instantiating kernel "squeezenet0concat0"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat0"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv4fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv4fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 0
Fri 01:17: Counter H = 55 W = 55
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv4fwd of depth 64 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2dca3c72
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv4fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 32
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv4fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv5fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv5fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 0
Fri 01:17: Counter H = 55 W = 55
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 16384 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv5fwd of depth 64 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5a342baf
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv5fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv5fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv6fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv6fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 1
Fri 01:17: Counter H = 57 W = 57
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 16384 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv6fwd" ...
Fri 01:17: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 57 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv6fwd of depth 64 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4a52c13c
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv6fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv6fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat1 ...
Fri 01:17: Instantiating kernel "squeezenet0concat1"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat1"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0pool1fwd ...
Fri 01:17: Instantiating kernel "squeezenet0pool1fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 55, output height = 55, pad = 0
Fri 01:17: Counter H = 55 W = 55
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Building line buffer for "squeezenet0pool1fwd" ...
Fri 01:17: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 8, output vector size: 72.
Fri 01:17: Number of separated line buffers: 8
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 55 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0pool1fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv7fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv7fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 0
Fri 01:17: Counter H = 27 W = 27
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 1024 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv7fwd of depth 128 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@c7b1703
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv7fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 32
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv7fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv8fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv8fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 0
Fri 01:17: Counter H = 27 W = 27
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 8192 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv8fwd of depth 256 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4f67d2b2
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv8fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv8fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv9fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv9fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 1
Fri 01:17: Counter H = 29 W = 29
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 8192 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv9fwd" ...
Fri 01:17: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv9fwd of depth 256 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4a57771a
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv9fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv9fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat2 ...
Fri 01:17: Instantiating kernel "squeezenet0concat2"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat2"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv10fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv10fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 0
Fri 01:17: Counter H = 27 W = 27
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 1024 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv10fwd of depth 256 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@72373e0b
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv10fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 32
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv10fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv11fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv11fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 0
Fri 01:17: Counter H = 27 W = 27
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 8192 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv11fwd of depth 256 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@205339e0
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv11fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv11fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv12fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv12fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 1
Fri 01:17: Counter H = 29 W = 29
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 8192 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv12fwd" ...
Fri 01:17: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 29 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv12fwd of depth 256 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@36f8ea6
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv12fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv12fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat3 ...
Fri 01:17: Instantiating kernel "squeezenet0concat3"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat3"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0pool2fwd ...
Fri 01:17: Instantiating kernel "squeezenet0pool2fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 27, output height = 27, pad = 0
Fri 01:17: Counter H = 27 W = 27
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Building line buffer for "squeezenet0pool2fwd" ...
Fri 01:17: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 8, output vector size: 72.
Fri 01:17: Number of separated line buffers: 8
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 27 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0pool2fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv13fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv13fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 256 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv13fwd of depth 512 and type {DFEVectorType: 24 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@380f5cac
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv13fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 24
Fri 01:17: CORE ofmap vector size: 3
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv13fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv14fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv14fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 3
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv14fwd of depth 1024 and type {DFEVectorType: 9 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3b2bc1cd
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv14fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 3
Fri 01:17: CORE coefficient vector size: 9
Fri 01:17: CORE ofmap vector size: 3
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv14fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv15fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv15fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 1
Fri 01:17: Counter H = 15 W = 15
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 3
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv15fwd" ...
Fri 01:17: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 3, output vector size: 27.
Fri 01:17: Number of separated line buffers: 3
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv15fwd of depth 1024 and type {DFEVectorType: 81 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6bdebaef
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv15fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 27
Fri 01:17: CORE coefficient vector size: 81
Fri 01:17: CORE ofmap vector size: 3
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv15fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat4 ...
Fri 01:17: Instantiating kernel "squeezenet0concat4"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat4"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv16fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv16fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 256 x 6
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv16fwd of depth 1024 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1777d3eb
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv16fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 6
Fri 01:17: CORE coefficient vector size: 18
Fri 01:17: CORE ofmap vector size: 3
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv16fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv17fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv17fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 3
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv17fwd of depth 768 and type {DFEVectorType: 12 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5aace3f9
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv17fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 3
Fri 01:17: CORE coefficient vector size: 12
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv17fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv18fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv18fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 1
Fri 01:17: Counter H = 15 W = 15
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 3
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv18fwd" ...
Fri 01:17: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 3, output vector size: 27.
Fri 01:17: Number of separated line buffers: 3
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv18fwd of depth 768 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@389a2431
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv18fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 27
Fri 01:17: CORE coefficient vector size: 108
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv18fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat5 ...
Fri 01:17: Instantiating kernel "squeezenet0concat5"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat5"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv19fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv19fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 256 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv19fwd of depth 768 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@62824af7
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv19fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 32
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv19fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv20fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv20fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv20fwd of depth 1024 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@29a3f6e4
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv20fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv20fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv21fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv21fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 1
Fri 01:17: Counter H = 15 W = 15
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv21fwd" ...
Fri 01:17: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv21fwd of depth 1024 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6e1d42fa
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv21fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv21fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat6 ...
Fri 01:17: Instantiating kernel "squeezenet0concat6"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat6"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv22fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv22fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 256 x 8
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv22fwd of depth 1024 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6021138f
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv22fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 8
Fri 01:17: CORE coefficient vector size: 32
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Connecting to output: ofmap_1
Fri 01:17: Compiling kernel "squeezenet0conv22fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv23fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv23fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 4
Fri 01:17: loop = false
Fri 01:17: ROM created for squeezenet0conv23fwd of depth 1024 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@da32ee2
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv23fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 4
Fri 01:17: CORE coefficient vector size: 16
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv23fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv24fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv24fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 1
Fri 01:17: Counter H = 15 W = 15
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 4096 x 4
Fri 01:17: loop = false
Fri 01:17: Building line buffer for "squeezenet0conv24fwd" ...
Fri 01:17: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Fri 01:17: Line buffer input vector size: 4, output vector size: 36.
Fri 01:17: Number of separated line buffers: 4
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: Initialising line buffer kernel with 3 x 15 x 1
Fri 01:17: Size of line buffer output: 3
Fri 01:17: Number of line buffer output chunks: 3
Fri 01:17: Connecting outputs from chunk (#000) ...
Fri 01:17: Connecting outputs from chunk (#001) ...
Fri 01:17: Connecting outputs from chunk (#002) ...
Fri 01:17: ROM created for squeezenet0conv24fwd of depth 1024 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@771668d6
Fri 01:17: Building the CORE arithmetic unit for "squeezenet0conv24fwd" ...
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: CORE ifmap vector size: 36
Fri 01:17: CORE coefficient vector size: 144
Fri 01:17: CORE ofmap vector size: 4
Fri 01:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 01:17: Connecting to output: ofmap
Fri 01:17: Compiling kernel "squeezenet0conv24fwd"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0concat7 ...
Fri 01:17: Instantiating kernel "squeezenet0concat7"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: Compiling kernel "squeezenet0concat7"
Fri 01:17: 
Fri 01:17: Generating kernel squeezenet0conv25fwd ...
Fri 01:17: Instantiating kernel "squeezenet0conv25fwd"
Fri 01:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:17: coeffOnChip = true
Fri 01:17: Input height = 13, output height = 13, pad = 0
Fri 01:17: Counter H = 13 W = 13
Fri 01:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 01:17: Ifmap buffer configuration 256 x 8
Fri 01:17: loop = false
Fri 01:18: ROM created for squeezenet0conv25fwd of depth 1344 and type {DFEVectorType: 384 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@191e7744
Fri 01:18: Building the CORE arithmetic unit for "squeezenet0conv25fwd" ...
Fri 01:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 01:18: CORE ifmap vector size: 8
Fri 01:18: CORE coefficient vector size: 384
Fri 01:18: CORE ofmap vector size: 48
Fri 01:18: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 01:18: Connecting to output: ofmap
Fri 01:18: Compiling kernel "squeezenet0conv25fwd"
Fri 01:18: 
Fri 01:18: Generating padding kernels for DRAM access
Fri 01:18: Instantiating kernel "ifmap_unpad"
Fri 01:18: Compiling kernel "ifmap_unpad"
Fri 01:18: 
Fri 01:18: Instantiating kernel "ofmap_pad"
Fri 01:18: Compiling kernel "ofmap_pad"
Fri 01:18: 
Fri 01:18: Setting up stream connections for squeezenet0conv0fwd
Fri 01:18: Setting up stream connections for squeezenet0pool0fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv0fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv1fwd
Fri 01:18: Connecting ifmap <== squeezenet0pool0fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv2fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv1fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv3fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv1fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat0
Fri 01:18: Connecting ifmap <== squeezenet0conv2fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv3fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv4fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat0: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv5fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv4fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv6fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv4fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat1
Fri 01:18: Connecting ifmap <== squeezenet0conv5fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv6fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0pool1fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat1: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv7fwd
Fri 01:18: Connecting ifmap <== squeezenet0pool1fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv8fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv7fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv9fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv7fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat2
Fri 01:18: Connecting ifmap <== squeezenet0conv8fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv9fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv10fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat2: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv11fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv10fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv12fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv10fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat3
Fri 01:18: Connecting ifmap <== squeezenet0conv11fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv12fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0pool2fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat3: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv13fwd
Fri 01:18: Connecting ifmap <== squeezenet0pool2fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv14fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv13fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv15fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv13fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat4
Fri 01:18: Connecting ifmap <== squeezenet0conv14fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv15fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv16fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat4: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv17fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv16fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv18fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv16fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat5
Fri 01:18: Connecting ifmap <== squeezenet0conv17fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv18fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv19fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat5: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv20fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv19fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv21fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv19fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat6
Fri 01:18: Connecting ifmap <== squeezenet0conv20fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv21fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv22fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat6: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv23fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv22fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv24fwd
Fri 01:18: Connecting ifmap <== squeezenet0conv22fwd: ofmap_1
Fri 01:18: Setting up stream connections for squeezenet0concat7
Fri 01:18: Connecting ifmap <== squeezenet0conv23fwd: ofmap
Fri 01:18: Connecting ifmap_1 <== squeezenet0conv24fwd: ofmap
Fri 01:18: Setting up stream connections for squeezenet0conv25fwd
Fri 01:18: Connecting ifmap <== squeezenet0concat7: ofmap
Fri 01:18: DRAM will be used to build the design
Fri 01:18: Setup streams for kernel "squeezenet0conv0fwd"
Fri 01:18: # cycles:       198916
Fri 01:18: # ifmap stream: 149187
Fri 01:18: # ofmap stream: 788544
Fri 01:18: coeff vec size: 432
Fri 01:18: coeff stream bit width: 6912
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0pool0fwd"
Fri 01:18: # cycles:       49284
Fri 01:18: # ifmap stream: 788544
Fri 01:18: # ofmap stream: 193600
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv1fwd"
Fri 01:18: # cycles:       48400
Fri 01:18: # ifmap stream: 193600
Fri 01:18: # ofmap stream: 48400
Fri 01:18: coeff vec size: 64
Fri 01:18: coeff stream bit width: 1024
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv2fwd"
Fri 01:18: # cycles:       193600
Fri 01:18: # ifmap stream: 48400
Fri 01:18: # ofmap stream: 193600
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv3fwd"
Fri 01:18: # cycles:       207936
Fri 01:18: # ifmap stream: 48400
Fri 01:18: # ofmap stream: 193600
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat0"
Fri 01:18: # cycles:       48400
Fri 01:18: # ifmap stream: 193600
Fri 01:18: # ofmap stream: 387200
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv4fwd"
Fri 01:18: # cycles:       193600
Fri 01:18: # ifmap stream: 387200
Fri 01:18: # ofmap stream: 48400
Fri 01:18: coeff vec size: 32
Fri 01:18: coeff stream bit width: 512
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv5fwd"
Fri 01:18: # cycles:       193600
Fri 01:18: # ifmap stream: 48400
Fri 01:18: # ofmap stream: 193600
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv6fwd"
Fri 01:18: # cycles:       207936
Fri 01:18: # ifmap stream: 48400
Fri 01:18: # ofmap stream: 193600
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat1"
Fri 01:18: # cycles:       48400
Fri 01:18: # ifmap stream: 193600
Fri 01:18: # ofmap stream: 387200
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0pool1fwd"
Fri 01:18: # cycles:       48400
Fri 01:18: # ifmap stream: 387200
Fri 01:18: # ofmap stream: 93312
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv7fwd"
Fri 01:18: # cycles:       93312
Fri 01:18: # ifmap stream: 93312
Fri 01:18: # ofmap stream: 23328
Fri 01:18: coeff vec size: 32
Fri 01:18: coeff stream bit width: 512
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv8fwd"
Fri 01:18: # cycles:       186624
Fri 01:18: # ifmap stream: 23328
Fri 01:18: # ofmap stream: 93312
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv9fwd"
Fri 01:18: # cycles:       215296
Fri 01:18: # ifmap stream: 23328
Fri 01:18: # ofmap stream: 93312
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat2"
Fri 01:18: # cycles:       23328
Fri 01:18: # ifmap stream: 93312
Fri 01:18: # ofmap stream: 186624
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv10fwd"
Fri 01:18: # cycles:       186624
Fri 01:18: # ifmap stream: 186624
Fri 01:18: # ofmap stream: 23328
Fri 01:18: coeff vec size: 32
Fri 01:18: coeff stream bit width: 512
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv11fwd"
Fri 01:18: # cycles:       186624
Fri 01:18: # ifmap stream: 23328
Fri 01:18: # ofmap stream: 93312
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv12fwd"
Fri 01:18: # cycles:       215296
Fri 01:18: # ifmap stream: 23328
Fri 01:18: # ofmap stream: 93312
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat3"
Fri 01:18: # cycles:       23328
Fri 01:18: # ifmap stream: 93312
Fri 01:18: # ofmap stream: 186624
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0pool2fwd"
Fri 01:18: # cycles:       23328
Fri 01:18: # ifmap stream: 186624
Fri 01:18: # ofmap stream: 43264
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv13fwd"
Fri 01:18: # cycles:       86528
Fri 01:18: # ifmap stream: 43264
Fri 01:18: # ofmap stream: 8112
Fri 01:18: coeff vec size: 24
Fri 01:18: coeff stream bit width: 384
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv14fwd"
Fri 01:18: # cycles:       173056
Fri 01:18: # ifmap stream: 8112
Fri 01:18: # ofmap stream: 32448
Fri 01:18: coeff vec size: 9
Fri 01:18: coeff stream bit width: 144
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv15fwd"
Fri 01:18: # cycles:       230400
Fri 01:18: # ifmap stream: 8112
Fri 01:18: # ofmap stream: 32448
Fri 01:18: coeff vec size: 81
Fri 01:18: coeff stream bit width: 1296
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat4"
Fri 01:18: # cycles:       10816
Fri 01:18: # ifmap stream: 32448
Fri 01:18: # ofmap stream: 64896
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv16fwd"
Fri 01:18: # cycles:       173056
Fri 01:18: # ifmap stream: 64896
Fri 01:18: # ofmap stream: 8112
Fri 01:18: coeff vec size: 18
Fri 01:18: coeff stream bit width: 288
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv17fwd"
Fri 01:18: # cycles:       129792
Fri 01:18: # ifmap stream: 8112
Fri 01:18: # ofmap stream: 32448
Fri 01:18: coeff vec size: 12
Fri 01:18: coeff stream bit width: 192
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv18fwd"
Fri 01:18: # cycles:       172800
Fri 01:18: # ifmap stream: 8112
Fri 01:18: # ofmap stream: 32448
Fri 01:18: coeff vec size: 108
Fri 01:18: coeff stream bit width: 1728
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat5"
Fri 01:18: # cycles:       8112
Fri 01:18: # ifmap stream: 32448
Fri 01:18: # ofmap stream: 64896
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv19fwd"
Fri 01:18: # cycles:       129792
Fri 01:18: # ifmap stream: 64896
Fri 01:18: # ofmap stream: 10816
Fri 01:18: coeff vec size: 32
Fri 01:18: coeff stream bit width: 512
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv20fwd"
Fri 01:18: # cycles:       173056
Fri 01:18: # ifmap stream: 10816
Fri 01:18: # ofmap stream: 43264
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv21fwd"
Fri 01:18: # cycles:       230400
Fri 01:18: # ifmap stream: 10816
Fri 01:18: # ofmap stream: 43264
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat6"
Fri 01:18: # cycles:       10816
Fri 01:18: # ifmap stream: 43264
Fri 01:18: # ofmap stream: 86528
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv22fwd"
Fri 01:18: # cycles:       173056
Fri 01:18: # ifmap stream: 86528
Fri 01:18: # ofmap stream: 10816
Fri 01:18: coeff vec size: 32
Fri 01:18: coeff stream bit width: 512
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv23fwd"
Fri 01:18: # cycles:       173056
Fri 01:18: # ifmap stream: 10816
Fri 01:18: # ofmap stream: 43264
Fri 01:18: coeff vec size: 16
Fri 01:18: coeff stream bit width: 256
Fri 01:18: coeff stream chunk size: 1
Fri 01:18: Setup streams for kernel "squeezenet0conv24fwd"
Fri 01:18: # cycles:       230400
Fri 01:18: # ifmap stream: 10816
Fri 01:18: # ofmap stream: 43264
Fri 01:18: coeff vec size: 144
Fri 01:18: coeff stream bit width: 2304
Fri 01:18: coeff stream chunk size: 9
Fri 01:18: Setup streams for kernel "squeezenet0concat7"
Fri 01:18: # cycles:       10816
Fri 01:18: # ifmap stream: 43264
Fri 01:18: # ofmap stream: 86528
Fri 01:18: coeff vec size: 0
Fri 01:18: coeff stream bit width: 0
Fri 01:18: coeff stream chunk size: 0
Fri 01:18: Setup streams for kernel "squeezenet0conv25fwd"
Fri 01:18: # cycles:       227136
Fri 01:18: # ifmap stream: 86528
Fri 01:18: # ofmap stream: 170352
Fri 01:18: coeff vec size: 384
Fri 01:18: coeff stream bit width: 6144
Fri 01:18: coeff stream chunk size: 1
Fri 01:19: Generating input files (VHDL, netlists, vendor specific IP cores)
Fri 02:58: Running back-end  build (15 phases)
Fri 02:58: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Fri 02:58: (2/15) - Synthesize DFE Modules (VivadoSynth)
Fri 02:58: Executing Synthesis Strategy VIVADO_DEFAULT
Fri 04:00: (3/15) - Generate Resource Report (VivadoResourceUsage)
Fri 04:01: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Fri 04:02: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Fri 04:02: 
Fri 04:02: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Fri 04:02: For this compile, we estimate this process may take longer than 1 hour.
Fri 04:02: We recommend running in simulation to verify correctness before building hardware.
Fri 04:02: 
Fri 04:02: PRELIMINARY RESOURCE USAGE
Fri 04:02: FPGA: xcVU9P-FLGB2104-2-E
Fri 04:02: Logic utilization:      671262 / 3546720 (18.93%)
Fri 04:02:   LUTs:                 133255 / 1182240 (11.27%)
Fri 04:02:   Primary FFs:          538007 / 2364480 (22.75%)
Fri 04:02: DSP blocks:               2449 / 6840    (35.80%)
Fri 04:02: Block memory (BRAM18):    1946 / 4320    (45.05%)
Fri 04:02: Block memory (URAM):       142 / 960     (14.79%)
Fri 04:02: 
Fri 04:02: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Fri 04:02: 
Fri 04:02: PRELIMINARY POWER REPORT
Fri 04:02: Total On-Chip Power (W) 12.23 (budget: 91.80) 
Fri 04:02: Dynamic Power (W)        9.51 
Fri 04:02: Device Static Power(W)   2.72 
Fri 04:02: 
Fri 04:02: (7/15) - Place DFE (VivadoImplementation)
Fri 04:02: Executing the following 10 Implementation Strategies in 4 threads:
Fri 04:02:  - VIVADO_DEFAULT
Fri 04:02:  - MAXELER1
Fri 04:02:  - MAXELER2
Fri 04:02:  - MAXELER3
Fri 04:02:  - MAXELER4
Fri 04:02:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Fri 04:02:  - PERFORMANCE_EXPLORE
Fri 04:02:  - PERFORMANCE_EXTRA_TIMING_OPT
Fri 04:02:  - PERFORMANCE_NET_DELAY_HIGH
Fri 04:02:  - PERFORMANCE_REFINE_PLACEMENT
Fri 07:00: Implementation: Strategy "VIVADO_DEFAULT" met timing with score 0 (best score 0)
Fri 07:00: Implementation: Strategy "MAXELER3" was cancelled (no timing score)
Fri 07:00: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Fri 07:00: Implementation: Strategy "MAXELER2" was cancelled (no timing score)
Fri 07:00: (8/15) - Generate Resource Report (VivadoResourceUsage)
Fri 07:00: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Fri 07:01: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Fri 07:01: 
Fri 07:01: FINAL POWER REPORT
Fri 07:01: Total On-Chip Power (W) 13.06 (budget: 91.80) 
Fri 07:01: Dynamic Power (W)       10.32 
Fri 07:01: Device Static Power(W)   2.74 
Fri 07:01: 
Fri 07:01: (11/15) - Generate Configuration (VivadoBitgen)
Fri 07:15: (12/15) - Update Checksum (VivadoUpdateChecksum)
Fri 07:19: (13/15) - Convert Programming File (VivadoCfgfileGen)
Fri 07:19: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Fri 07:19: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Fri 07:20: 
Fri 07:20: FINAL RESOURCE USAGE
Fri 07:20: FPGA: xcVU9P-FLGB2104-2-E
Fri 07:20: Logic utilization:      527825 / 3546720 (14.88%)
Fri 07:20:   LUTs:                 117688 / 1182240 (9.95%)
Fri 07:20:   Primary FFs:          410137 / 2364480 (17.35%)
Fri 07:20: DSP blocks:               2308 / 6840    (33.74%)
Fri 07:20: Block memory (BRAM18):    1946 / 4320    (45.05%)
Fri 07:20: Block memory (URAM):       142 / 960     (14.79%)
Fri 07:20: 
Fri 07:20: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max (MD5Sum: f53dbd92896969e8ad8622abd5850b41)
Fri 07:20: Build completed: Fri Dec 31 07:20:09 GMT 2021 (took 6 hours, 3 mins, 12 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/../scratch/Squeezenet11OnnxManual3.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/../scratch/Squeezenet11OnnxManual3.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max Squeezenet11OnnxManual3_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_4954544600350601746/cobject/max_536931353154288957.c -o /tmp/sliccompile_4954544600350601746/cobject/max_536931353154288957.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual3.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_8203028213961498185.o 
ld -r /tmp/sliccompile_4954544600350601746/cobject/max_536931353154288957.c.o max_8203028213961498185.o -o Squeezenet11OnnxManual3_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_3'
g++ ../../src/squeezenet1_1_onnx_manual_3/Squeezenet11OnnxManual3CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual3_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=Squeezenet11OnnxManual3 -c -o Squeezenet11OnnxManual3_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o Squeezenet11OnnxManual3_FREQ_200_dfe Squeezenet11OnnxManual3_FREQ_200_dfe.o Squeezenet11OnnxManual3_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
