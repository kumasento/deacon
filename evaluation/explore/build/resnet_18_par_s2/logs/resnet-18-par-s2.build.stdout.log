Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=resnet_18_par_s2 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 Resnet18ParS2Manager \
	DFEModel=MAIA maxFileName=Resnet18ParS2 target='DFE' enableMPCX=false \
	FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/resnet_18_par_s2/data/data-resnet-18-par-s2.txt 
]0; maxJavaRun: Resnet18ParS2Manager DFEModel=MAIA maxFileName=Resnet18ParS2 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/resnet_18_par_s2/data/data-resnet-18-par-s2.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : resnet_18_par_s2
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : resnet_18_par_s2.Resnet18ParS2Manager
Class arguments     : DFEModel=MAIA maxFileName=Resnet18ParS2 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/resnet_18_par_s2/data/data-resnet-18-par-s2.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Thu 10:48: MaxCompiler version: 2021.1
Thu 10:48: Build "Resnet18ParS2" start time: Thu Dec 23 10:48:00 GMT 2021
Thu 10:48: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Thu 10:48: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet18ParS2_MAIA_DFE_FREQ_300
Thu 10:48: Detailed build log available in "_build.log"
Thu 10:48: 
Thu 10:48: ENGINE BUILD PARAMETERS
Thu 10:48: 	              Build name: Resnet18ParS2_MAIA_DFE_FREQ_300                                                                                
Thu 10:48: 	             maxFileName: Resnet18ParS2                                                                                                  
Thu 10:48: 	                  target: DFE                                                                                                            
Thu 10:48: 	                DFEModel: MAIA                                                                                                           
Thu 10:48: 	              enableMPCX: false                                                                                                          
Thu 10:48: 	                bitWidth: 32                                                                                                             
Thu 10:48: 	                     WBW: 32                                                                                                             
Thu 10:48: 	                   DTYPE: fixed                                                                                                          
Thu 10:48: 	           NUM_FRAC_BITS: 8                                                                                                              
Thu 10:48: 	                      PF: 1                                                                                                              
Thu 10:48: 	                      PC: 1                                                                                                              
Thu 10:48: 	                      PK: 1                                                                                                              
Thu 10:48: 	                       H: 1                                                                                                              
Thu 10:48: 	                       W: 1                                                                                                              
Thu 10:48: 	                       C: 1                                                                                                              
Thu 10:48: 	                       F: 1                                                                                                              
Thu 10:48: 	                       K: 1                                                                                                              
Thu 10:48: 	                     PAD: 0                                                                                                              
Thu 10:48: 	                       S: 1                                                                                                              
Thu 10:48: 	                     SEQ: 0                                                                                                              
Thu 10:48: 	                    FREQ: 300                                                                                                            
Thu 10:48: 	                USE_DRAM: false                                                                                                          
Thu 10:48: 	                 USE_BNN: false                                                                                                          
Thu 10:48: 	            USE_WINOGRAD: false                                                                                                          
Thu 10:48: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                          
Thu 10:48: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                              
Thu 10:48: 	                   DEBUG: false                                                                                                          
Thu 10:48: 	           COEFF_ON_CHIP: false                                                                                                          
Thu 10:48: 	              INIT_COEFF: false                                                                                                          
Thu 10:48: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/resnet_18_par_s2/data/data-resnet-18-par-s2.txt
Thu 10:48: Generating kernel conv0 ...
Thu 10:48: Instantiating kernel "conv0"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 224, output height = 224, pad = 1
Thu 10:48: Counter H = 226 W = 226
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv0
Thu 10:48: Ifmap buffer configuration 262144 x 1
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv0" ...
Thu 10:48: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 1, output vector size: 9.
Thu 10:48: Number of separated line buffers: 1
Thu 10:48: Initialising line buffer kernel with 3 x 226 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv0" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 9
Thu 10:48: CORE coefficient vector size: 18
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv0"
Thu 10:48: 
Thu 10:48: Generating kernel pool0 ...
Thu 10:48: Instantiating kernel "pool0"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 112, output height = 112, pad = 1
Thu 10:48: Counter H = 114 W = 114
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Building line buffer for "pool0" ...
Thu 10:48: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 114 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 114 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "pool0"
Thu 10:48: 
Thu 10:48: Generating kernel conv1 ...
Thu 10:48: Instantiating kernel "conv1"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 56, output height = 56, pad = 1
Thu 10:48: Counter H = 58 W = 58
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv1
Thu 10:48: Ifmap buffer configuration 131072 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv1" ...
Thu 10:48: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv1" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv1"
Thu 10:48: 
Thu 10:48: Generating kernel conv2 ...
Thu 10:48: Instantiating kernel "conv2"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 56, output height = 56, pad = 1
Thu 10:48: Counter H = 58 W = 58
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv2
Thu 10:48: Ifmap buffer configuration 4096 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv2" ...
Thu 10:48: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv2" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 131072 addr_bits =    17
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv2"
Thu 10:48: 
Thu 10:48: Generating kernel conv3 ...
Thu 10:48: Instantiating kernel "conv3"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 56, output height = 56, pad = 1
Thu 10:48: Counter H = 58 W = 58
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv3
Thu 10:48: Ifmap buffer configuration 131072 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv3" ...
Thu 10:48: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv3" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv3"
Thu 10:48: 
Thu 10:48: Generating kernel conv4 ...
Thu 10:48: Instantiating kernel "conv4"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 56, output height = 56, pad = 1
Thu 10:48: Counter H = 58 W = 58
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv4
Thu 10:48: Ifmap buffer configuration 4096 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv4" ...
Thu 10:48: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv4" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 131072 addr_bits =    17
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv4"
Thu 10:48: 
Thu 10:48: Generating kernel conv5 ...
Thu 10:48: Instantiating kernel "conv5"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 56, output height = 56, pad = 1
Thu 10:48: Counter H = 58 W = 58
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv5
Thu 10:48: Ifmap buffer configuration 131072 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv5" ...
Thu 10:48: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 58 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv5" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv5"
Thu 10:48: 
Thu 10:48: Generating kernel shortcut2 ...
Thu 10:48: Instantiating kernel "shortcut2"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: Building pointwise convolution:
Thu 10:48: H = 56 W = 56 F = 128 C = 64 PF = 2 PC = 2
Thu 10:48: Seq = FILTER_MAJOR
Thu 10:48: Read for key = shortcut2
Thu 10:48: Ifmap buffer configuration 131072 x 2
Thu 10:48: loop = false
Thu 10:48: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "shortcut2"
Thu 10:48: 
Thu 10:48: Generating kernel conv6 ...
Thu 10:48: Instantiating kernel "conv6"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 28, output height = 28, pad = 1
Thu 10:48: Counter H = 30 W = 30
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv6
Thu 10:48: Ifmap buffer configuration 1024 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv6" ...
Thu 10:48: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv6" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv6"
Thu 10:48: 
Thu 10:48: Generating kernel conv7 ...
Thu 10:48: Instantiating kernel "conv7"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 28, output height = 28, pad = 1
Thu 10:48: Counter H = 30 W = 30
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv7
Thu 10:48: Ifmap buffer configuration 65536 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv7" ...
Thu 10:48: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv7" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv7"
Thu 10:48: 
Thu 10:48: Generating kernel conv8 ...
Thu 10:48: Instantiating kernel "conv8"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 28, output height = 28, pad = 1
Thu 10:48: Counter H = 30 W = 30
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv8
Thu 10:48: Ifmap buffer configuration 1024 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv8" ...
Thu 10:48: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv8" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv8"
Thu 10:48: 
Thu 10:48: Generating kernel conv9 ...
Thu 10:48: Instantiating kernel "conv9"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 28, output height = 28, pad = 1
Thu 10:48: Counter H = 30 W = 30
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv9
Thu 10:48: Ifmap buffer configuration 65536 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv9" ...
Thu 10:48: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 30 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv9" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv9"
Thu 10:48: 
Thu 10:48: Generating kernel shortcut3 ...
Thu 10:48: Instantiating kernel "shortcut3"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: Building pointwise convolution:
Thu 10:48: H = 28 W = 28 F = 256 C = 128 PF = 2 PC = 2
Thu 10:48: Seq = FILTER_MAJOR
Thu 10:48: Read for key = shortcut3
Thu 10:48: Ifmap buffer configuration 65536 x 2
Thu 10:48: loop = false
Thu 10:48: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "shortcut3"
Thu 10:48: 
Thu 10:48: Generating kernel conv10 ...
Thu 10:48: Instantiating kernel "conv10"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 14, output height = 14, pad = 1
Thu 10:48: Counter H = 16 W = 16
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv10
Thu 10:48: Ifmap buffer configuration 256 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv10" ...
Thu 10:48: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv10" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Compiling kernel "conv10"
Thu 10:48: 
Thu 10:48: Generating kernel conv11 ...
Thu 10:48: Instantiating kernel "conv11"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 14, output height = 14, pad = 1
Thu 10:48: Counter H = 16 W = 16
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv11
Thu 10:48: Ifmap buffer configuration 32768 x 2
Thu 10:48: loop = false
Thu 10:48: Building line buffer for "conv11" ...
Thu 10:48: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 10:48: Line buffer input vector size: 2, output vector size: 18.
Thu 10:48: Number of separated line buffers: 2
Thu 10:48: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:48: Size of line buffer output: 3
Thu 10:48: Number of line buffer output chunks: 3
Thu 10:48: Connecting outputs from chunk (#000) ...
Thu 10:48: Connecting outputs from chunk (#001) ...
Thu 10:48: Connecting outputs from chunk (#002) ...
Thu 10:48: Building the CORE arithmetic unit for "conv11" ...
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: CORE ifmap vector size: 18
Thu 10:48: CORE coefficient vector size: 36
Thu 10:48: CORE ofmap vector size: 2
Thu 10:48: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 10:48: Connecting to output: ofmap
Thu 10:48: Connecting to output: ofmap_1
Thu 10:48: Compiling kernel "conv11"
Thu 10:48: 
Thu 10:48: Generating kernel conv12 ...
Thu 10:48: Instantiating kernel "conv12"
Thu 10:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:48: coeffOnChip = true
Thu 10:48: Input height = 14, output height = 14, pad = 1
Thu 10:48: Counter H = 16 W = 16
Thu 10:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:48: Read for key = conv12
Thu 10:49: Ifmap buffer configuration 256 x 2
Thu 10:49: loop = false
Thu 10:49: Building line buffer for "conv12" ...
Thu 10:49: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 10:49: Line buffer input vector size: 2, output vector size: 18.
Thu 10:49: Number of separated line buffers: 2
Thu 10:49: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Building the CORE arithmetic unit for "conv12" ...
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: CORE ifmap vector size: 18
Thu 10:49: CORE coefficient vector size: 36
Thu 10:49: CORE ofmap vector size: 2
Thu 10:49: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Thu 10:49: Connecting to output: ofmap
Thu 10:49: Connecting to output: ofmap_1
Thu 10:49: Compiling kernel "conv12"
Thu 10:49: 
Thu 10:49: Generating kernel conv13 ...
Thu 10:49: Instantiating kernel "conv13"
Thu 10:49: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: coeffOnChip = true
Thu 10:49: Input height = 14, output height = 14, pad = 1
Thu 10:49: Counter H = 16 W = 16
Thu 10:49: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: Read for key = conv13
Thu 10:49: Ifmap buffer configuration 32768 x 2
Thu 10:49: loop = false
Thu 10:49: Building line buffer for "conv13" ...
Thu 10:49: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 10:49: Line buffer input vector size: 2, output vector size: 18.
Thu 10:49: Number of separated line buffers: 2
Thu 10:49: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 16 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Building the CORE arithmetic unit for "conv13" ...
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: CORE ifmap vector size: 18
Thu 10:49: CORE coefficient vector size: 144
Thu 10:49: CORE ofmap vector size: 8
Thu 10:49: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 10:49: Connecting to output: ofmap
Thu 10:49: Compiling kernel "conv13"
Thu 10:49: 
Thu 10:49: Generating kernel shortcut4 ...
Thu 10:49: Instantiating kernel "shortcut4"
Thu 10:49: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: Building pointwise convolution:
Thu 10:49: H = 14 W = 14 F = 512 C = 256 PF = 8 PC = 2
Thu 10:49: Seq = FILTER_MAJOR
Thu 10:49: Read for key = shortcut4
Thu 10:49: Ifmap buffer configuration 32768 x 2
Thu 10:49: loop = false
Thu 10:49: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 10:49: Connecting to output: ofmap
Thu 10:49: Compiling kernel "shortcut4"
Thu 10:49: 
Thu 10:49: Generating kernel conv14 ...
Thu 10:49: Instantiating kernel "conv14"
Thu 10:49: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: coeffOnChip = true
Thu 10:49: Input height = 7, output height = 7, pad = 1
Thu 10:49: Counter H = 9 W = 9
Thu 10:49: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: Read for key = conv14
Thu 10:49: Ifmap buffer configuration 128 x 8
Thu 10:49: loop = false
Thu 10:49: Building line buffer for "conv14" ...
Thu 10:49: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 10:49: Line buffer input vector size: 8, output vector size: 72.
Thu 10:49: Number of separated line buffers: 8
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Building the CORE arithmetic unit for "conv14" ...
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: CORE ifmap vector size: 72
Thu 10:49: CORE coefficient vector size: 576
Thu 10:49: CORE ofmap vector size: 8
Thu 10:49: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 10:49: Connecting to output: ofmap
Thu 10:49: Compiling kernel "conv14"
Thu 10:49: 
Thu 10:49: Generating kernel conv15 ...
Thu 10:49: Instantiating kernel "conv15"
Thu 10:49: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: coeffOnChip = true
Thu 10:49: Input height = 7, output height = 7, pad = 1
Thu 10:49: Counter H = 9 W = 9
Thu 10:49: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: Read for key = conv15
Thu 10:49: Ifmap buffer configuration 8192 x 8
Thu 10:49: loop = false
Thu 10:49: Building line buffer for "conv15" ...
Thu 10:49: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 10:49: Line buffer input vector size: 8, output vector size: 72.
Thu 10:49: Number of separated line buffers: 8
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:49: Size of line buffer output: 3
Thu 10:49: Number of line buffer output chunks: 3
Thu 10:49: Connecting outputs from chunk (#000) ...
Thu 10:49: Connecting outputs from chunk (#001) ...
Thu 10:49: Connecting outputs from chunk (#002) ...
Thu 10:49: Building the CORE arithmetic unit for "conv15" ...
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: CORE ifmap vector size: 72
Thu 10:49: CORE coefficient vector size: 576
Thu 10:49: CORE ofmap vector size: 8
Thu 10:49: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 10:49: Connecting to output: ofmap
Thu 10:49: Connecting to output: ofmap_1
Thu 10:49: Compiling kernel "conv15"
Thu 10:49: 
Thu 10:49: Generating kernel conv16 ...
Thu 10:49: Instantiating kernel "conv16"
Thu 10:49: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:49: coeffOnChip = true
Thu 10:49: Input height = 7, output height = 7, pad = 1
Thu 10:49: Counter H = 9 W = 9
Thu 10:49: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 10:49: Read for key = conv16
Thu 10:50: Ifmap buffer configuration 128 x 8
Thu 10:50: loop = false
Thu 10:50: Building line buffer for "conv16" ...
Thu 10:50: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 10:50: Line buffer input vector size: 8, output vector size: 72.
Thu 10:50: Number of separated line buffers: 8
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Initialising line buffer kernel with 3 x 9 x 1
Thu 10:50: Size of line buffer output: 3
Thu 10:50: Number of line buffer output chunks: 3
Thu 10:50: Connecting outputs from chunk (#000) ...
Thu 10:50: Connecting outputs from chunk (#001) ...
Thu 10:50: Connecting outputs from chunk (#002) ...
Thu 10:50: Building the CORE arithmetic unit for "conv16" ...
Thu 10:50: WT = dfeFix(2, 0, UNSIGNED)
Thu 10:50: CORE ifmap vector size: 72
Thu 10:50: CORE coefficient vector size: 576
Thu 10:50: CORE ofmap vector size: 8
Thu 10:50: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 10:50: Connecting to output: ofmap
Thu 10:50: Compiling kernel "conv16"
Thu 10:50: 
Thu 10:50: Generating padding kernels for DRAM access
Thu 10:50: Instantiating kernel "ifmap_unpad"
Thu 10:50: Compiling kernel "ifmap_unpad"
Thu 10:50: 
Thu 10:50: Instantiating kernel "ofmap_pad"
Thu 10:50: Compiling kernel "ofmap_pad"
Thu 10:50: 
Thu 10:50: Setting up stream connections for conv0
Thu 10:50: Setting up stream connections for pool0
Thu 10:50: Setting up stream connections for conv1
Thu 10:50: Setting up stream connections for conv2
Thu 10:50: Setting up stream connections for conv3
Thu 10:50: Setting up stream connections for conv4
Thu 10:50: Setting up stream connections for conv5
Thu 10:50: Setting up stream connections for shortcut2
Thu 10:50: Setting up stream connections for conv6
Thu 10:50: Setting up stream connections for conv7
Thu 10:50: Setting up stream connections for conv8
Thu 10:50: Setting up stream connections for conv9
Thu 10:50: Setting up stream connections for shortcut3
Thu 10:50: Setting up stream connections for conv10
Thu 10:50: Setting up stream connections for conv11
Thu 10:50: Setting up stream connections for conv12
Thu 10:50: Setting up stream connections for conv13
Thu 10:50: Setting up stream connections for shortcut4
Thu 10:50: Setting up stream connections for conv14
Thu 10:50: Setting up stream connections for conv15
Thu 10:50: Setting up stream connections for conv16
Thu 10:50: DRAM will be used to build the design
Thu 10:50: Setup streams for kernel "conv0"
Thu 10:50: # cycles:       4903296
Thu 10:50: # ifmap stream: 150528
Thu 10:50: # coeff stream: 1728
Thu 10:50: # ofmap stream: 802816
Thu 10:50: coeff vec size: 18
Thu 10:50: coeff stream bit width: 144
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "pool0"
Thu 10:50: # cycles:       415872
Thu 10:50: # ifmap stream: 802816
Thu 10:50: # coeff stream: 19008
Thu 10:50: # ofmap stream: 200704
Thu 10:50: coeff vec size: 0
Thu 10:50: coeff stream bit width: 0
Thu 10:50: coeff stream chunk size: 0
Thu 10:50: Setup streams for kernel "conv1"
Thu 10:50: # cycles:       3444736
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 36864
Thu 10:50: # ofmap stream: 200704
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv2"
Thu 10:50: # cycles:       3444736
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 36864
Thu 10:50: # ofmap stream: 200704
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv3"
Thu 10:50: # cycles:       3444736
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 36864
Thu 10:50: # ofmap stream: 200704
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv4"
Thu 10:50: # cycles:       3444736
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 36864
Thu 10:50: # ofmap stream: 200704
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv5"
Thu 10:50: # cycles:       6889472
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 73728
Thu 10:50: # ofmap stream: 100352
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "shortcut2"
Thu 10:50: # cycles:       6422528
Thu 10:50: # ifmap stream: 200704
Thu 10:50: # coeff stream: 8192
Thu 10:50: # ofmap stream: 100352
Thu 10:50: coeff vec size: 4
Thu 10:50: coeff stream bit width: 32
Thu 10:50: coeff stream chunk size: 1
Thu 10:50: Setup streams for kernel "conv6"
Thu 10:50: # cycles:       3686400
Thu 10:50: # ifmap stream: 100352
Thu 10:50: # coeff stream: 147456
Thu 10:50: # ofmap stream: 100352
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv7"
Thu 10:50: # cycles:       3686400
Thu 10:50: # ifmap stream: 100352
Thu 10:50: # coeff stream: 147456
Thu 10:50: # ofmap stream: 100352
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv8"
Thu 10:50: # cycles:       3686400
Thu 10:50: # ifmap stream: 100352
Thu 10:50: # coeff stream: 147456
Thu 10:50: # ofmap stream: 100352
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv9"
Thu 10:50: # cycles:       7372800
Thu 10:50: # ifmap stream: 100352
Thu 10:50: # coeff stream: 294912
Thu 10:50: # ofmap stream: 50176
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "shortcut3"
Thu 10:50: # cycles:       6422528
Thu 10:50: # ifmap stream: 100352
Thu 10:50: # coeff stream: 32768
Thu 10:50: # ofmap stream: 50176
Thu 10:50: coeff vec size: 4
Thu 10:50: coeff stream bit width: 32
Thu 10:50: coeff stream chunk size: 1
Thu 10:50: Setup streams for kernel "conv10"
Thu 10:50: # cycles:       4194304
Thu 10:50: # ifmap stream: 50176
Thu 10:50: # coeff stream: 589824
Thu 10:50: # ofmap stream: 50176
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv11"
Thu 10:50: # cycles:       4194304
Thu 10:50: # ifmap stream: 50176
Thu 10:50: # coeff stream: 589824
Thu 10:50: # ofmap stream: 50176
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv12"
Thu 10:50: # cycles:       4194304
Thu 10:50: # ifmap stream: 50176
Thu 10:50: # coeff stream: 589824
Thu 10:50: # ofmap stream: 50176
Thu 10:50: coeff vec size: 36
Thu 10:50: coeff stream bit width: 288
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv13"
Thu 10:50: # cycles:       2097152
Thu 10:50: # ifmap stream: 50176
Thu 10:50: # coeff stream: 1179648
Thu 10:50: # ofmap stream: 25088
Thu 10:50: coeff vec size: 144
Thu 10:50: coeff stream bit width: 1152
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "shortcut4"
Thu 10:50: # cycles:       1605632
Thu 10:50: # ifmap stream: 50176
Thu 10:50: # coeff stream: 131072
Thu 10:50: # ofmap stream: 25088
Thu 10:50: coeff vec size: 16
Thu 10:50: coeff stream bit width: 128
Thu 10:50: coeff stream chunk size: 1
Thu 10:50: Setup streams for kernel "conv14"
Thu 10:50: # cycles:       331776
Thu 10:50: # ifmap stream: 25088
Thu 10:50: # coeff stream: 2359296
Thu 10:50: # ofmap stream: 25088
Thu 10:50: coeff vec size: 576
Thu 10:50: coeff stream bit width: 4608
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv15"
Thu 10:50: # cycles:       331776
Thu 10:50: # ifmap stream: 25088
Thu 10:50: # coeff stream: 2359296
Thu 10:50: # ofmap stream: 25088
Thu 10:50: coeff vec size: 576
Thu 10:50: coeff stream bit width: 4608
Thu 10:50: coeff stream chunk size: 9
Thu 10:50: Setup streams for kernel "conv16"
Thu 10:50: # cycles:       331776
Thu 10:50: # ifmap stream: 25088
Thu 10:50: # coeff stream: 2359296
Thu 10:50: # ofmap stream: 25088
Thu 10:50: coeff vec size: 576
Thu 10:50: coeff stream bit width: 4608
Thu 10:50: coeff stream chunk size: 9
Thu 10:51: Generating input files (VHDL, netlists, vendor specific IP cores)
