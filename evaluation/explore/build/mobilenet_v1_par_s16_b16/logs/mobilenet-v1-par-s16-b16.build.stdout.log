Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v1_par_s16_b16 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 MobilenetV1ParS16B16Manager \
	DFEModel=MAIA maxFileName=MobilenetV1ParS16B16 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16/data/data-mobilenet-v1-par-s16-b16.txt 
]0; maxJavaRun: MobilenetV1ParS16B16Manager DFEModel=MAIA maxFileName=MobilenetV1ParS16B16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16/data/data-mobilenet-v1-par-s16-b16.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v1_par_s16_b16
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v1_par_s16_b16.MobilenetV1ParS16B16Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV1ParS16B16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16/data/data-mobilenet-v1-par-s16-b16.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Mon 22:33: MaxCompiler version: 2021.1
Mon 22:33: Build "MobilenetV1ParS16B16" start time: Mon Dec 27 22:33:04 GMT 2021
Mon 22:33: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Mon 22:33: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200
Mon 22:33: Detailed build log available in "_build.log"
Mon 22:33: 
Mon 22:33: ENGINE BUILD PARAMETERS
Mon 22:33: 	              Build name: MobilenetV1ParS16B16_MAIA_DFE_FREQ_200                                                                                         
Mon 22:33: 	             maxFileName: MobilenetV1ParS16B16                                                                                                           
Mon 22:33: 	                  target: DFE                                                                                                                            
Mon 22:33: 	                DFEModel: MAIA                                                                                                                           
Mon 22:33: 	              enableMPCX: false                                                                                                                          
Mon 22:33: 	                bitWidth: 32                                                                                                                             
Mon 22:33: 	                     WBW: 32                                                                                                                             
Mon 22:33: 	                   DTYPE: fixed                                                                                                                          
Mon 22:33: 	           NUM_FRAC_BITS: 8                                                                                                                              
Mon 22:33: 	                      PF: 1                                                                                                                              
Mon 22:33: 	                      PC: 1                                                                                                                              
Mon 22:33: 	                      PK: 1                                                                                                                              
Mon 22:33: 	                       H: 1                                                                                                                              
Mon 22:33: 	                       W: 1                                                                                                                              
Mon 22:33: 	                       C: 1                                                                                                                              
Mon 22:33: 	                       F: 1                                                                                                                              
Mon 22:33: 	                       K: 1                                                                                                                              
Mon 22:33: 	                     PAD: 0                                                                                                                              
Mon 22:33: 	                       S: 1                                                                                                                              
Mon 22:33: 	                     SEQ: 0                                                                                                                              
Mon 22:33: 	                    FREQ: 200                                                                                                                            
Mon 22:33: 	                USE_DRAM: false                                                                                                                          
Mon 22:33: 	                 USE_BNN: false                                                                                                                          
Mon 22:33: 	            USE_WINOGRAD: false                                                                                                                          
Mon 22:33: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                          
Mon 22:33: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                              
Mon 22:33: 	                   DEBUG: false                                                                                                                          
Mon 22:33: 	           COEFF_ON_CHIP: false                                                                                                                          
Mon 22:33: 	              INIT_COEFF: false                                                                                                                          
Mon 22:33: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16/data/data-mobilenet-v1-par-s16-b16.txt
Mon 22:33: Generating kernel conv0 ...
Mon 22:33: Instantiating kernel "conv0"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 224, output height = 224, pad = 1
Mon 22:33: Counter H = 226 W = 226
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Ifmap buffer configuration 262144 x 1
Mon 22:33: loop = false
Mon 22:33: Building line buffer for "conv0" ...
Mon 22:33: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 1, output vector size: 9.
Mon 22:33: Number of separated line buffers: 1
Mon 22:33: Initialising line buffer kernel with 3 x 226 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Read for key = conv0 depth = 6 raw data = 864
Mon 22:33: ROM created for conv0 of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@fa36558
Mon 22:33: Building the CORE arithmetic unit for "conv0" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 9
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv0"
Mon 22:33: 
Mon 22:33: Generating kernel conv1 ...
Mon 22:33: Instantiating kernel "conv1"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 112, output height = 112, pad = 1
Mon 22:33: Counter H = 114 W = 114
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv1" ...
Mon 22:33: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 2
Mon 22:33: Read for key = conv1_dw depth = 2 raw data = 288
Mon 22:33: ROM created for conv1_dw of depth 2 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4aa21f9d
Mon 22:33: Building the CORE arithmetic unit for "conv1_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 16384 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 8
Mon 22:33: Read for key = conv1_pw depth = 8 raw data = 2048
Mon 22:33: ROM created for conv1_pw of depth 8 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@332bcab0
Mon 22:33: Building the CORE arithmetic unit for "conv1_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv1"
Mon 22:33: 
Mon 22:33: Generating kernel conv2 ...
Mon 22:33: Instantiating kernel "conv2"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 112, output height = 112, pad = 1
Mon 22:33: Counter H = 114 W = 114
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv2" ...
Mon 22:33: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 114 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 4
Mon 22:33: Read for key = conv2_dw depth = 4 raw data = 576
Mon 22:33: ROM created for conv2_dw of depth 4 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@40304938
Mon 22:33: Building the CORE arithmetic unit for "conv2_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 65536 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 32
Mon 22:33: Read for key = conv2_pw depth = 32 raw data = 8192
Mon 22:33: ROM created for conv2_pw of depth 32 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7680beac
Mon 22:33: Building the CORE arithmetic unit for "conv2_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv2"
Mon 22:33: 
Mon 22:33: Generating kernel conv3 ...
Mon 22:33: Instantiating kernel "conv3"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 56, output height = 56, pad = 1
Mon 22:33: Counter H = 58 W = 58
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv3" ...
Mon 22:33: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 8
Mon 22:33: Read for key = conv3_dw depth = 8 raw data = 1152
Mon 22:33: ROM created for conv3_dw of depth 8 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5a33ba9b
Mon 22:33: Building the CORE arithmetic unit for "conv3_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 4096 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 64
Mon 22:33: Read for key = conv3_pw depth = 64 raw data = 16384
Mon 22:33: ROM created for conv3_pw of depth 64 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7a282bad
Mon 22:33: Building the CORE arithmetic unit for "conv3_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv3"
Mon 22:33: 
Mon 22:33: Generating kernel conv4 ...
Mon 22:33: Instantiating kernel "conv4"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 56, output height = 56, pad = 1
Mon 22:33: Counter H = 58 W = 58
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv4" ...
Mon 22:33: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 58 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 8
Mon 22:33: Read for key = conv4_dw depth = 8 raw data = 1152
Mon 22:33: ROM created for conv4_dw of depth 8 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3bf6dc0e
Mon 22:33: Building the CORE arithmetic unit for "conv4_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 32768 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 128
Mon 22:33: Read for key = conv4_pw depth = 128 raw data = 32768
Mon 22:33: ROM created for conv4_pw of depth 128 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@39487f70
Mon 22:33: Building the CORE arithmetic unit for "conv4_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv4"
Mon 22:33: 
Mon 22:33: Generating kernel conv5 ...
Mon 22:33: Instantiating kernel "conv5"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 28, output height = 28, pad = 1
Mon 22:33: Counter H = 30 W = 30
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv5" ...
Mon 22:33: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 16
Mon 22:33: Read for key = conv5_dw depth = 16 raw data = 2304
Mon 22:33: ROM created for conv5_dw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4f9cb2b7
Mon 22:33: Building the CORE arithmetic unit for "conv5_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 1024 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 256
Mon 22:33: Read for key = conv5_pw depth = 256 raw data = 65536
Mon 22:33: ROM created for conv5_pw of depth 256 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@9a82f1d
Mon 22:33: Building the CORE arithmetic unit for "conv5_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv5"
Mon 22:33: 
Mon 22:33: Generating kernel conv6 ...
Mon 22:33: Instantiating kernel "conv6"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 28, output height = 28, pad = 1
Mon 22:33: Counter H = 30 W = 30
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv6" ...
Mon 22:33: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 30 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 16
Mon 22:33: Read for key = conv6_dw depth = 16 raw data = 2304
Mon 22:33: ROM created for conv6_dw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4789c89e
Mon 22:33: Building the CORE arithmetic unit for "conv6_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 16384 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 512
Mon 22:33: Read for key = conv6_pw depth = 512 raw data = 131072
Mon 22:33: ROM created for conv6_pw of depth 512 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@26c0c964
Mon 22:33: Building the CORE arithmetic unit for "conv6_pw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 16
Mon 22:33: CORE coefficient vector size: 256
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Mon 22:33: Connecting to output: ofmap
Mon 22:33: Compiling kernel "conv6"
Mon 22:33: 
Mon 22:33: Generating kernel conv7 ...
Mon 22:33: Instantiating kernel "conv7"
Mon 22:33: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: coeffOnChip = true
Mon 22:33: Input height = 14, output height = 14, pad = 1
Mon 22:33: Counter H = 16 W = 16
Mon 22:33: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:33: Building line buffer for "conv7" ...
Mon 22:33: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:33: Line buffer input vector size: 16, output vector size: 144.
Mon 22:33: Number of separated line buffers: 16
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:33: Size of line buffer output: 3
Mon 22:33: Number of line buffer output chunks: 3
Mon 22:33: Connecting outputs from chunk (#000) ...
Mon 22:33: Connecting outputs from chunk (#001) ...
Mon 22:33: Connecting outputs from chunk (#002) ...
Mon 22:33: Depthwise coeff ROM depth = 32
Mon 22:33: Read for key = conv7_dw depth = 32 raw data = 4608
Mon 22:33: ROM created for conv7_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@342eacb2
Mon 22:33: Building the CORE arithmetic unit for "conv7_dw" ...
Mon 22:33: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:33: CORE ifmap vector size: 144
Mon 22:33: CORE coefficient vector size: 144
Mon 22:33: CORE ofmap vector size: 16
Mon 22:33: Ifmap buffer configuration 256 x 16
Mon 22:33: loop = false
Mon 22:33: Pointwise coeff ROM depth = 1024
Mon 22:34: Read for key = conv7_pw depth = 1024 raw data = 262144
Mon 22:34: ROM created for conv7_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@10d4d67d
Mon 22:34: Building the CORE arithmetic unit for "conv7_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv7"
Mon 22:34: 
Mon 22:34: Generating kernel conv8 ...
Mon 22:34: Instantiating kernel "conv8"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 14, output height = 14, pad = 1
Mon 22:34: Counter H = 16 W = 16
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv8" ...
Mon 22:34: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 32
Mon 22:34: Read for key = conv8_dw depth = 32 raw data = 4608
Mon 22:34: ROM created for conv8_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@44afe4e7
Mon 22:34: Building the CORE arithmetic unit for "conv8_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 8192 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 1024
Mon 22:34: Read for key = conv8_pw depth = 1024 raw data = 262144
Mon 22:34: ROM created for conv8_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@34b1ad34
Mon 22:34: Building the CORE arithmetic unit for "conv8_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv8"
Mon 22:34: 
Mon 22:34: Generating kernel conv9 ...
Mon 22:34: Instantiating kernel "conv9"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 14, output height = 14, pad = 1
Mon 22:34: Counter H = 16 W = 16
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv9" ...
Mon 22:34: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 32
Mon 22:34: Read for key = conv9_dw depth = 32 raw data = 4608
Mon 22:34: ROM created for conv9_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6971dda0
Mon 22:34: Building the CORE arithmetic unit for "conv9_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 256 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 1024
Mon 22:34: Read for key = conv9_pw depth = 1024 raw data = 262144
Mon 22:34: ROM created for conv9_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@608d60d9
Mon 22:34: Building the CORE arithmetic unit for "conv9_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv9"
Mon 22:34: 
Mon 22:34: Generating kernel conv10 ...
Mon 22:34: Instantiating kernel "conv10"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 14, output height = 14, pad = 1
Mon 22:34: Counter H = 16 W = 16
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv10" ...
Mon 22:34: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 32
Mon 22:34: Read for key = conv10_dw depth = 32 raw data = 4608
Mon 22:34: ROM created for conv10_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@12fc281a
Mon 22:34: Building the CORE arithmetic unit for "conv10_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 8192 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 1024
Mon 22:34: Read for key = conv10_pw depth = 1024 raw data = 262144
Mon 22:34: ROM created for conv10_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@67fe0ee8
Mon 22:34: Building the CORE arithmetic unit for "conv10_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv10"
Mon 22:34: 
Mon 22:34: Generating kernel conv11 ...
Mon 22:34: Instantiating kernel "conv11"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 14, output height = 14, pad = 1
Mon 22:34: Counter H = 16 W = 16
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv11" ...
Mon 22:34: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 32
Mon 22:34: Read for key = conv11_dw depth = 32 raw data = 4608
Mon 22:34: ROM created for conv11_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4df4cc5d
Mon 22:34: Building the CORE arithmetic unit for "conv11_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 256 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 1024
Mon 22:34: Read for key = conv11_pw depth = 1024 raw data = 262144
Mon 22:34: ROM created for conv11_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@75cde794
Mon 22:34: Building the CORE arithmetic unit for "conv11_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv11"
Mon 22:34: 
Mon 22:34: Generating kernel conv12 ...
Mon 22:34: Instantiating kernel "conv12"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 14, output height = 14, pad = 1
Mon 22:34: Counter H = 16 W = 16
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv12" ...
Mon 22:34: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 16 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 32
Mon 22:34: Read for key = conv12_dw depth = 32 raw data = 4608
Mon 22:34: ROM created for conv12_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@40ec9f98
Mon 22:34: Building the CORE arithmetic unit for "conv12_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 8192 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 2048
Mon 22:34: Read for key = conv12_pw depth = 2048 raw data = 524288
Mon 22:34: ROM created for conv12_pw of depth 2048 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7451e5d3
Mon 22:34: Building the CORE arithmetic unit for "conv12_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv12"
Mon 22:34: 
Mon 22:34: Generating kernel conv13 ...
Mon 22:34: Instantiating kernel "conv13"
Mon 22:34: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: coeffOnChip = true
Mon 22:34: Input height = 7, output height = 7, pad = 1
Mon 22:34: Counter H = 9 W = 9
Mon 22:34: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Mon 22:34: Building line buffer for "conv13" ...
Mon 22:34: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Mon 22:34: Line buffer input vector size: 16, output vector size: 144.
Mon 22:34: Number of separated line buffers: 16
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Initialising line buffer kernel with 3 x 9 x 1
Mon 22:34: Size of line buffer output: 3
Mon 22:34: Number of line buffer output chunks: 3
Mon 22:34: Connecting outputs from chunk (#000) ...
Mon 22:34: Connecting outputs from chunk (#001) ...
Mon 22:34: Connecting outputs from chunk (#002) ...
Mon 22:34: Depthwise coeff ROM depth = 64
Mon 22:34: Read for key = conv13_dw depth = 64 raw data = 9216
Mon 22:34: ROM created for conv13_dw of depth 64 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7620370e
Mon 22:34: Building the CORE arithmetic unit for "conv13_dw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 144
Mon 22:34: CORE coefficient vector size: 144
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: Ifmap buffer configuration 128 x 16
Mon 22:34: loop = false
Mon 22:34: Pointwise coeff ROM depth = 4096
Mon 22:34: Read for key = conv13_pw depth = 4096 raw data = 1048576
Mon 22:34: ROM created for conv13_pw of depth 4096 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7949e19b
Mon 22:34: Building the CORE arithmetic unit for "conv13_pw" ...
Mon 22:34: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Mon 22:34: CORE ifmap vector size: 16
Mon 22:34: CORE coefficient vector size: 256
Mon 22:34: CORE ofmap vector size: 16
Mon 22:34: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Mon 22:34: Connecting to output: ofmap
Mon 22:34: Compiling kernel "conv13"
Mon 22:34: 
Mon 22:34: Generating padding kernels for DRAM access
Mon 22:34: Instantiating kernel "ifmap_unpad"
Mon 22:34: Compiling kernel "ifmap_unpad"
Mon 22:34: 
Mon 22:34: Instantiating kernel "ofmap_pad"
Mon 22:34: Compiling kernel "ofmap_pad"
Mon 22:34: 
Mon 22:34: Setting up stream connections for conv0
Mon 22:34: Setting up stream connections for conv1
Mon 22:34: Connecting ifmap <== conv0: ofmap
Mon 22:34: Setting up stream connections for conv2
Mon 22:34: Connecting ifmap <== conv1: ofmap
Mon 22:34: Setting up stream connections for conv3
Mon 22:34: Connecting ifmap <== conv2: ofmap
Mon 22:34: Setting up stream connections for conv4
Mon 22:34: Connecting ifmap <== conv3: ofmap
Mon 22:34: Setting up stream connections for conv5
Mon 22:34: Connecting ifmap <== conv4: ofmap
Mon 22:34: Setting up stream connections for conv6
Mon 22:34: Connecting ifmap <== conv5: ofmap
Mon 22:34: Setting up stream connections for conv7
Mon 22:34: Connecting ifmap <== conv6: ofmap
Mon 22:34: Setting up stream connections for conv8
Mon 22:34: Connecting ifmap <== conv7: ofmap
Mon 22:34: Setting up stream connections for conv9
Mon 22:34: Connecting ifmap <== conv8: ofmap
Mon 22:34: Setting up stream connections for conv10
Mon 22:34: Connecting ifmap <== conv9: ofmap
Mon 22:34: Setting up stream connections for conv11
Mon 22:34: Connecting ifmap <== conv10: ofmap
Mon 22:34: Setting up stream connections for conv12
Mon 22:34: Connecting ifmap <== conv11: ofmap
Mon 22:34: Setting up stream connections for conv13
Mon 22:34: Connecting ifmap <== conv12: ofmap
Mon 22:34: DRAM will be used to build the design
Mon 22:34: Setup streams for kernel "conv0"
Mon 22:34: # cycles:       306456
Mon 22:34: # ifmap stream: 150528
Mon 22:34: # ofmap stream: 401408
Mon 22:34: coeff vec size: 144
Mon 22:34: coeff stream bit width: 2304
Mon 22:34: coeff stream chunk size: 9
cp.C = 32
Mon 22:34: Setup streams for kernel "conv1"
Mon 22:34: # cycles:       103968
Mon 22:34: # ifmap stream: 401408
Mon 22:34: # ofmap stream: 802816
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 64
Mon 22:34: Setup streams for kernel "conv2"
Mon 22:34: # cycles:       415872
Mon 22:34: # ifmap stream: 802816
Mon 22:34: # ofmap stream: 401408
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 128
Mon 22:34: Setup streams for kernel "conv3"
Mon 22:34: # cycles:       215296
Mon 22:34: # ifmap stream: 401408
Mon 22:34: # ofmap stream: 401408
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 128
Mon 22:34: Setup streams for kernel "conv4"
Mon 22:34: # cycles:       430592
Mon 22:34: # ifmap stream: 401408
Mon 22:34: # ofmap stream: 200704
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 256
Mon 22:34: Setup streams for kernel "conv5"
Mon 22:34: # cycles:       230400
Mon 22:34: # ifmap stream: 200704
Mon 22:34: # ofmap stream: 200704
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 256
Mon 22:34: Setup streams for kernel "conv6"
Mon 22:34: # cycles:       460800
Mon 22:34: # ifmap stream: 200704
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv7"
Mon 22:34: # cycles:       262144
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv8"
Mon 22:34: # cycles:       262144
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv9"
Mon 22:34: # cycles:       262144
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv10"
Mon 22:34: # cycles:       262144
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv11"
Mon 22:34: # cycles:       262144
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 100352
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 512
Mon 22:34: Setup streams for kernel "conv12"
Mon 22:34: # cycles:       524288
Mon 22:34: # ifmap stream: 100352
Mon 22:34: # ofmap stream: 50176
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
cp.C = 1024
Mon 22:34: Setup streams for kernel "conv13"
Mon 22:34: # cycles:       331776
Mon 22:34: # ifmap stream: 50176
Mon 22:34: # ofmap stream: 50176
Mon 22:34: coeff vec size: 2304
Mon 22:34: coeff stream bit width: 36864
Mon 22:34: coeff stream chunk size: 9
Mon 22:37: Generating input files (VHDL, netlists, vendor specific IP cores)
Tue 00:17: Running back-end  build (15 phases)
Tue 00:17: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Tue 00:17: (2/15) - Synthesize DFE Modules (VivadoSynth)
Tue 00:17: Executing Synthesis Strategy VIVADO_DEFAULT
Tue 02:39: (3/15) - Generate Resource Report (VivadoResourceUsage)
Tue 02:39: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Tue 02:40: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Tue 02:40: 
Tue 02:40: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Tue 02:40: For this compile, we estimate this process may take longer than 1 hour.
Tue 02:40: We recommend running in simulation to verify correctness before building hardware.
Tue 02:40: 
Tue 02:40: PRELIMINARY RESOURCE USAGE
Tue 02:40: FPGA: xcVU9P-FLGB2104-2-E
Tue 02:40: Logic utilization:     1140408 / 3546720 (32.15%)
Tue 02:40:   LUTs:                 148022 / 1182240 (12.52%)
Tue 02:40:   Primary FFs:          992386 / 2364480 (41.97%)
Tue 02:40: DSP blocks:               5365 / 6840    (78.44%)
Tue 02:40: Block memory (BRAM18):    2970 / 4320    (68.75%)
Tue 02:40: Block memory (URAM):       866 / 960     (90.21%)
Tue 02:40: 
Tue 02:40: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Tue 02:40: 
Tue 02:40: PRELIMINARY POWER REPORT
Tue 02:40: Total On-Chip Power (W) 17.17 (budget: 91.80) 
Tue 02:40: Dynamic Power (W)       14.26 
Tue 02:40: Device Static Power(W)   2.91 
Tue 02:40: 
Tue 02:40: (7/15) - Place DFE (VivadoImplementation)
Tue 02:40: Executing the following 10 Implementation Strategies in 4 threads:
Tue 02:40:  - VIVADO_DEFAULT
Tue 02:40:  - MAXELER1
Tue 02:40:  - MAXELER2
Tue 02:40:  - MAXELER3
Tue 02:40:  - MAXELER4
Tue 02:40:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Tue 02:40:  - PERFORMANCE_EXPLORE
Tue 02:40:  - PERFORMANCE_EXTRA_TIMING_OPT
Tue 02:40:  - PERFORMANCE_NET_DELAY_HIGH
Tue 02:40:  - PERFORMANCE_REFINE_PLACEMENT
Tue 07:53: Implementation: Strategy "MAXELER3" met timing with score 0 (best score 0)
Tue 07:53: Implementation: Strategy "MAXELER2" was cancelled (no timing score)
Tue 07:53: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Tue 07:53: Implementation: Strategy "VIVADO_DEFAULT" was cancelled (no timing score)
Tue 07:53: (8/15) - Generate Resource Report (VivadoResourceUsage)
Tue 07:53: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Tue 07:54: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Tue 07:54: 
Tue 07:54: FINAL POWER REPORT
Tue 07:54: Total On-Chip Power (W) 17.28 (budget: 91.80) 
Tue 07:54: Dynamic Power (W)       14.37 
Tue 07:54: Device Static Power(W)   2.91 
Tue 07:54: 
Tue 07:54: (11/15) - Generate Configuration (VivadoBitgen)
Tue 08:16: (12/15) - Update Checksum (VivadoUpdateChecksum)
Tue 08:21: (13/15) - Convert Programming File (VivadoCfgfileGen)
Tue 08:22: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Tue 08:22: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Tue 08:22: 
Tue 08:22: FINAL RESOURCE USAGE
Tue 08:22: FPGA: xcVU9P-FLGB2104-2-E
Tue 08:22: Logic utilization:      852186 / 3546720 (24.03%)
Tue 08:22:   LUTs:                 132450 / 1182240 (11.20%)
Tue 08:22:   Primary FFs:          719736 / 2364480 (30.44%)
Tue 08:22: DSP blocks:               5358 / 6840    (78.33%)
Tue 08:22: Block memory (BRAM18):    2970 / 4320    (68.75%)
Tue 08:22: Block memory (URAM):       866 / 960     (90.21%)
Tue 08:22: 
Tue 08:22: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max (MD5Sum: b82389b12e14bce73062c82898f5837e)
Tue 08:22: Build completed: Tue Dec 28 08:22:22 GMT 2021 (took 9 hours, 49 mins, 18 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV1ParS16B16.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV1ParS16B16.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max MobilenetV1ParS16B16_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_2466764513926924733/cobject/max_8551415944586556445.c -o /tmp/sliccompile_2466764513926924733/cobject/max_8551415944586556445.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_7094847366150163844.o 
ld -r /tmp/sliccompile_2466764513926924733/cobject/max_8551415944586556445.c.o max_7094847366150163844.o -o MobilenetV1ParS16B16_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16'
g++ ../../src/mobilenet_v1_par_s16_b16/MobilenetV1ParS16B16CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=MobilenetV1ParS16B16 -c -o MobilenetV1ParS16B16_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o MobilenetV1ParS16B16_FREQ_200_dfe MobilenetV1ParS16B16_FREQ_200_dfe.o MobilenetV1ParS16B16_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
