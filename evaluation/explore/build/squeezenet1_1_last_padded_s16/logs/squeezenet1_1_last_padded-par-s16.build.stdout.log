Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=squeezenet1_1_last_padded_s16 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 Squeezenet11LastPaddedS16Manager \
	DFEModel=MAIA maxFileName=Squeezenet11LastPaddedS16 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_last_padded_s16/data/data-squeezenet1_1_last_padded-par-s16.txt 
]0; maxJavaRun: Squeezenet11LastPaddedS16Manager DFEModel=MAIA maxFileName=Squeezenet11LastPaddedS16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_last_padded_s16/data/data-squeezenet1_1_last_padded-par-s16.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : squeezenet1_1_last_padded_s16
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : squeezenet1_1_last_padded_s16.Squeezenet11LastPaddedS16Manager
Class arguments     : DFEModel=MAIA maxFileName=Squeezenet11LastPaddedS16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_last_padded_s16/data/data-squeezenet1_1_last_padded-par-s16.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Tue 16:28: MaxCompiler version: 2021.1
Tue 16:28: Build "Squeezenet11LastPaddedS16" start time: Tue Dec 28 16:28:11 GMT 2021
Tue 16:28: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Tue 16:28: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11LastPaddedS16_MAIA_DFE_FREQ_200
Tue 16:28: Detailed build log available in "_build.log"
Tue 16:28: 
Tue 16:28: ENGINE BUILD PARAMETERS
Tue 16:28: 	              Build name: Squeezenet11LastPaddedS16_MAIA_DFE_FREQ_200                                                                                                  
Tue 16:28: 	             maxFileName: Squeezenet11LastPaddedS16                                                                                                                    
Tue 16:28: 	                  target: DFE                                                                                                                                          
Tue 16:28: 	                DFEModel: MAIA                                                                                                                                         
Tue 16:28: 	              enableMPCX: false                                                                                                                                        
Tue 16:28: 	                bitWidth: 32                                                                                                                                           
Tue 16:28: 	                     WBW: 32                                                                                                                                           
Tue 16:28: 	                   DTYPE: fixed                                                                                                                                        
Tue 16:28: 	           NUM_FRAC_BITS: 8                                                                                                                                            
Tue 16:28: 	                      PF: 1                                                                                                                                            
Tue 16:28: 	                      PC: 1                                                                                                                                            
Tue 16:28: 	                      PK: 1                                                                                                                                            
Tue 16:28: 	                       H: 1                                                                                                                                            
Tue 16:28: 	                       W: 1                                                                                                                                            
Tue 16:28: 	                       C: 1                                                                                                                                            
Tue 16:28: 	                       F: 1                                                                                                                                            
Tue 16:28: 	                       K: 1                                                                                                                                            
Tue 16:28: 	                     PAD: 0                                                                                                                                            
Tue 16:28: 	                       S: 1                                                                                                                                            
Tue 16:28: 	                     SEQ: 0                                                                                                                                            
Tue 16:28: 	                    FREQ: 200                                                                                                                                          
Tue 16:28: 	                USE_DRAM: false                                                                                                                                        
Tue 16:28: 	                 USE_BNN: false                                                                                                                                        
Tue 16:28: 	            USE_WINOGRAD: false                                                                                                                                        
Tue 16:28: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                                        
Tue 16:28: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                            
Tue 16:28: 	                   DEBUG: false                                                                                                                                        
Tue 16:28: 	           COEFF_ON_CHIP: false                                                                                                                                        
Tue 16:28: 	              INIT_COEFF: false                                                                                                                                        
Tue 16:28: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_last_padded_s16/data/data-squeezenet1_1_last_padded-par-s16.txt
Tue 16:28: Generating kernel squeezenet0conv0fwd ...
Tue 16:28: Instantiating kernel "squeezenet0conv0fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 223, output height = 223, pad = 0
Tue 16:28: Counter H = 223 W = 223
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Ifmap buffer configuration 262144 x 1
Tue 16:28: loop = false
Tue 16:28: Building line buffer for "squeezenet0conv0fwd" ...
Tue 16:28: Line buffer shape 3 x 223, produces 1 number of 3 x 3 tiles per cycle
Tue 16:28: Line buffer input vector size: 1, output vector size: 9.
Tue 16:28: Number of separated line buffers: 1
Tue 16:28: Initialising line buffer kernel with 3 x 223 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Read for key = squeezenet0conv0fwd depth = 12 raw data = 1728
Tue 16:28: ROM created for squeezenet0conv0fwd of depth 12 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@fa36558
Tue 16:28: Building the CORE arithmetic unit for "squeezenet0conv0fwd" ...
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: CORE ifmap vector size: 9
Tue 16:28: CORE coefficient vector size: 144
Tue 16:28: CORE ofmap vector size: 16
Tue 16:28: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Compiling kernel "squeezenet0conv0fwd"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0pool0fwd ...
Tue 16:28: Instantiating kernel "squeezenet0pool0fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 111, output height = 111, pad = 0
Tue 16:28: Counter H = 111 W = 111
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Building line buffer for "squeezenet0pool0fwd" ...
Tue 16:28: Line buffer shape 3 x 111, produces 1 number of 3 x 3 tiles per cycle
Tue 16:28: Line buffer input vector size: 16, output vector size: 144.
Tue 16:28: Number of separated line buffers: 16
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 111 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Compiling kernel "squeezenet0pool0fwd"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0conv1fwd ...
Tue 16:28: Instantiating kernel "squeezenet0conv1fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 55, output height = 55, pad = 0
Tue 16:28: Counter H = 55 W = 55
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Ifmap buffer configuration 16384 x 16
Tue 16:28: loop = false
Tue 16:28: Read for key = squeezenet0conv1fwd depth = 8 raw data = 1024
Tue 16:28: ROM created for squeezenet0conv1fwd of depth 8 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@59b492ec
Tue 16:28: Building the CORE arithmetic unit for "squeezenet0conv1fwd" ...
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: CORE ifmap vector size: 16
Tue 16:28: CORE coefficient vector size: 128
Tue 16:28: CORE ofmap vector size: 8
Tue 16:28: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Connecting to output: ofmap_1
Tue 16:28: Compiling kernel "squeezenet0conv1fwd"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0conv2fwd ...
Tue 16:28: Instantiating kernel "squeezenet0conv2fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 55, output height = 55, pad = 0
Tue 16:28: Counter H = 55 W = 55
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Ifmap buffer configuration 4096 x 8
Tue 16:28: loop = false
Tue 16:28: Read for key = squeezenet0conv2fwd depth = 8 raw data = 1024
Tue 16:28: ROM created for squeezenet0conv2fwd of depth 8 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@36cf6377
Tue 16:28: Building the CORE arithmetic unit for "squeezenet0conv2fwd" ...
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: CORE ifmap vector size: 8
Tue 16:28: CORE coefficient vector size: 128
Tue 16:28: CORE ofmap vector size: 16
Tue 16:28: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Compiling kernel "squeezenet0conv2fwd"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0conv3fwd ...
Tue 16:28: Instantiating kernel "squeezenet0conv3fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 55, output height = 55, pad = 1
Tue 16:28: Counter H = 57 W = 57
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Ifmap buffer configuration 4096 x 8
Tue 16:28: loop = false
Tue 16:28: Building line buffer for "squeezenet0conv3fwd" ...
Tue 16:28: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Tue 16:28: Line buffer input vector size: 8, output vector size: 72.
Tue 16:28: Number of separated line buffers: 8
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:28: Size of line buffer output: 3
Tue 16:28: Number of line buffer output chunks: 3
Tue 16:28: Connecting outputs from chunk (#000) ...
Tue 16:28: Connecting outputs from chunk (#001) ...
Tue 16:28: Connecting outputs from chunk (#002) ...
Tue 16:28: Read for key = squeezenet0conv3fwd depth = 8 raw data = 9216
Tue 16:28: ROM created for squeezenet0conv3fwd of depth 8 and type {DFEVectorType: 1152 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2a23c061
Tue 16:28: Building the CORE arithmetic unit for "squeezenet0conv3fwd" ...
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: CORE ifmap vector size: 72
Tue 16:28: CORE coefficient vector size: 1152
Tue 16:28: CORE ofmap vector size: 16
Tue 16:28: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Compiling kernel "squeezenet0conv3fwd"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0concat0 ...
Tue 16:28: Instantiating kernel "squeezenet0concat0"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: Compiling kernel "squeezenet0concat0"
Tue 16:28: 
Tue 16:28: Generating kernel squeezenet0conv4fwd ...
Tue 16:28: Instantiating kernel "squeezenet0conv4fwd"
Tue 16:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: coeffOnChip = true
Tue 16:28: Input height = 55, output height = 55, pad = 0
Tue 16:28: Counter H = 55 W = 55
Tue 16:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:28: Ifmap buffer configuration 4096 x 32
Tue 16:28: loop = false
Tue 16:28: Read for key = squeezenet0conv4fwd depth = 8 raw data = 2048
Tue 16:28: ROM created for squeezenet0conv4fwd of depth 8 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3b78be1d
Tue 16:28: Building the CORE arithmetic unit for "squeezenet0conv4fwd" ...
Tue 16:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:28: CORE ifmap vector size: 32
Tue 16:28: CORE coefficient vector size: 256
Tue 16:28: CORE ofmap vector size: 8
Tue 16:28: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Tue 16:28: Connecting to output: ofmap
Tue 16:28: Connecting to output: ofmap_1
Tue 16:28: Compiling kernel "squeezenet0conv4fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv5fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv5fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 55, output height = 55, pad = 0
Tue 16:29: Counter H = 55 W = 55
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 8192 x 8
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv5fwd depth = 8 raw data = 1024
Tue 16:29: ROM created for squeezenet0conv5fwd of depth 8 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@171301f
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv5fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 8
Tue 16:29: CORE coefficient vector size: 128
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv5fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv6fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv6fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 55, output height = 55, pad = 1
Tue 16:29: Counter H = 57 W = 57
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 8192 x 8
Tue 16:29: loop = false
Tue 16:29: Building line buffer for "squeezenet0conv6fwd" ...
Tue 16:29: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 8, output vector size: 72.
Tue 16:29: Number of separated line buffers: 8
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 57 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Read for key = squeezenet0conv6fwd depth = 8 raw data = 9216
Tue 16:29: ROM created for squeezenet0conv6fwd of depth 8 and type {DFEVectorType: 1152 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4ac7dcca
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv6fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 72
Tue 16:29: CORE coefficient vector size: 1152
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv6fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0concat1 ...
Tue 16:29: Instantiating kernel "squeezenet0concat1"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: Compiling kernel "squeezenet0concat1"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0pool1fwd ...
Tue 16:29: Instantiating kernel "squeezenet0pool1fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 55, output height = 55, pad = 0
Tue 16:29: Counter H = 55 W = 55
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Building line buffer for "squeezenet0pool1fwd" ...
Tue 16:29: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 32, output vector size: 288.
Tue 16:29: Number of separated line buffers: 32
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 55 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0pool1fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv7fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv7fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 0
Tue 16:29: Counter H = 27 W = 27
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 1024 x 32
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv7fwd depth = 8 raw data = 4096
Tue 16:29: ROM created for squeezenet0conv7fwd of depth 8 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@22a211b8
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv7fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 32
Tue 16:29: CORE coefficient vector size: 512
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Connecting to output: ofmap_1
Tue 16:29: Compiling kernel "squeezenet0conv7fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv8fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv8fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 0
Tue 16:29: Counter H = 27 W = 27
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 2048 x 16
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv8fwd depth = 16 raw data = 4096
Tue 16:29: ROM created for squeezenet0conv8fwd of depth 16 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2ac6ec8f
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv8fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 16
Tue 16:29: CORE coefficient vector size: 256
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv8fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv9fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv9fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 1
Tue 16:29: Counter H = 29 W = 29
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 2048 x 16
Tue 16:29: loop = false
Tue 16:29: Building line buffer for "squeezenet0conv9fwd" ...
Tue 16:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 16, output vector size: 144.
Tue 16:29: Number of separated line buffers: 16
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Read for key = squeezenet0conv9fwd depth = 16 raw data = 36864
Tue 16:29: ROM created for squeezenet0conv9fwd of depth 16 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3596e0bb
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv9fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 144
Tue 16:29: CORE coefficient vector size: 2304
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv9fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0concat2 ...
Tue 16:29: Instantiating kernel "squeezenet0concat2"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: Compiling kernel "squeezenet0concat2"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv10fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv10fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 0
Tue 16:29: Counter H = 27 W = 27
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 8192 x 32
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv10fwd depth = 16 raw data = 8192
Tue 16:29: ROM created for squeezenet0conv10fwd of depth 16 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@61400d80
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv10fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 32
Tue 16:29: CORE coefficient vector size: 512
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Connecting to output: ofmap_1
Tue 16:29: Compiling kernel "squeezenet0conv10fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv11fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv11fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 0
Tue 16:29: Counter H = 27 W = 27
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 1024 x 16
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv11fwd depth = 16 raw data = 4096
Tue 16:29: ROM created for squeezenet0conv11fwd of depth 16 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4673b8ee
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv11fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 16
Tue 16:29: CORE coefficient vector size: 256
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv11fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv12fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv12fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 1
Tue 16:29: Counter H = 29 W = 29
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 1024 x 16
Tue 16:29: loop = false
Tue 16:29: Building line buffer for "squeezenet0conv12fwd" ...
Tue 16:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 16, output vector size: 144.
Tue 16:29: Number of separated line buffers: 16
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 29 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Read for key = squeezenet0conv12fwd depth = 16 raw data = 36864
Tue 16:29: ROM created for squeezenet0conv12fwd of depth 16 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@e9c5fe4
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv12fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 144
Tue 16:29: CORE coefficient vector size: 2304
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv12fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0concat3 ...
Tue 16:29: Instantiating kernel "squeezenet0concat3"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: Compiling kernel "squeezenet0concat3"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0pool2fwd ...
Tue 16:29: Instantiating kernel "squeezenet0pool2fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 27, output height = 27, pad = 0
Tue 16:29: Counter H = 27 W = 27
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Building line buffer for "squeezenet0pool2fwd" ...
Tue 16:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 32, output vector size: 288.
Tue 16:29: Number of separated line buffers: 32
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 27 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0pool2fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv13fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv13fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 13, output height = 13, pad = 0
Tue 16:29: Counter H = 13 W = 13
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 2048 x 32
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv13fwd depth = 24 raw data = 12288
Tue 16:29: ROM created for squeezenet0conv13fwd of depth 24 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@72c5c152
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv13fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 32
Tue 16:29: CORE coefficient vector size: 512
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Connecting to output: ofmap_1
Tue 16:29: Compiling kernel "squeezenet0conv13fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv14fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv14fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 13, output height = 13, pad = 0
Tue 16:29: Counter H = 13 W = 13
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 256 x 16
Tue 16:29: loop = false
Tue 16:29: Read for key = squeezenet0conv14fwd depth = 36 raw data = 9216
Tue 16:29: ROM created for squeezenet0conv14fwd of depth 36 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@63ee0033
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv14fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 16
Tue 16:29: CORE coefficient vector size: 256
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv14fwd"
Tue 16:29: 
Tue 16:29: Generating kernel squeezenet0conv15fwd ...
Tue 16:29: Instantiating kernel "squeezenet0conv15fwd"
Tue 16:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: coeffOnChip = true
Tue 16:29: Input height = 13, output height = 13, pad = 1
Tue 16:29: Counter H = 15 W = 15
Tue 16:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:29: Ifmap buffer configuration 256 x 16
Tue 16:29: loop = false
Tue 16:29: Building line buffer for "squeezenet0conv15fwd" ...
Tue 16:29: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Tue 16:29: Line buffer input vector size: 16, output vector size: 144.
Tue 16:29: Number of separated line buffers: 16
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:29: Size of line buffer output: 3
Tue 16:29: Number of line buffer output chunks: 3
Tue 16:29: Connecting outputs from chunk (#000) ...
Tue 16:29: Connecting outputs from chunk (#001) ...
Tue 16:29: Connecting outputs from chunk (#002) ...
Tue 16:29: Read for key = squeezenet0conv15fwd depth = 36 raw data = 82944
Tue 16:29: ROM created for squeezenet0conv15fwd of depth 36 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@179677cb
Tue 16:29: Building the CORE arithmetic unit for "squeezenet0conv15fwd" ...
Tue 16:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:29: CORE ifmap vector size: 144
Tue 16:29: CORE coefficient vector size: 2304
Tue 16:29: CORE ofmap vector size: 16
Tue 16:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Tue 16:29: Connecting to output: ofmap
Tue 16:29: Compiling kernel "squeezenet0conv15fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0concat4 ...
Tue 16:30: Instantiating kernel "squeezenet0concat4"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: Compiling kernel "squeezenet0concat4"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv16fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv16fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 256 x 32
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv16fwd depth = 36 raw data = 18432
Tue 16:30: ROM created for squeezenet0conv16fwd of depth 36 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2bc0fbf8
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv16fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 32
Tue 16:30: CORE coefficient vector size: 512
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =   512 addr_bits =     9
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Connecting to output: ofmap_1
Tue 16:30: Compiling kernel "squeezenet0conv16fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv17fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv17fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 512 x 16
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv17fwd depth = 36 raw data = 9216
Tue 16:30: ROM created for squeezenet0conv17fwd of depth 36 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@350d487d
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv17fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 16
Tue 16:30: CORE coefficient vector size: 256
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Compiling kernel "squeezenet0conv17fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv18fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv18fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 1
Tue 16:30: Counter H = 15 W = 15
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 1024 x 16
Tue 16:30: loop = false
Tue 16:30: Building line buffer for "squeezenet0conv18fwd" ...
Tue 16:30: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Tue 16:30: Line buffer input vector size: 16, output vector size: 144.
Tue 16:30: Number of separated line buffers: 16
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Read for key = squeezenet0conv18fwd depth = 36 raw data = 82944
Tue 16:30: ROM created for squeezenet0conv18fwd of depth 36 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@13ef97f0
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv18fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 144
Tue 16:30: CORE coefficient vector size: 2304
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Compiling kernel "squeezenet0conv18fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0concat5 ...
Tue 16:30: Instantiating kernel "squeezenet0concat5"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: Compiling kernel "squeezenet0concat5"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv19fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv19fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 2048 x 32
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv19fwd depth = 48 raw data = 24576
Tue 16:30: ROM created for squeezenet0conv19fwd of depth 48 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5ead6058
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv19fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 32
Tue 16:30: CORE coefficient vector size: 512
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Connecting to output: ofmap_1
Tue 16:30: Compiling kernel "squeezenet0conv19fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv20fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv20fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 256 x 16
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv20fwd depth = 64 raw data = 16384
Tue 16:30: ROM created for squeezenet0conv20fwd of depth 64 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@200dcabb
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv20fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 16
Tue 16:30: CORE coefficient vector size: 256
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Compiling kernel "squeezenet0conv20fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv21fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv21fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 1
Tue 16:30: Counter H = 15 W = 15
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 256 x 16
Tue 16:30: loop = false
Tue 16:30: Building line buffer for "squeezenet0conv21fwd" ...
Tue 16:30: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Tue 16:30: Line buffer input vector size: 16, output vector size: 144.
Tue 16:30: Number of separated line buffers: 16
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:30: Size of line buffer output: 3
Tue 16:30: Number of line buffer output chunks: 3
Tue 16:30: Connecting outputs from chunk (#000) ...
Tue 16:30: Connecting outputs from chunk (#001) ...
Tue 16:30: Connecting outputs from chunk (#002) ...
Tue 16:30: Read for key = squeezenet0conv21fwd depth = 64 raw data = 147456
Tue 16:30: ROM created for squeezenet0conv21fwd of depth 64 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d740d77
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv21fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 144
Tue 16:30: CORE coefficient vector size: 2304
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Compiling kernel "squeezenet0conv21fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0concat6 ...
Tue 16:30: Instantiating kernel "squeezenet0concat6"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: Compiling kernel "squeezenet0concat6"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv22fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv22fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 256 x 32
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv22fwd depth = 64 raw data = 32768
Tue 16:30: ROM created for squeezenet0conv22fwd of depth 64 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1dd26a20
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv22fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 32
Tue 16:30: CORE coefficient vector size: 512
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Connecting to output: ofmap_1
Tue 16:30: Compiling kernel "squeezenet0conv22fwd"
Tue 16:30: 
Tue 16:30: Generating kernel squeezenet0conv23fwd ...
Tue 16:30: Instantiating kernel "squeezenet0conv23fwd"
Tue 16:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: coeffOnChip = true
Tue 16:30: Input height = 13, output height = 13, pad = 0
Tue 16:30: Counter H = 13 W = 13
Tue 16:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:30: Ifmap buffer configuration 1024 x 16
Tue 16:30: loop = false
Tue 16:30: Read for key = squeezenet0conv23fwd depth = 64 raw data = 16384
Tue 16:30: ROM created for squeezenet0conv23fwd of depth 64 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7c6c915f
Tue 16:30: Building the CORE arithmetic unit for "squeezenet0conv23fwd" ...
Tue 16:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:30: CORE ifmap vector size: 16
Tue 16:30: CORE coefficient vector size: 256
Tue 16:30: CORE ofmap vector size: 16
Tue 16:30: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:30: Connecting to output: ofmap
Tue 16:30: Compiling kernel "squeezenet0conv23fwd"
Tue 16:31: 
Tue 16:31: Generating kernel squeezenet0conv24fwd ...
Tue 16:31: Instantiating kernel "squeezenet0conv24fwd"
Tue 16:31: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: coeffOnChip = true
Tue 16:31: Input height = 13, output height = 13, pad = 1
Tue 16:31: Counter H = 15 W = 15
Tue 16:31: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:31: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:31: Ifmap buffer configuration 1024 x 16
Tue 16:31: loop = false
Tue 16:31: Building line buffer for "squeezenet0conv24fwd" ...
Tue 16:31: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Tue 16:31: Line buffer input vector size: 16, output vector size: 144.
Tue 16:31: Number of separated line buffers: 16
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Initialising line buffer kernel with 3 x 15 x 1
Tue 16:31: Size of line buffer output: 3
Tue 16:31: Number of line buffer output chunks: 3
Tue 16:31: Connecting outputs from chunk (#000) ...
Tue 16:31: Connecting outputs from chunk (#001) ...
Tue 16:31: Connecting outputs from chunk (#002) ...
Tue 16:31: Read for key = squeezenet0conv24fwd depth = 64 raw data = 147456
Tue 16:31: ROM created for squeezenet0conv24fwd of depth 64 and type {DFEVectorType: 2304 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@60621208
Tue 16:31: Building the CORE arithmetic unit for "squeezenet0conv24fwd" ...
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: CORE ifmap vector size: 144
Tue 16:31: CORE coefficient vector size: 2304
Tue 16:31: CORE ofmap vector size: 16
Tue 16:31: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:31: Connecting to output: ofmap
Tue 16:31: Compiling kernel "squeezenet0conv24fwd"
Tue 16:31: 
Tue 16:31: Generating kernel squeezenet0concat7 ...
Tue 16:31: Instantiating kernel "squeezenet0concat7"
Tue 16:31: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: Compiling kernel "squeezenet0concat7"
Tue 16:31: 
Tue 16:31: Generating kernel squeezenet0conv25fwd ...
Tue 16:31: Instantiating kernel "squeezenet0conv25fwd"
Tue 16:31: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: coeffOnChip = true
Tue 16:31: Input height = 13, output height = 13, pad = 0
Tue 16:31: Counter H = 13 W = 13
Tue 16:31: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:31: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Tue 16:31: Ifmap buffer configuration 4096 x 32
Tue 16:31: loop = false
Tue 16:31: Read for key = squeezenet0conv25fwd depth = 1024 raw data = 524288
Tue 16:31: ROM created for squeezenet0conv25fwd of depth 1024 and type {DFEVectorType: 512 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7a19d26f
Tue 16:31: Building the CORE arithmetic unit for "squeezenet0conv25fwd" ...
Tue 16:31: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Tue 16:31: CORE ifmap vector size: 32
Tue 16:31: CORE coefficient vector size: 512
Tue 16:31: CORE ofmap vector size: 16
Tue 16:31: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Tue 16:31: Connecting to output: ofmap
Tue 16:31: Compiling kernel "squeezenet0conv25fwd"
Tue 16:31: 
Tue 16:31: Generating padding kernels for DRAM access
Tue 16:31: Instantiating kernel "ifmap_unpad"
Tue 16:31: Compiling kernel "ifmap_unpad"
Tue 16:31: 
Tue 16:31: Instantiating kernel "ofmap_pad"
Tue 16:31: Compiling kernel "ofmap_pad"
Tue 16:31: 
Tue 16:31: Setting up stream connections for squeezenet0conv0fwd
Tue 16:31: Setting up stream connections for squeezenet0pool0fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv0fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv1fwd
Tue 16:31: Connecting ifmap <== squeezenet0pool0fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv2fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv1fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv3fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv1fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat0
Tue 16:31: Connecting ifmap <== squeezenet0conv2fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv3fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv4fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat0: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv5fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv4fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv6fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv4fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat1
Tue 16:31: Connecting ifmap <== squeezenet0conv5fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv6fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0pool1fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat1: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv7fwd
Tue 16:31: Connecting ifmap <== squeezenet0pool1fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv8fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv7fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv9fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv7fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat2
Tue 16:31: Connecting ifmap <== squeezenet0conv8fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv9fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv10fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat2: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv11fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv10fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv12fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv10fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat3
Tue 16:31: Connecting ifmap <== squeezenet0conv11fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv12fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0pool2fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat3: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv13fwd
Tue 16:31: Connecting ifmap <== squeezenet0pool2fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv14fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv13fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv15fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv13fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat4
Tue 16:31: Connecting ifmap <== squeezenet0conv14fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv15fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv16fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat4: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv17fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv16fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv18fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv16fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat5
Tue 16:31: Connecting ifmap <== squeezenet0conv17fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv18fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv19fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat5: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv20fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv19fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv21fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv19fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat6
Tue 16:31: Connecting ifmap <== squeezenet0conv20fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv21fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv22fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat6: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv23fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv22fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv24fwd
Tue 16:31: Connecting ifmap <== squeezenet0conv22fwd: ofmap_1
Tue 16:31: Setting up stream connections for squeezenet0concat7
Tue 16:31: Connecting ifmap <== squeezenet0conv23fwd: ofmap
Tue 16:31: Connecting ifmap_1 <== squeezenet0conv24fwd: ofmap
Tue 16:31: Setting up stream connections for squeezenet0conv25fwd
Tue 16:31: Connecting ifmap <== squeezenet0concat7: ofmap
Tue 16:31: DRAM will be used to build the design
Tue 16:31: Setup streams for kernel "squeezenet0conv0fwd"
Tue 16:31: # cycles:       596748
Tue 16:31: # ifmap stream: 149187
Tue 16:31: # ofmap stream: 788544
Tue 16:31: coeff vec size: 144
Tue 16:31: coeff stream bit width: 2304
Tue 16:31: coeff stream chunk size: 9
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0pool0fwd"
Tue 16:31: # cycles:       49284
Tue 16:31: # ifmap stream: 788544
Tue 16:31: # ofmap stream: 193600
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0conv1fwd"
Tue 16:31: # cycles:       24200
Tue 16:31: # ifmap stream: 193600
Tue 16:31: # ofmap stream: 48400
Tue 16:31: coeff vec size: 128
Tue 16:31: coeff stream bit width: 2048
Tue 16:31: coeff stream chunk size: 1
cp.C = 16
Tue 16:31: Setup streams for kernel "squeezenet0conv2fwd"
Tue 16:31: # cycles:       24200
Tue 16:31: # ifmap stream: 48400
Tue 16:31: # ofmap stream: 193600
Tue 16:31: coeff vec size: 128
Tue 16:31: coeff stream bit width: 2048
Tue 16:31: coeff stream chunk size: 1
cp.C = 16
Tue 16:31: Setup streams for kernel "squeezenet0conv3fwd"
Tue 16:31: # cycles:       25992
Tue 16:31: # ifmap stream: 48400
Tue 16:31: # ofmap stream: 193600
Tue 16:31: coeff vec size: 1152
Tue 16:31: coeff stream bit width: 18432
Tue 16:31: coeff stream chunk size: 9
cp.C = 64
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0concat0"
Tue 16:31: # cycles:       12100
Tue 16:31: # ifmap stream: 193600
Tue 16:31: # ofmap stream: 387200
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 128
Tue 16:31: Setup streams for kernel "squeezenet0conv4fwd"
Tue 16:31: # cycles:       24200
Tue 16:31: # ifmap stream: 387200
Tue 16:31: # ofmap stream: 48400
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 16
Tue 16:31: Setup streams for kernel "squeezenet0conv5fwd"
Tue 16:31: # cycles:       24200
Tue 16:31: # ifmap stream: 48400
Tue 16:31: # ofmap stream: 193600
Tue 16:31: coeff vec size: 128
Tue 16:31: coeff stream bit width: 2048
Tue 16:31: coeff stream chunk size: 1
cp.C = 16
Tue 16:31: Setup streams for kernel "squeezenet0conv6fwd"
Tue 16:31: # cycles:       25992
Tue 16:31: # ifmap stream: 48400
Tue 16:31: # ofmap stream: 193600
Tue 16:31: coeff vec size: 1152
Tue 16:31: coeff stream bit width: 18432
Tue 16:31: coeff stream chunk size: 9
cp.C = 64
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0concat1"
Tue 16:31: # cycles:       12100
Tue 16:31: # ifmap stream: 193600
Tue 16:31: # ofmap stream: 387200
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 128
Tue 16:31: Setup streams for kernel "squeezenet0pool1fwd"
Tue 16:31: # cycles:       12100
Tue 16:31: # ifmap stream: 387200
Tue 16:31: # ofmap stream: 93312
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 128
Tue 16:31: Setup streams for kernel "squeezenet0conv7fwd"
Tue 16:31: # cycles:       5832
Tue 16:31: # ifmap stream: 93312
Tue 16:31: # ofmap stream: 23328
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 32
Tue 16:31: Setup streams for kernel "squeezenet0conv8fwd"
Tue 16:31: # cycles:       11664
Tue 16:31: # ifmap stream: 23328
Tue 16:31: # ofmap stream: 93312
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 32
Tue 16:31: Setup streams for kernel "squeezenet0conv9fwd"
Tue 16:31: # cycles:       13456
Tue 16:31: # ifmap stream: 23328
Tue 16:31: # ofmap stream: 93312
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 128
cp.C = 128
Tue 16:31: Setup streams for kernel "squeezenet0concat2"
Tue 16:31: # cycles:       5832
Tue 16:31: # ifmap stream: 93312
Tue 16:31: # ofmap stream: 186624
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 256
Tue 16:31: Setup streams for kernel "squeezenet0conv10fwd"
Tue 16:31: # cycles:       11664
Tue 16:31: # ifmap stream: 186624
Tue 16:31: # ofmap stream: 23328
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 32
Tue 16:31: Setup streams for kernel "squeezenet0conv11fwd"
Tue 16:31: # cycles:       11664
Tue 16:31: # ifmap stream: 23328
Tue 16:31: # ofmap stream: 93312
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 32
Tue 16:31: Setup streams for kernel "squeezenet0conv12fwd"
Tue 16:31: # cycles:       13456
Tue 16:31: # ifmap stream: 23328
Tue 16:31: # ofmap stream: 93312
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 128
cp.C = 128
Tue 16:31: Setup streams for kernel "squeezenet0concat3"
Tue 16:31: # cycles:       5832
Tue 16:31: # ifmap stream: 93312
Tue 16:31: # ofmap stream: 186624
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 256
Tue 16:31: Setup streams for kernel "squeezenet0pool2fwd"
Tue 16:31: # cycles:       5832
Tue 16:31: # ifmap stream: 186624
Tue 16:31: # ofmap stream: 43264
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 256
Tue 16:31: Setup streams for kernel "squeezenet0conv13fwd"
Tue 16:31: # cycles:       4056
Tue 16:31: # ifmap stream: 43264
Tue 16:31: # ofmap stream: 8112
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 48
Tue 16:31: Setup streams for kernel "squeezenet0conv14fwd"
Tue 16:31: # cycles:       6084
Tue 16:31: # ifmap stream: 8112
Tue 16:31: # ofmap stream: 32448
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 48
Tue 16:31: Setup streams for kernel "squeezenet0conv15fwd"
Tue 16:31: # cycles:       8100
Tue 16:31: # ifmap stream: 8112
Tue 16:31: # ofmap stream: 32448
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 192
cp.C = 192
Tue 16:31: Setup streams for kernel "squeezenet0concat4"
Tue 16:31: # cycles:       2028
Tue 16:31: # ifmap stream: 32448
Tue 16:31: # ofmap stream: 64896
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 384
Tue 16:31: Setup streams for kernel "squeezenet0conv16fwd"
Tue 16:31: # cycles:       6084
Tue 16:31: # ifmap stream: 64896
Tue 16:31: # ofmap stream: 8112
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 48
Tue 16:31: Setup streams for kernel "squeezenet0conv17fwd"
Tue 16:31: # cycles:       6084
Tue 16:31: # ifmap stream: 8112
Tue 16:31: # ofmap stream: 32448
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 48
Tue 16:31: Setup streams for kernel "squeezenet0conv18fwd"
Tue 16:31: # cycles:       8100
Tue 16:31: # ifmap stream: 8112
Tue 16:31: # ofmap stream: 32448
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 192
cp.C = 192
Tue 16:31: Setup streams for kernel "squeezenet0concat5"
Tue 16:31: # cycles:       2028
Tue 16:31: # ifmap stream: 32448
Tue 16:31: # ofmap stream: 64896
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 384
Tue 16:31: Setup streams for kernel "squeezenet0conv19fwd"
Tue 16:31: # cycles:       8112
Tue 16:31: # ifmap stream: 64896
Tue 16:31: # ofmap stream: 10816
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0conv20fwd"
Tue 16:31: # cycles:       10816
Tue 16:31: # ifmap stream: 10816
Tue 16:31: # ofmap stream: 43264
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0conv21fwd"
Tue 16:31: # cycles:       14400
Tue 16:31: # ifmap stream: 10816
Tue 16:31: # ofmap stream: 43264
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 256
cp.C = 256
Tue 16:31: Setup streams for kernel "squeezenet0concat6"
Tue 16:31: # cycles:       2704
Tue 16:31: # ifmap stream: 43264
Tue 16:31: # ofmap stream: 86528
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 512
Tue 16:31: Setup streams for kernel "squeezenet0conv22fwd"
Tue 16:31: # cycles:       10816
Tue 16:31: # ifmap stream: 86528
Tue 16:31: # ofmap stream: 10816
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0conv23fwd"
Tue 16:31: # cycles:       10816
Tue 16:31: # ifmap stream: 10816
Tue 16:31: # ofmap stream: 43264
Tue 16:31: coeff vec size: 256
Tue 16:31: coeff stream bit width: 4096
Tue 16:31: coeff stream chunk size: 1
cp.C = 64
Tue 16:31: Setup streams for kernel "squeezenet0conv24fwd"
Tue 16:31: # cycles:       14400
Tue 16:31: # ifmap stream: 10816
Tue 16:31: # ofmap stream: 43264
Tue 16:31: coeff vec size: 2304
Tue 16:31: coeff stream bit width: 36864
Tue 16:31: coeff stream chunk size: 9
cp.C = 256
cp.C = 256
Tue 16:31: Setup streams for kernel "squeezenet0concat7"
Tue 16:31: # cycles:       2704
Tue 16:31: # ifmap stream: 43264
Tue 16:31: # ofmap stream: 86528
Tue 16:31: coeff vec size: 0
Tue 16:31: coeff stream bit width: 0
Tue 16:31: coeff stream chunk size: 0
cp.C = 512
Tue 16:31: Setup streams for kernel "squeezenet0conv25fwd"
Tue 16:31: # cycles:       173056
Tue 16:31: # ifmap stream: 86528
Tue 16:31: # ofmap stream: 173056
Tue 16:31: coeff vec size: 512
Tue 16:31: coeff stream bit width: 8192
Tue 16:31: coeff stream chunk size: 1
Tue 16:51: Generating input files (VHDL, netlists, vendor specific IP cores)
Tue 18:47: Running back-end  build (15 phases)
Tue 18:47: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Tue 18:48: (2/15) - Synthesize DFE Modules (VivadoSynth)
Tue 18:48: Executing Synthesis Strategy VIVADO_DEFAULT
