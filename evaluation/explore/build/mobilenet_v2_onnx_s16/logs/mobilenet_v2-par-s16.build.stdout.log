Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v2_onnx_s16 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 16384 MobilenetV2OnnxS16Manager \
	DFEModel=MAIA maxFileName=MobilenetV2OnnxS16 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s16/data/data-mobilenet_v2-par-s16.txt 
]0; maxJavaRun: MobilenetV2OnnxS16Manager DFEModel=MAIA maxFileName=MobilenetV2OnnxS16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s16/data/data-mobilenet_v2-par-s16.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v2_onnx_s16
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v2_onnx_s16.MobilenetV2OnnxS16Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV2OnnxS16 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s16/data/data-mobilenet_v2-par-s16.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 16384 MB
----------------------------------------------------------

Wed 13:16: MaxCompiler version: 2021.1
Wed 13:16: Build "MobilenetV2OnnxS16" start time: Wed Dec 29 13:16:29 GMT 2021
Wed 13:16: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Wed 13:16: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS16_MAIA_DFE_FREQ_200
Wed 13:16: Detailed build log available in "_build.log"
Wed 13:16: 
Wed 13:16: ENGINE BUILD PARAMETERS
Wed 13:16: 	              Build name: MobilenetV2OnnxS16_MAIA_DFE_FREQ_200                                                                                    
Wed 13:16: 	             maxFileName: MobilenetV2OnnxS16                                                                                                      
Wed 13:16: 	                  target: DFE                                                                                                                     
Wed 13:16: 	                DFEModel: MAIA                                                                                                                    
Wed 13:16: 	              enableMPCX: false                                                                                                                   
Wed 13:16: 	                bitWidth: 32                                                                                                                      
Wed 13:16: 	                     WBW: 32                                                                                                                      
Wed 13:16: 	                   DTYPE: fixed                                                                                                                   
Wed 13:16: 	           NUM_FRAC_BITS: 8                                                                                                                       
Wed 13:16: 	                      PF: 1                                                                                                                       
Wed 13:16: 	                      PC: 1                                                                                                                       
Wed 13:16: 	                      PK: 1                                                                                                                       
Wed 13:16: 	                       H: 1                                                                                                                       
Wed 13:16: 	                       W: 1                                                                                                                       
Wed 13:16: 	                       C: 1                                                                                                                       
Wed 13:16: 	                       F: 1                                                                                                                       
Wed 13:16: 	                       K: 1                                                                                                                       
Wed 13:16: 	                     PAD: 0                                                                                                                       
Wed 13:16: 	                       S: 1                                                                                                                       
Wed 13:16: 	                     SEQ: 0                                                                                                                       
Wed 13:16: 	                    FREQ: 200                                                                                                                     
Wed 13:16: 	                USE_DRAM: false                                                                                                                   
Wed 13:16: 	                 USE_BNN: false                                                                                                                   
Wed 13:16: 	            USE_WINOGRAD: false                                                                                                                   
Wed 13:16: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                   
Wed 13:16: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                       
Wed 13:16: 	                   DEBUG: false                                                                                                                   
Wed 13:16: 	           COEFF_ON_CHIP: false                                                                                                                   
Wed 13:16: 	              INIT_COEFF: false                                                                                                                   
Wed 13:16: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s16/data/data-mobilenet_v2-par-s16.txt
Wed 13:17: Generating kernel conv0 ...
Wed 13:17: Instantiating kernel "conv0"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 224, output height = 224, pad = 1
Wed 13:17: Counter H = 226 W = 226
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 262144 x 1
Wed 13:17: loop = false
Wed 13:17: Building line buffer for "conv0" ...
Wed 13:17: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 1, output vector size: 9.
Wed 13:17: Number of separated line buffers: 1
Wed 13:17: Initialising line buffer kernel with 3 x 226 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: ROM created for conv0 of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3b35a229
Wed 13:17: Building the CORE arithmetic unit for "conv0" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 9
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv0"
Wed 13:17: 
Wed 13:17: Generating kernel conv2 ...
Wed 13:17: Instantiating kernel "conv2"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 112, output height = 112, pad = 1
Wed 13:17: Counter H = 114 W = 114
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv2" ...
Wed 13:17: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 2
Wed 13:17: ROM created for conv2_dw of depth 2 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@ceddaf8
Wed 13:17: Building the CORE arithmetic unit for "conv2_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 16384 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 2
Wed 13:17: ROM created for conv2_pw of depth 2 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7112ce6
Wed 13:17: Building the CORE arithmetic unit for "conv2_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv2"
Wed 13:17: 
Wed 13:17: Generating kernel conv5 ...
Wed 13:17: Instantiating kernel "conv5"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 112, output height = 112, pad = 0
Wed 13:17: Counter H = 112 W = 112
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 16384 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv5 of depth 6 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2226fd2b
Wed 13:17: Building the CORE arithmetic unit for "conv5" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv5"
Wed 13:17: 
Wed 13:17: Generating kernel conv7 ...
Wed 13:17: Instantiating kernel "conv7"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 112, output height = 112, pad = 1
Wed 13:17: Counter H = 114 W = 114
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv7" ...
Wed 13:17: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 114 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 6
Wed 13:17: ROM created for conv7_dw of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@22796ead
Wed 13:17: Building the CORE arithmetic unit for "conv7_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 16384 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 12
Wed 13:17: ROM created for conv7_pw of depth 12 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@789cdc12
Wed 13:17: Building the CORE arithmetic unit for "conv7_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv7"
Wed 13:17: 
Wed 13:17: Generating kernel conv10 ...
Wed 13:17: Instantiating kernel "conv10"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 56, output height = 56, pad = 0
Wed 13:17: Counter H = 56 W = 56
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 8192 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv10 of depth 18 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7238fdd6
Wed 13:17: Building the CORE arithmetic unit for "conv10" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv10"
Wed 13:17: 
Wed 13:17: Generating kernel conv12 ...
Wed 13:17: Instantiating kernel "conv12"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 56, output height = 56, pad = 1
Wed 13:17: Counter H = 58 W = 58
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv12" ...
Wed 13:17: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 9
Wed 13:17: ROM created for conv12_dw of depth 9 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@60d3cd59
Wed 13:17: Building the CORE arithmetic unit for "conv12_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 4096 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 18
Wed 13:17: ROM created for conv12_pw of depth 18 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1473b8e3
Wed 13:17: Building the CORE arithmetic unit for "conv12_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 4096
Wed 13:17: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv12"
Wed 13:17: 
Wed 13:17: Generating kernel conv16 ...
Wed 13:17: Instantiating kernel "conv16"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 56, output height = 56, pad = 0
Wed 13:17: Counter H = 56 W = 56
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 8192 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv16 of depth 18 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1c8044a1
Wed 13:17: Building the CORE arithmetic unit for "conv16" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv16"
Wed 13:17: 
Wed 13:17: Generating kernel conv18 ...
Wed 13:17: Instantiating kernel "conv18"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 56, output height = 56, pad = 1
Wed 13:17: Counter H = 58 W = 58
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv18" ...
Wed 13:17: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 58 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 9
Wed 13:17: ROM created for conv18_dw of depth 9 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d05b1ef
Wed 13:17: Building the CORE arithmetic unit for "conv18_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 4096 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 18
Wed 13:17: ROM created for conv18_pw of depth 18 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@aa2bf61
Wed 13:17: Building the CORE arithmetic unit for "conv18_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv18"
Wed 13:17: 
Wed 13:17: Generating kernel conv21 ...
Wed 13:17: Instantiating kernel "conv21"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 0
Wed 13:17: Counter H = 28 W = 28
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv21 of depth 24 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3810187a
Wed 13:17: Building the CORE arithmetic unit for "conv21" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv21"
Wed 13:17: 
Wed 13:17: Generating kernel conv23 ...
Wed 13:17: Instantiating kernel "conv23"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 1
Wed 13:17: Counter H = 30 W = 30
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv23" ...
Wed 13:17: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 12
Wed 13:17: ROM created for conv23_dw of depth 12 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2806b219
Wed 13:17: Building the CORE arithmetic unit for "conv23_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 24
Wed 13:17: ROM created for conv23_pw of depth 24 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7660db8d
Wed 13:17: Building the CORE arithmetic unit for "conv23_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 1024
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv23"
Wed 13:17: 
Wed 13:17: Generating kernel conv27 ...
Wed 13:17: Instantiating kernel "conv27"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 0
Wed 13:17: Counter H = 28 W = 28
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv27 of depth 24 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1af1dcac
Wed 13:17: Building the CORE arithmetic unit for "conv27" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv27"
Wed 13:17: 
Wed 13:17: Generating kernel conv29 ...
Wed 13:17: Instantiating kernel "conv29"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 1
Wed 13:17: Counter H = 30 W = 30
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv29" ...
Wed 13:17: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 12
Wed 13:17: ROM created for conv29_dw of depth 12 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4ce64679
Wed 13:17: Building the CORE arithmetic unit for "conv29_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 24
Wed 13:17: ROM created for conv29_pw of depth 24 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6cc1a642
Wed 13:17: Building the CORE arithmetic unit for "conv29_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 1024
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv29"
Wed 13:17: 
Wed 13:17: Generating kernel conv33 ...
Wed 13:17: Instantiating kernel "conv33"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 0
Wed 13:17: Counter H = 28 W = 28
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv33 of depth 24 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@24795d42
Wed 13:17: Building the CORE arithmetic unit for "conv33" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv33"
Wed 13:17: 
Wed 13:17: Generating kernel conv35 ...
Wed 13:17: Instantiating kernel "conv35"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 28, output height = 28, pad = 1
Wed 13:17: Counter H = 30 W = 30
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv35" ...
Wed 13:17: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 30 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 12
Wed 13:17: ROM created for conv35_dw of depth 12 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4e4b56f5
Wed 13:17: Building the CORE arithmetic unit for "conv35_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 48
Wed 13:17: ROM created for conv35_pw of depth 48 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3441bf0c
Wed 13:17: Building the CORE arithmetic unit for "conv35_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv35"
Wed 13:17: 
Wed 13:17: Generating kernel conv38 ...
Wed 13:17: Instantiating kernel "conv38"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv38 of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@30d3f796
Wed 13:17: Building the CORE arithmetic unit for "conv38" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv38"
Wed 13:17: 
Wed 13:17: Generating kernel conv40 ...
Wed 13:17: Instantiating kernel "conv40"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv40" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 24
Wed 13:17: ROM created for conv40_dw of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6e2607f8
Wed 13:17: Building the CORE arithmetic unit for "conv40_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 96
Wed 13:17: ROM created for conv40_pw of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@38a6aa23
Wed 13:17: Building the CORE arithmetic unit for "conv40_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 256
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv40"
Wed 13:17: 
Wed 13:17: Generating kernel conv44 ...
Wed 13:17: Instantiating kernel "conv44"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv44 of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@18d83b2e
Wed 13:17: Building the CORE arithmetic unit for "conv44" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv44"
Wed 13:17: 
Wed 13:17: Generating kernel conv46 ...
Wed 13:17: Instantiating kernel "conv46"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv46" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 24
Wed 13:17: ROM created for conv46_dw of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@70cdd02f
Wed 13:17: Building the CORE arithmetic unit for "conv46_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 96
Wed 13:17: ROM created for conv46_pw of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@391e8e6c
Wed 13:17: Building the CORE arithmetic unit for "conv46_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 256
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv46"
Wed 13:17: 
Wed 13:17: Generating kernel conv50 ...
Wed 13:17: Instantiating kernel "conv50"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv50 of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2a90c6e8
Wed 13:17: Building the CORE arithmetic unit for "conv50" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv50"
Wed 13:17: 
Wed 13:17: Generating kernel conv52 ...
Wed 13:17: Instantiating kernel "conv52"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv52" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 24
Wed 13:17: ROM created for conv52_dw of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@982252e
Wed 13:17: Building the CORE arithmetic unit for "conv52_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 96
Wed 13:17: ROM created for conv52_pw of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5ab428da
Wed 13:17: Building the CORE arithmetic unit for "conv52_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 256
Wed 13:17: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv52"
Wed 13:17: 
Wed 13:17: Generating kernel conv56 ...
Wed 13:17: Instantiating kernel "conv56"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 1024 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv56 of depth 96 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3d7857ac
Wed 13:17: Building the CORE arithmetic unit for "conv56" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv56"
Wed 13:17: 
Wed 13:17: Generating kernel conv58 ...
Wed 13:17: Instantiating kernel "conv58"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv58" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 24
Wed 13:17: ROM created for conv58_dw of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@648e96d9
Wed 13:17: Building the CORE arithmetic unit for "conv58_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 144
Wed 13:17: ROM created for conv58_pw of depth 144 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@699ea0d6
Wed 13:17: Building the CORE arithmetic unit for "conv58_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv58"
Wed 13:17: 
Wed 13:17: Generating kernel conv61 ...
Wed 13:17: Instantiating kernel "conv61"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv61 of depth 216 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@d2f43ed
Wed 13:17: Building the CORE arithmetic unit for "conv61" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv61"
Wed 13:17: 
Wed 13:17: Generating kernel conv63 ...
Wed 13:17: Instantiating kernel "conv63"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv63" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 36
Wed 13:17: ROM created for conv63_dw of depth 36 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@77a0c2f4
Wed 13:17: Building the CORE arithmetic unit for "conv63_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 216
Wed 13:17: ROM created for conv63_pw of depth 216 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1942c77
Wed 13:17: Building the CORE arithmetic unit for "conv63_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 256
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv63"
Wed 13:17: 
Wed 13:17: Generating kernel conv67 ...
Wed 13:17: Instantiating kernel "conv67"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv67 of depth 216 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4b232170
Wed 13:17: Building the CORE arithmetic unit for "conv67" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv67"
Wed 13:17: 
Wed 13:17: Generating kernel conv69 ...
Wed 13:17: Instantiating kernel "conv69"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv69" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 36
Wed 13:17: ROM created for conv69_dw of depth 36 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3c11130
Wed 13:17: Building the CORE arithmetic unit for "conv69_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 216
Wed 13:17: ROM created for conv69_pw of depth 216 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6f57f642
Wed 13:17: Building the CORE arithmetic unit for "conv69_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 256
Wed 13:17: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv69"
Wed 13:17: 
Wed 13:17: Generating kernel conv73 ...
Wed 13:17: Instantiating kernel "conv73"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 0
Wed 13:17: Counter H = 14 W = 14
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 2048 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv73 of depth 216 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@663fb7e5
Wed 13:17: Building the CORE arithmetic unit for "conv73" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv73"
Wed 13:17: 
Wed 13:17: Generating kernel conv75 ...
Wed 13:17: Instantiating kernel "conv75"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 14, output height = 14, pad = 1
Wed 13:17: Counter H = 16 W = 16
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv75" ...
Wed 13:17: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 16 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 36
Wed 13:17: ROM created for conv75_dw of depth 36 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3f5b58e6
Wed 13:17: Building the CORE arithmetic unit for "conv75_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 256 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 360
Wed 13:17: ROM created for conv75_pw of depth 360 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4b7fec9a
Wed 13:17: Building the CORE arithmetic unit for "conv75_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =   512 addr_bits =     9
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv75"
Wed 13:17: 
Wed 13:17: Generating kernel conv78 ...
Wed 13:17: Instantiating kernel "conv78"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 7, output height = 7, pad = 0
Wed 13:17: Counter H = 7 W = 7
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 512 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv78 of depth 600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@bd034d
Wed 13:17: Building the CORE arithmetic unit for "conv78" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv78"
Wed 13:17: 
Wed 13:17: Generating kernel conv80 ...
Wed 13:17: Instantiating kernel "conv80"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 7, output height = 7, pad = 1
Wed 13:17: Counter H = 9 W = 9
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv80" ...
Wed 13:17: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 60
Wed 13:17: ROM created for conv80_dw of depth 60 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@224760c2
Wed 13:17: Building the CORE arithmetic unit for "conv80_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 128 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 600
Wed 13:17: ROM created for conv80_pw of depth 600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@513ccf15
Wed 13:17: Building the CORE arithmetic unit for "conv80_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 64
Wed 13:17: [ConvLayerOfmapBuffer] depth =   512 addr_bits =     9
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv80"
Wed 13:17: 
Wed 13:17: Generating kernel conv84 ...
Wed 13:17: Instantiating kernel "conv84"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 7, output height = 7, pad = 0
Wed 13:17: Counter H = 7 W = 7
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 512 x 16
Wed 13:17: loop = false
Wed 13:17: ROM created for conv84 of depth 600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2257dce3
Wed 13:17: Building the CORE arithmetic unit for "conv84" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Connecting to output: ofmap_1
Wed 13:17: Compiling kernel "conv84"
Wed 13:17: 
Wed 13:17: Generating kernel conv86 ...
Wed 13:17: Instantiating kernel "conv86"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 7, output height = 7, pad = 1
Wed 13:17: Counter H = 9 W = 9
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Building line buffer for "conv86" ...
Wed 13:17: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 13:17: Line buffer input vector size: 16, output vector size: 144.
Wed 13:17: Number of separated line buffers: 16
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:17: Size of line buffer output: 3
Wed 13:17: Number of line buffer output chunks: 3
Wed 13:17: Connecting outputs from chunk (#000) ...
Wed 13:17: Connecting outputs from chunk (#001) ...
Wed 13:17: Connecting outputs from chunk (#002) ...
Wed 13:17: Depthwise coeff ROM depth = 60
Wed 13:17: ROM created for conv86_dw of depth 60 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@315232a4
Wed 13:17: Building the CORE arithmetic unit for "conv86_dw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 144
Wed 13:17: CORE coefficient vector size: 144
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Ifmap buffer configuration 128 x 16
Wed 13:17: loop = false
Wed 13:17: Pointwise coeff ROM depth = 600
Wed 13:17: ROM created for conv86_pw of depth 600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@d185be9
Wed 13:17: Building the CORE arithmetic unit for "conv86_pw" ...
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: CORE ifmap vector size: 16
Wed 13:17: CORE coefficient vector size: 256
Wed 13:17: CORE ofmap vector size: 16
Wed 13:17: Residual buffer depth = 64
Wed 13:17: [ConvLayerOfmapBuffer] depth =   512 addr_bits =     9
Wed 13:17: Connecting to output: ofmap
Wed 13:17: Compiling kernel "conv86"
Wed 13:17: 
Wed 13:17: Generating kernel conv90 ...
Wed 13:17: Instantiating kernel "conv90"
Wed 13:17: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:17: coeffOnChip = true
Wed 13:17: Input height = 7, output height = 7, pad = 0
Wed 13:17: Counter H = 7 W = 7
Wed 13:17: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:17: Ifmap buffer configuration 512 x 16
Wed 13:17: loop = false
Wed 13:18: ROM created for conv90 of depth 600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2f4db14f
Wed 13:18: Building the CORE arithmetic unit for "conv90" ...
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: CORE ifmap vector size: 16
Wed 13:18: CORE coefficient vector size: 256
Wed 13:18: CORE ofmap vector size: 16
Wed 13:18: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 13:18: Connecting to output: ofmap
Wed 13:18: Compiling kernel "conv90"
Wed 13:18: 
Wed 13:18: Generating kernel conv92 ...
Wed 13:18: Instantiating kernel "conv92"
Wed 13:18: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: coeffOnChip = true
Wed 13:18: Input height = 7, output height = 7, pad = 1
Wed 13:18: Counter H = 9 W = 9
Wed 13:18: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:18: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:18: Building line buffer for "conv92" ...
Wed 13:18: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 13:18: Line buffer input vector size: 16, output vector size: 144.
Wed 13:18: Number of separated line buffers: 16
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Initialising line buffer kernel with 3 x 9 x 1
Wed 13:18: Size of line buffer output: 3
Wed 13:18: Number of line buffer output chunks: 3
Wed 13:18: Connecting outputs from chunk (#000) ...
Wed 13:18: Connecting outputs from chunk (#001) ...
Wed 13:18: Connecting outputs from chunk (#002) ...
Wed 13:18: Depthwise coeff ROM depth = 60
Wed 13:18: ROM created for conv92_dw of depth 60 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4b9e684d
Wed 13:18: Building the CORE arithmetic unit for "conv92_dw" ...
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: CORE ifmap vector size: 144
Wed 13:18: CORE coefficient vector size: 144
Wed 13:18: CORE ofmap vector size: 16
Wed 13:18: Ifmap buffer configuration 128 x 16
Wed 13:18: loop = false
Wed 13:18: Pointwise coeff ROM depth = 1200
Wed 13:18: ROM created for conv92_pw of depth 1200 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@27abb534
Wed 13:18: Building the CORE arithmetic unit for "conv92_pw" ...
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: CORE ifmap vector size: 16
Wed 13:18: CORE coefficient vector size: 256
Wed 13:18: CORE ofmap vector size: 16
Wed 13:18: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 13:18: Connecting to output: ofmap
Wed 13:18: Compiling kernel "conv92"
Wed 13:18: 
Wed 13:18: Generating kernel conv95 ...
Wed 13:18: Instantiating kernel "conv95"
Wed 13:18: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: coeffOnChip = true
Wed 13:18: Input height = 7, output height = 7, pad = 0
Wed 13:18: Counter H = 7 W = 7
Wed 13:18: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:18: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 13:18: Ifmap buffer configuration 1024 x 16
Wed 13:18: loop = false
Wed 13:18: ROM created for conv95 of depth 1600 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@47891ee4
Wed 13:18: Building the CORE arithmetic unit for "conv95" ...
Wed 13:18: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 13:18: CORE ifmap vector size: 16
Wed 13:18: CORE coefficient vector size: 256
Wed 13:18: CORE ofmap vector size: 16
Wed 13:18: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 13:18: Connecting to output: ofmap
Wed 13:18: Compiling kernel "conv95"
Wed 13:18: 
Wed 13:18: Generating padding kernels for DRAM access
Wed 13:18: Instantiating kernel "ifmap_unpad"
Wed 13:18: Compiling kernel "ifmap_unpad"
Wed 13:18: 
Wed 13:18: Instantiating kernel "ofmap_pad"
Wed 13:18: Compiling kernel "ofmap_pad"
Wed 13:18: 
Wed 13:18: Setting up stream connections for conv0
Wed 13:18: Setting up stream connections for conv2
Wed 13:18: Connecting ifmap <== conv0: ofmap
Wed 13:18: Setting up stream connections for conv5
Wed 13:18: Connecting ifmap <== conv2: ofmap
Wed 13:18: Setting up stream connections for conv7
Wed 13:18: Connecting ifmap <== conv5: ofmap
Wed 13:18: Setting up stream connections for conv10
Wed 13:18: Connecting ifmap <== conv7: ofmap
Wed 13:18: Setting up stream connections for conv12
Wed 13:18: Connecting ifmap <== conv10: ofmap
Wed 13:18: Setting up stream connections for conv16
Wed 13:18: Connecting ifmap <== conv12: ofmap
Wed 13:18: Setting up stream connections for conv18
Wed 13:18: Connecting ifmap <== conv16: ofmap
Wed 13:18: Setting up stream connections for conv21
Wed 13:18: Connecting ifmap <== conv18: ofmap
Wed 13:18: Setting up stream connections for conv23
Wed 13:18: Connecting ifmap <== conv21: ofmap
Wed 13:18: Setting up stream connections for conv27
Wed 13:18: Connecting ifmap <== conv23: ofmap
Wed 13:18: Setting up stream connections for conv29
Wed 13:18: Connecting ifmap <== conv27: ofmap
Wed 13:18: Setting up stream connections for conv33
Wed 13:18: Connecting ifmap <== conv29: ofmap
Wed 13:18: Setting up stream connections for conv35
Wed 13:18: Connecting ifmap <== conv33: ofmap
Wed 13:18: Setting up stream connections for conv38
Wed 13:18: Connecting ifmap <== conv35: ofmap
Wed 13:18: Setting up stream connections for conv40
Wed 13:18: Connecting ifmap <== conv38: ofmap
Wed 13:18: Setting up stream connections for conv44
Wed 13:18: Connecting ifmap <== conv40: ofmap
Wed 13:18: Setting up stream connections for conv46
Wed 13:18: Connecting ifmap <== conv44: ofmap
Wed 13:18: Setting up stream connections for conv50
Wed 13:18: Connecting ifmap <== conv46: ofmap
Wed 13:18: Setting up stream connections for conv52
Wed 13:18: Connecting ifmap <== conv50: ofmap
Wed 13:18: Setting up stream connections for conv56
Wed 13:18: Connecting ifmap <== conv52: ofmap
Wed 13:18: Setting up stream connections for conv58
Wed 13:18: Connecting ifmap <== conv56: ofmap
Wed 13:18: Setting up stream connections for conv61
Wed 13:18: Connecting ifmap <== conv58: ofmap
Wed 13:18: Setting up stream connections for conv63
Wed 13:18: Connecting ifmap <== conv61: ofmap
Wed 13:18: Setting up stream connections for conv67
Wed 13:18: Connecting ifmap <== conv63: ofmap
Wed 13:18: Setting up stream connections for conv69
Wed 13:18: Connecting ifmap <== conv67: ofmap
Wed 13:18: Setting up stream connections for conv73
Wed 13:18: Connecting ifmap <== conv69: ofmap
Wed 13:18: Setting up stream connections for conv75
Wed 13:18: Connecting ifmap <== conv73: ofmap
Wed 13:18: Setting up stream connections for conv78
Wed 13:18: Connecting ifmap <== conv75: ofmap
Wed 13:18: Setting up stream connections for conv80
Wed 13:18: Connecting ifmap <== conv78: ofmap
Wed 13:18: Setting up stream connections for conv84
Wed 13:18: Connecting ifmap <== conv80: ofmap
Wed 13:18: Setting up stream connections for conv86
Wed 13:18: Connecting ifmap <== conv84: ofmap
Wed 13:18: Setting up stream connections for conv90
Wed 13:18: Connecting ifmap <== conv86: ofmap
Wed 13:18: Setting up stream connections for conv92
Wed 13:18: Connecting ifmap <== conv90: ofmap
Wed 13:18: Setting up stream connections for conv95
Wed 13:18: Connecting ifmap <== conv92: ofmap
Wed 13:18: DRAM will be used to build the design
Wed 13:18: Setup streams for kernel "conv0"
Wed 13:18: # cycles:       306456
Wed 13:18: # ifmap stream: 150528
Wed 13:18: # ofmap stream: 401408
Wed 13:18: coeff vec size: 144
Wed 13:18: coeff stream bit width: 2304
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv2"
Wed 13:18: # cycles:       25992
Wed 13:18: # ifmap stream: 401408
Wed 13:18: # ofmap stream: 200704
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv5"
Wed 13:18: # cycles:       75264
Wed 13:18: # ifmap stream: 200704
Wed 13:18: # ofmap stream: 1204224
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv7"
Wed 13:18: # cycles:       155952
Wed 13:18: # ifmap stream: 1204224
Wed 13:18: # ofmap stream: 100352
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv10"
Wed 13:18: # cycles:       56448
Wed 13:18: # ifmap stream: 100352
Wed 13:18: # ofmap stream: 451584
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv12"
Wed 13:18: # cycles:       60552
Wed 13:18: # ifmap stream: 451584
Wed 13:18: # ofmap stream: 100352
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv16"
Wed 13:18: # cycles:       56448
Wed 13:18: # ifmap stream: 100352
Wed 13:18: # ofmap stream: 451584
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv18"
Wed 13:18: # cycles:       60552
Wed 13:18: # ifmap stream: 451584
Wed 13:18: # ofmap stream: 25088
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv21"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 25088
Wed 13:18: # ofmap stream: 150528
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv23"
Wed 13:18: # cycles:       21600
Wed 13:18: # ifmap stream: 150528
Wed 13:18: # ofmap stream: 25088
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv27"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 25088
Wed 13:18: # ofmap stream: 150528
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv29"
Wed 13:18: # cycles:       21600
Wed 13:18: # ifmap stream: 150528
Wed 13:18: # ofmap stream: 25088
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv33"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 25088
Wed 13:18: # ofmap stream: 150528
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv35"
Wed 13:18: # cycles:       43200
Wed 13:18: # ifmap stream: 150528
Wed 13:18: # ofmap stream: 12544
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv38"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 12544
Wed 13:18: # ofmap stream: 75264
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv40"
Wed 13:18: # cycles:       24576
Wed 13:18: # ifmap stream: 75264
Wed 13:18: # ofmap stream: 12544
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv44"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 12544
Wed 13:18: # ofmap stream: 75264
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv46"
Wed 13:18: # cycles:       24576
Wed 13:18: # ifmap stream: 75264
Wed 13:18: # ofmap stream: 12544
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv50"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 12544
Wed 13:18: # ofmap stream: 75264
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv52"
Wed 13:18: # cycles:       24576
Wed 13:18: # ifmap stream: 75264
Wed 13:18: # ofmap stream: 12544
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv56"
Wed 13:18: # cycles:       18816
Wed 13:18: # ifmap stream: 12544
Wed 13:18: # ofmap stream: 75264
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv58"
Wed 13:18: # cycles:       36864
Wed 13:18: # ifmap stream: 75264
Wed 13:18: # ofmap stream: 18816
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv61"
Wed 13:18: # cycles:       42336
Wed 13:18: # ifmap stream: 18816
Wed 13:18: # ofmap stream: 112896
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv63"
Wed 13:18: # cycles:       55296
Wed 13:18: # ifmap stream: 112896
Wed 13:18: # ofmap stream: 18816
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv67"
Wed 13:18: # cycles:       42336
Wed 13:18: # ifmap stream: 18816
Wed 13:18: # ofmap stream: 112896
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv69"
Wed 13:18: # cycles:       55296
Wed 13:18: # ifmap stream: 112896
Wed 13:18: # ofmap stream: 18816
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv73"
Wed 13:18: # cycles:       42336
Wed 13:18: # ifmap stream: 18816
Wed 13:18: # ofmap stream: 112896
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv75"
Wed 13:18: # cycles:       92160
Wed 13:18: # ifmap stream: 112896
Wed 13:18: # ofmap stream: 7840
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv78"
Wed 13:18: # cycles:       29400
Wed 13:18: # ifmap stream: 7840
Wed 13:18: # ofmap stream: 47040
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv80"
Wed 13:18: # cycles:       48600
Wed 13:18: # ifmap stream: 47040
Wed 13:18: # ofmap stream: 7840
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv84"
Wed 13:18: # cycles:       29400
Wed 13:18: # ifmap stream: 7840
Wed 13:18: # ofmap stream: 47040
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv86"
Wed 13:18: # cycles:       48600
Wed 13:18: # ifmap stream: 47040
Wed 13:18: # ofmap stream: 7840
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv90"
Wed 13:18: # cycles:       29400
Wed 13:18: # ifmap stream: 7840
Wed 13:18: # ofmap stream: 47040
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:18: Setup streams for kernel "conv92"
Wed 13:18: # cycles:       97200
Wed 13:18: # ifmap stream: 47040
Wed 13:18: # ofmap stream: 15680
Wed 13:18: coeff vec size: 2304
Wed 13:18: coeff stream bit width: 36864
Wed 13:18: coeff stream chunk size: 9
Wed 13:18: Setup streams for kernel "conv95"
Wed 13:18: # cycles:       78400
Wed 13:18: # ifmap stream: 15680
Wed 13:18: # ofmap stream: 62720
Wed 13:18: coeff vec size: 256
Wed 13:18: coeff stream bit width: 4096
Wed 13:18: coeff stream chunk size: 1
Wed 13:23: Generating input files (VHDL, netlists, vendor specific IP cores)
Wed 15:01: Running back-end  build (15 phases)
Wed 15:01: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Wed 15:01: (2/15) - Synthesize DFE Modules (VivadoSynth)
Wed 15:01: Executing Synthesis Strategy VIVADO_DEFAULT
Wed 19:23: (3/15) - Generate Resource Report (VivadoResourceUsage)
Wed 19:24: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Wed 19:26: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Wed 19:26: 
Wed 19:26: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Wed 19:26: For this compile, we estimate this process may take longer than 1 hour.
Wed 19:26: We recommend running in simulation to verify correctness before building hardware.
Wed 19:26: 
Wed 19:26: PRELIMINARY RESOURCE USAGE
Wed 19:26: FPGA: xcVU9P-FLGB2104-2-E
Wed 19:26: Logic utilization:     2251346 / 3546720 (63.48%)
Wed 19:26:   LUTs:                 211558 / 1182240 (17.89%)
Wed 19:26:   Primary FFs:         2039788 / 2364480 (86.27%)
Wed 19:26: DSP blocks:              11309 / 6840    (165.34%)
Wed 19:26: Block memory (BRAM18):    4513 / 4320    (104.47%)
Wed 19:26: Block memory (URAM):       960 / 960     (100.00%)
Wed 19:26: 
Wed 19:26: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Wed 19:26: 
Wed 19:26: PRELIMINARY POWER REPORT
Wed 19:26: Total On-Chip Power (W) 22.33 (budget: 91.80) 
Wed 19:26: Dynamic Power (W)       19.28 
Wed 19:26: Device Static Power(W)   3.05 
Wed 19:26: 
Wed 19:26: (7/15) - Place DFE (VivadoImplementation)
Wed 19:26: Executing the following 10 Implementation Strategies in 4 threads:
Wed 19:26:  - VIVADO_DEFAULT
Wed 19:26:  - MAXELER1
Wed 19:26:  - MAXELER2
Wed 19:26:  - MAXELER3
Wed 19:26:  - MAXELER4
Wed 19:26:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Wed 19:26:  - PERFORMANCE_EXPLORE
Wed 19:26:  - PERFORMANCE_EXTRA_TIMING_OPT
Wed 19:26:  - PERFORMANCE_NET_DELAY_HIGH
Wed 19:26:  - PERFORMANCE_REFINE_PLACEMENT
Wed 20:25: Implementation: Strategy "MAXELER2" failed (no timing score) Output log file created
Wed 20:25: Implementation: Strategy "MAXELER3" failed (no timing score) Output log file created
Wed 20:25: Implementation: Strategy "MAXELER1" failed (no timing score) Output log file created
Wed 20:55: Implementation: Strategy "VIVADO_DEFAULT" failed (no timing score) Output log file created
Wed 21:25: Implementation: Strategy "PERFORMANCE_EXPLORE" failed (no timing score) Output log file created
Wed 21:27: Implementation: Strategy "MAXELER4" failed (no timing score) Output log file created
