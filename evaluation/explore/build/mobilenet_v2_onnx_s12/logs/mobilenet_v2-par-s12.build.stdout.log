Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v2_onnx_s12 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 MobilenetV2OnnxS12Manager \
	DFEModel=MAIA maxFileName=MobilenetV2OnnxS12 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s12/data/data-mobilenet_v2-par-s12.txt 
]0; maxJavaRun: MobilenetV2OnnxS12Manager DFEModel=MAIA maxFileName=MobilenetV2OnnxS12 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s12/data/data-mobilenet_v2-par-s12.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v2_onnx_s12
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v2_onnx_s12.MobilenetV2OnnxS12Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV2OnnxS12 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s12/data/data-mobilenet_v2-par-s12.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Wed 21:28: MaxCompiler version: 2021.1
Wed 21:28: Build "MobilenetV2OnnxS12" start time: Wed Dec 29 21:28:14 GMT 2021
Wed 21:28: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Wed 21:28: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200
Wed 21:28: Detailed build log available in "_build.log"
Wed 21:28: 
Wed 21:28: ENGINE BUILD PARAMETERS
Wed 21:28: 	              Build name: MobilenetV2OnnxS12_MAIA_DFE_FREQ_200                                                                                    
Wed 21:28: 	             maxFileName: MobilenetV2OnnxS12                                                                                                      
Wed 21:28: 	                  target: DFE                                                                                                                     
Wed 21:28: 	                DFEModel: MAIA                                                                                                                    
Wed 21:28: 	              enableMPCX: false                                                                                                                   
Wed 21:28: 	                bitWidth: 32                                                                                                                      
Wed 21:28: 	                     WBW: 32                                                                                                                      
Wed 21:28: 	                   DTYPE: fixed                                                                                                                   
Wed 21:28: 	           NUM_FRAC_BITS: 8                                                                                                                       
Wed 21:28: 	                      PF: 1                                                                                                                       
Wed 21:28: 	                      PC: 1                                                                                                                       
Wed 21:28: 	                      PK: 1                                                                                                                       
Wed 21:28: 	                       H: 1                                                                                                                       
Wed 21:28: 	                       W: 1                                                                                                                       
Wed 21:28: 	                       C: 1                                                                                                                       
Wed 21:28: 	                       F: 1                                                                                                                       
Wed 21:28: 	                       K: 1                                                                                                                       
Wed 21:28: 	                     PAD: 0                                                                                                                       
Wed 21:28: 	                       S: 1                                                                                                                       
Wed 21:28: 	                     SEQ: 0                                                                                                                       
Wed 21:28: 	                    FREQ: 200                                                                                                                     
Wed 21:28: 	                USE_DRAM: false                                                                                                                   
Wed 21:28: 	                 USE_BNN: false                                                                                                                   
Wed 21:28: 	            USE_WINOGRAD: false                                                                                                                   
Wed 21:28: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                   
Wed 21:28: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                       
Wed 21:28: 	                   DEBUG: false                                                                                                                   
Wed 21:28: 	           COEFF_ON_CHIP: false                                                                                                                   
Wed 21:28: 	              INIT_COEFF: false                                                                                                                   
Wed 21:28: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s12/data/data-mobilenet_v2-par-s12.txt
Wed 21:28: Generating kernel conv0 ...
Wed 21:28: Instantiating kernel "conv0"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 224, output height = 224, pad = 1
Wed 21:28: Counter H = 226 W = 226
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Ifmap buffer configuration 262144 x 1
Wed 21:28: loop = false
Wed 21:28: Building line buffer for "conv0" ...
Wed 21:28: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Wed 21:28: Line buffer input vector size: 1, output vector size: 9.
Wed 21:28: Number of separated line buffers: 1
Wed 21:28: Initialising line buffer kernel with 3 x 226 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: ROM created for conv0 of depth 9 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1f8d42d1
Wed 21:28: Building the CORE arithmetic unit for "conv0" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 9
Wed 21:28: CORE coefficient vector size: 108
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv0"
Wed 21:28: 
Wed 21:28: Generating kernel conv2 ...
Wed 21:28: Instantiating kernel "conv2"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 112, output height = 112, pad = 1
Wed 21:28: Counter H = 114 W = 114
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Building line buffer for "conv2" ...
Wed 21:28: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 21:28: Line buffer input vector size: 12, output vector size: 108.
Wed 21:28: Number of separated line buffers: 12
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Depthwise coeff ROM depth = 3
Wed 21:28: ROM created for conv2_dw of depth 3 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@186149f9
Wed 21:28: Building the CORE arithmetic unit for "conv2_dw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 108
Wed 21:28: CORE coefficient vector size: 108
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: Ifmap buffer configuration 16384 x 12
Wed 21:28: loop = false
Wed 21:28: Pointwise coeff ROM depth = 6
Wed 21:28: ROM created for conv2_pw of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@282fabe9
Wed 21:28: Building the CORE arithmetic unit for "conv2_pw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv2"
Wed 21:28: 
Wed 21:28: Generating kernel conv5 ...
Wed 21:28: Instantiating kernel "conv5"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 112, output height = 112, pad = 0
Wed 21:28: Counter H = 112 W = 112
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Ifmap buffer configuration 32768 x 12
Wed 21:28: loop = false
Wed 21:28: ROM created for conv5 of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6276fcd5
Wed 21:28: Building the CORE arithmetic unit for "conv5" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv5"
Wed 21:28: 
Wed 21:28: Generating kernel conv7 ...
Wed 21:28: Instantiating kernel "conv7"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 112, output height = 112, pad = 1
Wed 21:28: Counter H = 114 W = 114
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Building line buffer for "conv7" ...
Wed 21:28: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 21:28: Line buffer input vector size: 12, output vector size: 108.
Wed 21:28: Number of separated line buffers: 12
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Depthwise coeff ROM depth = 8
Wed 21:28: ROM created for conv7_dw of depth 8 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@36acc75d
Wed 21:28: Building the CORE arithmetic unit for "conv7_dw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 108
Wed 21:28: CORE coefficient vector size: 108
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: Ifmap buffer configuration 16384 x 12
Wed 21:28: loop = false
Wed 21:28: Pointwise coeff ROM depth = 16
Wed 21:28: ROM created for conv7_pw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@66f2f19e
Wed 21:28: Building the CORE arithmetic unit for "conv7_pw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv7"
Wed 21:28: 
Wed 21:28: Generating kernel conv10 ...
Wed 21:28: Instantiating kernel "conv10"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 56, output height = 56, pad = 0
Wed 21:28: Counter H = 56 W = 56
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Ifmap buffer configuration 8192 x 12
Wed 21:28: loop = false
Wed 21:28: ROM created for conv10 of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@64ceb5c4
Wed 21:28: Building the CORE arithmetic unit for "conv10" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Connecting to output: ofmap_1
Wed 21:28: Compiling kernel "conv10"
Wed 21:28: 
Wed 21:28: Generating kernel conv12 ...
Wed 21:28: Instantiating kernel "conv12"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 56, output height = 56, pad = 1
Wed 21:28: Counter H = 58 W = 58
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Building line buffer for "conv12" ...
Wed 21:28: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 21:28: Line buffer input vector size: 12, output vector size: 108.
Wed 21:28: Number of separated line buffers: 12
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Depthwise coeff ROM depth = 12
Wed 21:28: ROM created for conv12_dw of depth 12 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@440daa12
Wed 21:28: Building the CORE arithmetic unit for "conv12_dw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 108
Wed 21:28: CORE coefficient vector size: 108
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: Ifmap buffer configuration 4096 x 12
Wed 21:28: loop = false
Wed 21:28: Pointwise coeff ROM depth = 24
Wed 21:28: ROM created for conv12_pw of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3ee81474
Wed 21:28: Building the CORE arithmetic unit for "conv12_pw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: Residual buffer depth = 4096
Wed 21:28: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv12"
Wed 21:28: 
Wed 21:28: Generating kernel conv16 ...
Wed 21:28: Instantiating kernel "conv16"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 56, output height = 56, pad = 0
Wed 21:28: Counter H = 56 W = 56
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Ifmap buffer configuration 8192 x 12
Wed 21:28: loop = false
Wed 21:28: ROM created for conv16 of depth 24 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5f069c15
Wed 21:28: Building the CORE arithmetic unit for "conv16" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv16"
Wed 21:28: 
Wed 21:28: Generating kernel conv18 ...
Wed 21:28: Instantiating kernel "conv18"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 56, output height = 56, pad = 1
Wed 21:28: Counter H = 58 W = 58
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Building line buffer for "conv18" ...
Wed 21:28: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 21:28: Line buffer input vector size: 12, output vector size: 108.
Wed 21:28: Number of separated line buffers: 12
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:28: Size of line buffer output: 3
Wed 21:28: Number of line buffer output chunks: 3
Wed 21:28: Connecting outputs from chunk (#000) ...
Wed 21:28: Connecting outputs from chunk (#001) ...
Wed 21:28: Connecting outputs from chunk (#002) ...
Wed 21:28: Depthwise coeff ROM depth = 12
Wed 21:28: ROM created for conv18_dw of depth 12 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@714a3f52
Wed 21:28: Building the CORE arithmetic unit for "conv18_dw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 108
Wed 21:28: CORE coefficient vector size: 108
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: Ifmap buffer configuration 4096 x 12
Wed 21:28: loop = false
Wed 21:28: Pointwise coeff ROM depth = 36
Wed 21:28: ROM created for conv18_pw of depth 36 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2e893ae3
Wed 21:28: Building the CORE arithmetic unit for "conv18_pw" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Compiling kernel "conv18"
Wed 21:28: 
Wed 21:28: Generating kernel conv21 ...
Wed 21:28: Instantiating kernel "conv21"
Wed 21:28: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: coeffOnChip = true
Wed 21:28: Input height = 28, output height = 28, pad = 0
Wed 21:28: Counter H = 28 W = 28
Wed 21:28: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:28: Ifmap buffer configuration 4096 x 12
Wed 21:28: loop = false
Wed 21:28: ROM created for conv21 of depth 48 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@132d93f1
Wed 21:28: Building the CORE arithmetic unit for "conv21" ...
Wed 21:28: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:28: CORE ifmap vector size: 12
Wed 21:28: CORE coefficient vector size: 144
Wed 21:28: CORE ofmap vector size: 12
Wed 21:28: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:28: Connecting to output: ofmap
Wed 21:28: Connecting to output: ofmap_1
Wed 21:28: Compiling kernel "conv21"
Wed 21:29: 
Wed 21:29: Generating kernel conv23 ...
Wed 21:29: Instantiating kernel "conv23"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 28, output height = 28, pad = 1
Wed 21:29: Counter H = 30 W = 30
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv23" ...
Wed 21:29: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 16
Wed 21:29: ROM created for conv23_dw of depth 16 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@164cd722
Wed 21:29: Building the CORE arithmetic unit for "conv23_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 48
Wed 21:29: ROM created for conv23_pw of depth 48 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@18767e9e
Wed 21:29: Building the CORE arithmetic unit for "conv23_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 1024
Wed 21:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv23"
Wed 21:29: 
Wed 21:29: Generating kernel conv27 ...
Wed 21:29: Instantiating kernel "conv27"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 28, output height = 28, pad = 0
Wed 21:29: Counter H = 28 W = 28
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 4096 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv27 of depth 48 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@102837bc
Wed 21:29: Building the CORE arithmetic unit for "conv27" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv27"
Wed 21:29: 
Wed 21:29: Generating kernel conv29 ...
Wed 21:29: Instantiating kernel "conv29"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 28, output height = 28, pad = 1
Wed 21:29: Counter H = 30 W = 30
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv29" ...
Wed 21:29: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 16
Wed 21:29: ROM created for conv29_dw of depth 16 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@60db13c9
Wed 21:29: Building the CORE arithmetic unit for "conv29_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 48
Wed 21:29: ROM created for conv29_pw of depth 48 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@a04ff8b
Wed 21:29: Building the CORE arithmetic unit for "conv29_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 1024
Wed 21:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv29"
Wed 21:29: 
Wed 21:29: Generating kernel conv33 ...
Wed 21:29: Instantiating kernel "conv33"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 28, output height = 28, pad = 0
Wed 21:29: Counter H = 28 W = 28
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 4096 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv33 of depth 48 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1e5deea8
Wed 21:29: Building the CORE arithmetic unit for "conv33" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv33"
Wed 21:29: 
Wed 21:29: Generating kernel conv35 ...
Wed 21:29: Instantiating kernel "conv35"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 28, output height = 28, pad = 1
Wed 21:29: Counter H = 30 W = 30
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv35" ...
Wed 21:29: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 16
Wed 21:29: ROM created for conv35_dw of depth 16 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@39e49474
Wed 21:29: Building the CORE arithmetic unit for "conv35_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 96
Wed 21:29: ROM created for conv35_pw of depth 96 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5abcb88
Wed 21:29: Building the CORE arithmetic unit for "conv35_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv35"
Wed 21:29: 
Wed 21:29: Generating kernel conv38 ...
Wed 21:29: Instantiating kernel "conv38"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv38 of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@31c9b90f
Wed 21:29: Building the CORE arithmetic unit for "conv38" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv38"
Wed 21:29: 
Wed 21:29: Generating kernel conv40 ...
Wed 21:29: Instantiating kernel "conv40"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv40" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 32
Wed 21:29: ROM created for conv40_dw of depth 32 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@b3fa1f8
Wed 21:29: Building the CORE arithmetic unit for "conv40_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 192
Wed 21:29: ROM created for conv40_pw of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7c01d08f
Wed 21:29: Building the CORE arithmetic unit for "conv40_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 256
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv40"
Wed 21:29: 
Wed 21:29: Generating kernel conv44 ...
Wed 21:29: Instantiating kernel "conv44"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv44 of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@22ca001a
Wed 21:29: Building the CORE arithmetic unit for "conv44" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv44"
Wed 21:29: 
Wed 21:29: Generating kernel conv46 ...
Wed 21:29: Instantiating kernel "conv46"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv46" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 32
Wed 21:29: ROM created for conv46_dw of depth 32 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@66096d5e
Wed 21:29: Building the CORE arithmetic unit for "conv46_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 192
Wed 21:29: ROM created for conv46_pw of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@71609b61
Wed 21:29: Building the CORE arithmetic unit for "conv46_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 256
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv46"
Wed 21:29: 
Wed 21:29: Generating kernel conv50 ...
Wed 21:29: Instantiating kernel "conv50"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv50 of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@17604eb9
Wed 21:29: Building the CORE arithmetic unit for "conv50" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv50"
Wed 21:29: 
Wed 21:29: Generating kernel conv52 ...
Wed 21:29: Instantiating kernel "conv52"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv52" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 32
Wed 21:29: ROM created for conv52_dw of depth 32 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@42b06b5d
Wed 21:29: Building the CORE arithmetic unit for "conv52_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 192
Wed 21:29: ROM created for conv52_pw of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2a5d8dda
Wed 21:29: Building the CORE arithmetic unit for "conv52_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 256
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv52"
Wed 21:29: 
Wed 21:29: Generating kernel conv56 ...
Wed 21:29: Instantiating kernel "conv56"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv56 of depth 192 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4573d1bc
Wed 21:29: Building the CORE arithmetic unit for "conv56" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv56"
Wed 21:29: 
Wed 21:29: Generating kernel conv58 ...
Wed 21:29: Instantiating kernel "conv58"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv58" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 32
Wed 21:29: ROM created for conv58_dw of depth 32 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@786b302d
Wed 21:29: Building the CORE arithmetic unit for "conv58_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 256
Wed 21:29: ROM created for conv58_pw of depth 256 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6a246cdb
Wed 21:29: Building the CORE arithmetic unit for "conv58_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv58"
Wed 21:29: 
Wed 21:29: Generating kernel conv61 ...
Wed 21:29: Instantiating kernel "conv61"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv61 of depth 384 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@54a54cac
Wed 21:29: Building the CORE arithmetic unit for "conv61" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv61"
Wed 21:29: 
Wed 21:29: Generating kernel conv63 ...
Wed 21:29: Instantiating kernel "conv63"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv63" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 48
Wed 21:29: ROM created for conv63_dw of depth 48 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7e992722
Wed 21:29: Building the CORE arithmetic unit for "conv63_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 384
Wed 21:29: ROM created for conv63_pw of depth 384 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7185d716
Wed 21:29: Building the CORE arithmetic unit for "conv63_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 256
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv63"
Wed 21:29: 
Wed 21:29: Generating kernel conv67 ...
Wed 21:29: Instantiating kernel "conv67"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv67 of depth 384 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4379d648
Wed 21:29: Building the CORE arithmetic unit for "conv67" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv67"
Wed 21:29: 
Wed 21:29: Generating kernel conv69 ...
Wed 21:29: Instantiating kernel "conv69"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv69" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 48
Wed 21:29: ROM created for conv69_dw of depth 48 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@339928db
Wed 21:29: Building the CORE arithmetic unit for "conv69_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 384
Wed 21:29: ROM created for conv69_pw of depth 384 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7856d9a2
Wed 21:29: Building the CORE arithmetic unit for "conv69_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 256
Wed 21:29: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv69"
Wed 21:29: 
Wed 21:29: Generating kernel conv73 ...
Wed 21:29: Instantiating kernel "conv73"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 0
Wed 21:29: Counter H = 14 W = 14
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 2048 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv73 of depth 384 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@70f95626
Wed 21:29: Building the CORE arithmetic unit for "conv73" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv73"
Wed 21:29: 
Wed 21:29: Generating kernel conv75 ...
Wed 21:29: Instantiating kernel "conv75"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 14, output height = 14, pad = 1
Wed 21:29: Counter H = 16 W = 16
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv75" ...
Wed 21:29: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 48
Wed 21:29: ROM created for conv75_dw of depth 48 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@65a49f82
Wed 21:29: Building the CORE arithmetic unit for "conv75_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 256 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 672
Wed 21:29: ROM created for conv75_pw of depth 672 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7fab075
Wed 21:29: Building the CORE arithmetic unit for "conv75_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv75"
Wed 21:29: 
Wed 21:29: Generating kernel conv78 ...
Wed 21:29: Instantiating kernel "conv78"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 0
Wed 21:29: Counter H = 7 W = 7
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv78 of depth 1120 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@497996c1
Wed 21:29: Building the CORE arithmetic unit for "conv78" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv78"
Wed 21:29: 
Wed 21:29: Generating kernel conv80 ...
Wed 21:29: Instantiating kernel "conv80"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 1
Wed 21:29: Counter H = 9 W = 9
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv80" ...
Wed 21:29: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 80
Wed 21:29: ROM created for conv80_dw of depth 80 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@685acabe
Wed 21:29: Building the CORE arithmetic unit for "conv80_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 128 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 1120
Wed 21:29: ROM created for conv80_pw of depth 1120 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2989fcb6
Wed 21:29: Building the CORE arithmetic unit for "conv80_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 64
Wed 21:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv80"
Wed 21:29: 
Wed 21:29: Generating kernel conv84 ...
Wed 21:29: Instantiating kernel "conv84"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 0
Wed 21:29: Counter H = 7 W = 7
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv84 of depth 1120 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@473cd70e
Wed 21:29: Building the CORE arithmetic unit for "conv84" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Connecting to output: ofmap_1
Wed 21:29: Compiling kernel "conv84"
Wed 21:29: 
Wed 21:29: Generating kernel conv86 ...
Wed 21:29: Instantiating kernel "conv86"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 1
Wed 21:29: Counter H = 9 W = 9
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv86" ...
Wed 21:29: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 80
Wed 21:29: ROM created for conv86_dw of depth 80 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@744ac30d
Wed 21:29: Building the CORE arithmetic unit for "conv86_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 128 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 1120
Wed 21:29: ROM created for conv86_pw of depth 1120 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@419f1604
Wed 21:29: Building the CORE arithmetic unit for "conv86_pw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Residual buffer depth = 64
Wed 21:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv86"
Wed 21:29: 
Wed 21:29: Generating kernel conv90 ...
Wed 21:29: Instantiating kernel "conv90"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 0
Wed 21:29: Counter H = 7 W = 7
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Ifmap buffer configuration 1024 x 12
Wed 21:29: loop = false
Wed 21:29: ROM created for conv90 of depth 1120 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1d5f7369
Wed 21:29: Building the CORE arithmetic unit for "conv90" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 12
Wed 21:29: CORE coefficient vector size: 144
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 21:29: Connecting to output: ofmap
Wed 21:29: Compiling kernel "conv90"
Wed 21:29: 
Wed 21:29: Generating kernel conv92 ...
Wed 21:29: Instantiating kernel "conv92"
Wed 21:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: coeffOnChip = true
Wed 21:29: Input height = 7, output height = 7, pad = 1
Wed 21:29: Counter H = 9 W = 9
Wed 21:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:29: Building line buffer for "conv92" ...
Wed 21:29: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 21:29: Line buffer input vector size: 12, output vector size: 108.
Wed 21:29: Number of separated line buffers: 12
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:29: Size of line buffer output: 3
Wed 21:29: Number of line buffer output chunks: 3
Wed 21:29: Connecting outputs from chunk (#000) ...
Wed 21:29: Connecting outputs from chunk (#001) ...
Wed 21:29: Connecting outputs from chunk (#002) ...
Wed 21:29: Depthwise coeff ROM depth = 80
Wed 21:29: ROM created for conv92_dw of depth 80 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@40158acf
Wed 21:29: Building the CORE arithmetic unit for "conv92_dw" ...
Wed 21:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:29: CORE ifmap vector size: 108
Wed 21:29: CORE coefficient vector size: 108
Wed 21:29: CORE ofmap vector size: 12
Wed 21:29: Ifmap buffer configuration 128 x 12
Wed 21:29: loop = false
Wed 21:29: Pointwise coeff ROM depth = 2160
Wed 21:30: ROM created for conv92_pw of depth 2160 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@33f53da1
Wed 21:30: Building the CORE arithmetic unit for "conv92_pw" ...
Wed 21:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:30: CORE ifmap vector size: 12
Wed 21:30: CORE coefficient vector size: 144
Wed 21:30: CORE ofmap vector size: 12
Wed 21:30: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Wed 21:30: Connecting to output: ofmap
Wed 21:30: Compiling kernel "conv92"
Wed 21:30: 
Wed 21:30: Generating kernel conv95 ...
Wed 21:30: Instantiating kernel "conv95"
Wed 21:30: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:30: coeffOnChip = true
Wed 21:30: Input height = 7, output height = 7, pad = 0
Wed 21:30: Counter H = 7 W = 7
Wed 21:30: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:30: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:30: Ifmap buffer configuration 2048 x 12
Wed 21:30: loop = false
Wed 21:30: ROM created for conv95 of depth 4320 and type {DFEVectorType: 96 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6a1de024
Wed 21:30: Building the CORE arithmetic unit for "conv95" ...
Wed 21:30: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:30: CORE ifmap vector size: 12
Wed 21:30: CORE coefficient vector size: 96
Wed 21:30: CORE ofmap vector size: 8
Wed 21:30: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 21:30: Connecting to output: ofmap
Wed 21:30: Compiling kernel "conv95"
Wed 21:30: 
Wed 21:30: Generating padding kernels for DRAM access
Wed 21:30: Instantiating kernel "ifmap_unpad"
Wed 21:30: Compiling kernel "ifmap_unpad"
Wed 21:30: 
Wed 21:30: Instantiating kernel "ofmap_pad"
Wed 21:30: Compiling kernel "ofmap_pad"
Wed 21:30: 
Wed 21:30: Setting up stream connections for conv0
Wed 21:30: Setting up stream connections for conv2
Wed 21:30: Connecting ifmap <== conv0: ofmap
Wed 21:30: Setting up stream connections for conv5
Wed 21:30: Connecting ifmap <== conv2: ofmap
Wed 21:30: Setting up stream connections for conv7
Wed 21:30: Connecting ifmap <== conv5: ofmap
Wed 21:30: Setting up stream connections for conv10
Wed 21:30: Connecting ifmap <== conv7: ofmap
Wed 21:30: Setting up stream connections for conv12
Wed 21:30: Connecting ifmap <== conv10: ofmap
Wed 21:30: Setting up stream connections for conv16
Wed 21:30: Connecting ifmap <== conv12: ofmap
Wed 21:30: Setting up stream connections for conv18
Wed 21:30: Connecting ifmap <== conv16: ofmap
Wed 21:30: Setting up stream connections for conv21
Wed 21:30: Connecting ifmap <== conv18: ofmap
Wed 21:30: Setting up stream connections for conv23
Wed 21:30: Connecting ifmap <== conv21: ofmap
Wed 21:30: Setting up stream connections for conv27
Wed 21:30: Connecting ifmap <== conv23: ofmap
Wed 21:30: Setting up stream connections for conv29
Wed 21:30: Connecting ifmap <== conv27: ofmap
Wed 21:30: Setting up stream connections for conv33
Wed 21:30: Connecting ifmap <== conv29: ofmap
Wed 21:30: Setting up stream connections for conv35
Wed 21:30: Connecting ifmap <== conv33: ofmap
Wed 21:30: Setting up stream connections for conv38
Wed 21:30: Connecting ifmap <== conv35: ofmap
Wed 21:30: Setting up stream connections for conv40
Wed 21:30: Connecting ifmap <== conv38: ofmap
Wed 21:30: Setting up stream connections for conv44
Wed 21:30: Connecting ifmap <== conv40: ofmap
Wed 21:30: Setting up stream connections for conv46
Wed 21:30: Connecting ifmap <== conv44: ofmap
Wed 21:30: Setting up stream connections for conv50
Wed 21:30: Connecting ifmap <== conv46: ofmap
Wed 21:30: Setting up stream connections for conv52
Wed 21:30: Connecting ifmap <== conv50: ofmap
Wed 21:30: Setting up stream connections for conv56
Wed 21:30: Connecting ifmap <== conv52: ofmap
Wed 21:30: Setting up stream connections for conv58
Wed 21:30: Connecting ifmap <== conv56: ofmap
Wed 21:30: Setting up stream connections for conv61
Wed 21:30: Connecting ifmap <== conv58: ofmap
Wed 21:30: Setting up stream connections for conv63
Wed 21:30: Connecting ifmap <== conv61: ofmap
Wed 21:30: Setting up stream connections for conv67
Wed 21:30: Connecting ifmap <== conv63: ofmap
Wed 21:30: Setting up stream connections for conv69
Wed 21:30: Connecting ifmap <== conv67: ofmap
Wed 21:30: Setting up stream connections for conv73
Wed 21:30: Connecting ifmap <== conv69: ofmap
Wed 21:30: Setting up stream connections for conv75
Wed 21:30: Connecting ifmap <== conv73: ofmap
Wed 21:30: Setting up stream connections for conv78
Wed 21:30: Connecting ifmap <== conv75: ofmap
Wed 21:30: Setting up stream connections for conv80
Wed 21:30: Connecting ifmap <== conv78: ofmap
Wed 21:30: Setting up stream connections for conv84
Wed 21:30: Connecting ifmap <== conv80: ofmap
Wed 21:30: Setting up stream connections for conv86
Wed 21:30: Connecting ifmap <== conv84: ofmap
Wed 21:30: Setting up stream connections for conv90
Wed 21:30: Connecting ifmap <== conv86: ofmap
Wed 21:30: Setting up stream connections for conv92
Wed 21:30: Connecting ifmap <== conv90: ofmap
Wed 21:30: Setting up stream connections for conv95
Wed 21:30: Connecting ifmap <== conv92: ofmap
Wed 21:30: DRAM will be used to build the design
Wed 21:30: Setup streams for kernel "conv0"
Wed 21:30: # cycles:       459684
Wed 21:30: # ifmap stream: 150528
Wed 21:30: # ofmap stream: 451584
Wed 21:30: coeff vec size: 108
Wed 21:30: coeff stream bit width: 1728
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv2"
Wed 21:30: # cycles:       77976
Wed 21:30: # ifmap stream: 451584
Wed 21:30: # ofmap stream: 301056
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv5"
Wed 21:30: # cycles:       200704
Wed 21:30: # ifmap stream: 301056
Wed 21:30: # ofmap stream: 1204224
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv7"
Wed 21:30: # cycles:       207936
Wed 21:30: # ifmap stream: 1204224
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv10"
Wed 21:30: # cycles:       75264
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 451584
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv12"
Wed 21:30: # cycles:       80736
Wed 21:30: # ifmap stream: 451584
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv16"
Wed 21:30: # cycles:       75264
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 451584
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv18"
Wed 21:30: # cycles:       121104
Wed 21:30: # ifmap stream: 451584
Wed 21:30: # ofmap stream: 28224
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv21"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 28224
Wed 21:30: # ofmap stream: 150528
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv23"
Wed 21:30: # cycles:       43200
Wed 21:30: # ifmap stream: 150528
Wed 21:30: # ofmap stream: 28224
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv27"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 28224
Wed 21:30: # ofmap stream: 150528
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv29"
Wed 21:30: # cycles:       43200
Wed 21:30: # ifmap stream: 150528
Wed 21:30: # ofmap stream: 28224
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv33"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 28224
Wed 21:30: # ofmap stream: 150528
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv35"
Wed 21:30: # cycles:       86400
Wed 21:30: # ifmap stream: 150528
Wed 21:30: # ofmap stream: 14112
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv38"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 14112
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv40"
Wed 21:30: # cycles:       49152
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 14112
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv44"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 14112
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv46"
Wed 21:30: # cycles:       49152
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 14112
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv50"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 14112
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv52"
Wed 21:30: # cycles:       49152
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 14112
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv56"
Wed 21:30: # cycles:       37632
Wed 21:30: # ifmap stream: 14112
Wed 21:30: # ofmap stream: 75264
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv58"
Wed 21:30: # cycles:       65536
Wed 21:30: # ifmap stream: 75264
Wed 21:30: # ofmap stream: 18816
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv61"
Wed 21:30: # cycles:       75264
Wed 21:30: # ifmap stream: 18816
Wed 21:30: # ofmap stream: 112896
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv63"
Wed 21:30: # cycles:       98304
Wed 21:30: # ifmap stream: 112896
Wed 21:30: # ofmap stream: 18816
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv67"
Wed 21:30: # cycles:       75264
Wed 21:30: # ifmap stream: 18816
Wed 21:30: # ofmap stream: 112896
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv69"
Wed 21:30: # cycles:       98304
Wed 21:30: # ifmap stream: 112896
Wed 21:30: # ofmap stream: 18816
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv73"
Wed 21:30: # cycles:       75264
Wed 21:30: # ifmap stream: 18816
Wed 21:30: # ofmap stream: 112896
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv75"
Wed 21:30: # cycles:       172032
Wed 21:30: # ifmap stream: 112896
Wed 21:30: # ofmap stream: 8232
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv78"
Wed 21:30: # cycles:       54880
Wed 21:30: # ifmap stream: 8232
Wed 21:30: # ofmap stream: 47040
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv80"
Wed 21:30: # cycles:       90720
Wed 21:30: # ifmap stream: 47040
Wed 21:30: # ofmap stream: 8232
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv84"
Wed 21:30: # cycles:       54880
Wed 21:30: # ifmap stream: 8232
Wed 21:30: # ofmap stream: 47040
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv86"
Wed 21:30: # cycles:       90720
Wed 21:30: # ifmap stream: 47040
Wed 21:30: # ofmap stream: 8232
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv90"
Wed 21:30: # cycles:       54880
Wed 21:30: # ifmap stream: 8232
Wed 21:30: # ofmap stream: 47040
Wed 21:30: coeff vec size: 144
Wed 21:30: coeff stream bit width: 2304
Wed 21:30: coeff stream chunk size: 1
Wed 21:30: Setup streams for kernel "conv92"
Wed 21:30: # cycles:       174960
Wed 21:30: # ifmap stream: 47040
Wed 21:30: # ofmap stream: 15876
Wed 21:30: coeff vec size: 1296
Wed 21:30: coeff stream bit width: 20736
Wed 21:30: coeff stream chunk size: 9
Wed 21:30: Setup streams for kernel "conv95"
Wed 21:30: # cycles:       211680
Wed 21:30: # ifmap stream: 15876
Wed 21:30: # ofmap stream: 62720
Wed 21:30: coeff vec size: 96
Wed 21:30: coeff stream bit width: 1536
Wed 21:30: coeff stream chunk size: 1
Wed 21:33: Generating input files (VHDL, netlists, vendor specific IP cores)
Wed 21:37: Running back-end  build (15 phases)
Wed 21:37: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Wed 21:38: (2/15) - Synthesize DFE Modules (VivadoSynth)
Wed 21:38: Executing Synthesis Strategy VIVADO_DEFAULT
Wed 23:31: (3/15) - Generate Resource Report (VivadoResourceUsage)
Wed 23:31: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Wed 23:33: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Wed 23:33: 
Wed 23:33: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Wed 23:33: For this compile, we estimate this process may take longer than 1 hour.
Wed 23:33: We recommend running in simulation to verify correctness before building hardware.
Wed 23:33: 
Wed 23:33: PRELIMINARY RESOURCE USAGE
Wed 23:33: FPGA: xcVU9P-FLGB2104-2-E
Wed 23:33: Logic utilization:     1121711 / 3546720 (31.63%)
Wed 23:33:   LUTs:                 173147 / 1182240 (14.65%)
Wed 23:33:   Primary FFs:          948564 / 2364480 (40.12%)
Wed 23:33: DSP blocks:               6810 / 6840    (99.56%)
Wed 23:33: Block memory (BRAM18):    3808 / 4320    (88.15%)
Wed 23:33: Block memory (URAM):       905 / 960     (94.27%)
Wed 23:33: 
Wed 23:33: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Wed 23:33: 
Wed 23:33: PRELIMINARY POWER REPORT
Wed 23:33: Total On-Chip Power (W) 17.60 (budget: 91.80) 
Wed 23:33: Dynamic Power (W)       14.68 
Wed 23:33: Device Static Power(W)   2.92 
Wed 23:33: 
Wed 23:33: (7/15) - Place DFE (VivadoImplementation)
Wed 23:33: Executing the following 10 Implementation Strategies in 4 threads:
Wed 23:33:  - VIVADO_DEFAULT
Wed 23:33:  - MAXELER1
Wed 23:33:  - MAXELER2
Wed 23:33:  - MAXELER3
Wed 23:33:  - MAXELER4
Wed 23:33:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Wed 23:33:  - PERFORMANCE_EXPLORE
Wed 23:33:  - PERFORMANCE_EXTRA_TIMING_OPT
Wed 23:33:  - PERFORMANCE_NET_DELAY_HIGH
Wed 23:33:  - PERFORMANCE_REFINE_PLACEMENT
Thu 05:55: Implementation: Strategy "MAXELER2" met timing with score 0 (best score 0)
Thu 05:55: Implementation: Strategy "MAXELER3" was cancelled (no timing score)
Thu 05:55: Implementation: Strategy "VIVADO_DEFAULT" was cancelled (no timing score)
Thu 05:55: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Thu 05:55: (8/15) - Generate Resource Report (VivadoResourceUsage)
Thu 05:55: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 05:56: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Thu 05:56: 
Thu 05:56: FINAL POWER REPORT
Thu 05:56: Total On-Chip Power (W) 18.64 (budget: 91.80) 
Thu 05:56: Dynamic Power (W)       15.69 
Thu 05:56: Device Static Power(W)   2.95 
Thu 05:56: 
Thu 05:56: (11/15) - Generate Configuration (VivadoBitgen)
Thu 06:19: (12/15) - Update Checksum (VivadoUpdateChecksum)
Thu 06:23: (13/15) - Convert Programming File (VivadoCfgfileGen)
Thu 06:23: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Thu 06:23: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Thu 06:24: 
Thu 06:24: FINAL RESOURCE USAGE
Thu 06:24: FPGA: xcVU9P-FLGB2104-2-E
Thu 06:24: Logic utilization:      901221 / 3546720 (25.41%)
Thu 06:24:   LUTs:                 156731 / 1182240 (13.26%)
Thu 06:24:   Primary FFs:          744490 / 2364480 (31.49%)
Thu 06:24: DSP blocks:               6808 / 6840    (99.53%)
Thu 06:24: Block memory (BRAM18):    3808 / 4320    (88.15%)
Thu 06:24: Block memory (URAM):       905 / 960     (94.27%)
Thu 06:24: 
Thu 06:24: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max (MD5Sum: d230f6420bee508f996aafac3988ae97)
Thu 06:24: Build completed: Thu Dec 30 06:24:12 GMT 2021 (took 8 hours, 55 mins, 58 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV2OnnxS12.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV2OnnxS12.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max MobilenetV2OnnxS12_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_2092347949972340797/cobject/max_9126285123240884164.c -o /tmp/sliccompile_2092347949972340797/cobject/max_9126285123240884164.c.o 
gcc -fno-guess-branch-probability -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxS12.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_7314697305257026980.o 
ld -r /tmp/sliccompile_2092347949972340797/cobject/max_9126285123240884164.c.o max_7314697305257026980.o -o MobilenetV2OnnxS12_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_s12'
g++ ../../src/mobilenet_v2_onnx_s12/MobilenetV2OnnxS12CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxS12_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=MobilenetV2OnnxS12 -c -o MobilenetV2OnnxS12_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o MobilenetV2OnnxS12_FREQ_200_dfe MobilenetV2OnnxS12_FREQ_200_dfe.o MobilenetV2OnnxS12_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
