Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v1_manual_5k MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 MobilenetV1Manual5KManager \
	DFEModel=MAIA maxFileName=MobilenetV1Manual5K target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_manual_5k/data/data-mobilenet_v1-manual_5k.txt 
]0; maxJavaRun: MobilenetV1Manual5KManager DFEModel=MAIA maxFileName=MobilenetV1Manual5K target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_manual_5k/data/data-mobilenet_v1-manual_5k.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v1_manual_5k
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v1_manual_5k.MobilenetV1Manual5KManager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV1Manual5K target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_manual_5k/data/data-mobilenet_v1-manual_5k.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Fri 11:56: MaxCompiler version: 2021.1
Fri 11:56: Build "MobilenetV1Manual5K" start time: Fri Dec 31 11:56:37 GMT 2021
Fri 11:56: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Fri 11:56: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1Manual5K_MAIA_DFE_FREQ_200
Fri 11:56: Detailed build log available in "_build.log"
Fri 11:56: 
Fri 11:56: ENGINE BUILD PARAMETERS
Fri 11:56: 	              Build name: MobilenetV1Manual5K_MAIA_DFE_FREQ_200                                                                                      
Fri 11:56: 	             maxFileName: MobilenetV1Manual5K                                                                                                        
Fri 11:56: 	                  target: DFE                                                                                                                        
Fri 11:56: 	                DFEModel: MAIA                                                                                                                       
Fri 11:56: 	              enableMPCX: false                                                                                                                      
Fri 11:56: 	                bitWidth: 32                                                                                                                         
Fri 11:56: 	                     WBW: 32                                                                                                                         
Fri 11:56: 	                   DTYPE: fixed                                                                                                                      
Fri 11:56: 	           NUM_FRAC_BITS: 8                                                                                                                          
Fri 11:56: 	                      PF: 1                                                                                                                          
Fri 11:56: 	                      PC: 1                                                                                                                          
Fri 11:56: 	                      PK: 1                                                                                                                          
Fri 11:56: 	                       H: 1                                                                                                                          
Fri 11:56: 	                       W: 1                                                                                                                          
Fri 11:56: 	                       C: 1                                                                                                                          
Fri 11:56: 	                       F: 1                                                                                                                          
Fri 11:56: 	                       K: 1                                                                                                                          
Fri 11:56: 	                     PAD: 0                                                                                                                          
Fri 11:56: 	                       S: 1                                                                                                                          
Fri 11:56: 	                     SEQ: 0                                                                                                                          
Fri 11:56: 	                    FREQ: 200                                                                                                                        
Fri 11:56: 	                USE_DRAM: false                                                                                                                      
Fri 11:56: 	                 USE_BNN: false                                                                                                                      
Fri 11:56: 	            USE_WINOGRAD: false                                                                                                                      
Fri 11:56: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                      
Fri 11:56: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                          
Fri 11:56: 	                   DEBUG: false                                                                                                                      
Fri 11:56: 	           COEFF_ON_CHIP: false                                                                                                                      
Fri 11:56: 	              INIT_COEFF: false                                                                                                                      
Fri 11:56: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_manual_5k/data/data-mobilenet_v1-manual_5k.txt
Fri 11:57: Generating kernel conv0 ...
Fri 11:57: Instantiating kernel "conv0"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 224, output height = 224, pad = 1
Fri 11:57: Counter H = 226 W = 226
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Ifmap buffer configuration 131072 x 2
Fri 11:57: loop = false
Fri 11:57: Building line buffer for "conv0" ...
Fri 11:57: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 2, output vector size: 18.
Fri 11:57: Number of separated line buffers: 2
Fri 11:57: Initialising line buffer kernel with 3 x 226 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 226 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: ROM created for conv0 of depth 8 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@87a85e1
Fri 11:57: Building the CORE arithmetic unit for "conv0" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 18
Fri 11:57: CORE coefficient vector size: 144
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv0"
Fri 11:57: 
Fri 11:57: Generating kernel conv1 ...
Fri 11:57: Instantiating kernel "conv1"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 112, output height = 112, pad = 1
Fri 11:57: Counter H = 114 W = 114
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv1" ...
Fri 11:57: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 8, output vector size: 72.
Fri 11:57: Number of separated line buffers: 8
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 4
Fri 11:57: ROM created for conv1_dw of depth 4 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4beaf6bd
Fri 11:57: Building the CORE arithmetic unit for "conv1_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 72
Fri 11:57: CORE coefficient vector size: 72
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: Ifmap buffer configuration 16384 x 8
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 12
Fri 11:57: ROM created for conv1_pw of depth 12 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@39a87e72
Fri 11:57: Building the CORE arithmetic unit for "conv1_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 8
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv1"
Fri 11:57: 
Fri 11:57: Generating kernel conv2 ...
Fri 11:57: Instantiating kernel "conv2"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 112, output height = 112, pad = 1
Fri 11:57: Counter H = 114 W = 114
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv2" ...
Fri 11:57: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 24, output vector size: 216.
Fri 11:57: Number of separated line buffers: 24
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 114 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 3
Fri 11:57: ROM created for conv2_dw of depth 3 and type {DFEVectorType: 216 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@182dcd2b
Fri 11:57: Building the CORE arithmetic unit for "conv2_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 216
Fri 11:57: CORE coefficient vector size: 216
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: Ifmap buffer configuration 65536 x 24
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 33
Fri 11:57: ROM created for conv2_pw of depth 33 and type {DFEVectorType: 288 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@43e86c0c
Fri 11:57: Building the CORE arithmetic unit for "conv2_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 24
Fri 11:57: CORE coefficient vector size: 288
Fri 11:57: CORE ofmap vector size: 12
Fri 11:57: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv2"
Fri 11:57: 
Fri 11:57: Generating kernel conv3 ...
Fri 11:57: Instantiating kernel "conv3"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 56, output height = 56, pad = 1
Fri 11:57: Counter H = 58 W = 58
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv3" ...
Fri 11:57: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 12, output vector size: 108.
Fri 11:57: Number of separated line buffers: 12
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 11
Fri 11:57: ROM created for conv3_dw of depth 11 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@14270715
Fri 11:57: Building the CORE arithmetic unit for "conv3_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 108
Fri 11:57: CORE coefficient vector size: 108
Fri 11:57: CORE ofmap vector size: 12
Fri 11:57: Ifmap buffer configuration 4096 x 12
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 121
Fri 11:57: ROM created for conv3_pw of depth 121 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1bf6c568
Fri 11:57: Building the CORE arithmetic unit for "conv3_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 12
Fri 11:57: CORE coefficient vector size: 144
Fri 11:57: CORE ofmap vector size: 12
Fri 11:57: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv3"
Fri 11:57: 
Fri 11:57: Generating kernel conv4 ...
Fri 11:57: Instantiating kernel "conv4"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 56, output height = 56, pad = 1
Fri 11:57: Counter H = 58 W = 58
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv4" ...
Fri 11:57: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 12, output vector size: 108.
Fri 11:57: Number of separated line buffers: 12
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 58 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 11
Fri 11:57: ROM created for conv4_dw of depth 11 and type {DFEVectorType: 108 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@501f317b
Fri 11:57: Building the CORE arithmetic unit for "conv4_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 108
Fri 11:57: CORE coefficient vector size: 108
Fri 11:57: CORE ofmap vector size: 12
Fri 11:57: Ifmap buffer configuration 65536 x 12
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 121
Fri 11:57: ROM created for conv4_pw of depth 121 and type {DFEVectorType: 288 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6d196349
Fri 11:57: Building the CORE arithmetic unit for "conv4_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 12
Fri 11:57: CORE coefficient vector size: 288
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv4"
Fri 11:57: 
Fri 11:57: Generating kernel conv5 ...
Fri 11:57: Instantiating kernel "conv5"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 28, output height = 28, pad = 1
Fri 11:57: Counter H = 30 W = 30
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv5" ...
Fri 11:57: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 24, output vector size: 216.
Fri 11:57: Number of separated line buffers: 24
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 11
Fri 11:57: ROM created for conv5_dw of depth 11 and type {DFEVectorType: 216 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@46c1b1b1
Fri 11:57: Building the CORE arithmetic unit for "conv5_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 216
Fri 11:57: CORE coefficient vector size: 216
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: Ifmap buffer configuration 1024 x 24
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 176
Fri 11:57: ROM created for conv5_pw of depth 176 and type {DFEVectorType: 384 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3e53ca65
Fri 11:57: Building the CORE arithmetic unit for "conv5_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 24
Fri 11:57: CORE coefficient vector size: 384
Fri 11:57: CORE ofmap vector size: 16
Fri 11:57: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv5"
Fri 11:57: 
Fri 11:57: Generating kernel conv6 ...
Fri 11:57: Instantiating kernel "conv6"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 28, output height = 28, pad = 1
Fri 11:57: Counter H = 30 W = 30
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv6" ...
Fri 11:57: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 16, output vector size: 144.
Fri 11:57: Number of separated line buffers: 16
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 30 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 16
Fri 11:57: ROM created for conv6_dw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@fee09e8
Fri 11:57: Building the CORE arithmetic unit for "conv6_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 144
Fri 11:57: CORE coefficient vector size: 144
Fri 11:57: CORE ofmap vector size: 16
Fri 11:57: Ifmap buffer configuration 16384 x 16
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 352
Fri 11:57: ROM created for conv6_pw of depth 352 and type {DFEVectorType: 384 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d851dc7
Fri 11:57: Building the CORE arithmetic unit for "conv6_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 16
Fri 11:57: CORE coefficient vector size: 384
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv6"
Fri 11:57: 
Fri 11:57: Generating kernel conv7 ...
Fri 11:57: Instantiating kernel "conv7"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv7" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 24, output vector size: 216.
Fri 11:57: Number of separated line buffers: 24
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 22
Fri 11:57: ROM created for conv7_dw of depth 22 and type {DFEVectorType: 216 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6a3f849
Fri 11:57: Building the CORE arithmetic unit for "conv7_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 216
Fri 11:57: CORE coefficient vector size: 216
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: Ifmap buffer configuration 256 x 24
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:57: ROM created for conv7_pw of depth 1408 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@73a378c
Fri 11:57: Building the CORE arithmetic unit for "conv7_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 24
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv7"
Fri 11:57: 
Fri 11:57: Generating kernel conv8 ...
Fri 11:57: Instantiating kernel "conv8"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv8" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 8, output vector size: 72.
Fri 11:57: Number of separated line buffers: 8
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 64
Fri 11:57: ROM created for conv8_dw of depth 64 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3dce49dd
Fri 11:57: Building the CORE arithmetic unit for "conv8_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 72
Fri 11:57: CORE coefficient vector size: 72
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: Ifmap buffer configuration 16384 x 8
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:57: ROM created for conv8_pw of depth 1408 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@599e923c
Fri 11:57: Building the CORE arithmetic unit for "conv8_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 8
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv8"
Fri 11:57: 
Fri 11:57: Generating kernel conv9 ...
Fri 11:57: Instantiating kernel "conv9"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv9" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 24, output vector size: 216.
Fri 11:57: Number of separated line buffers: 24
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 22
Fri 11:57: ROM created for conv9_dw of depth 22 and type {DFEVectorType: 216 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@ed0f889
Fri 11:57: Building the CORE arithmetic unit for "conv9_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 216
Fri 11:57: CORE coefficient vector size: 216
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: Ifmap buffer configuration 256 x 24
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:57: ROM created for conv9_pw of depth 1408 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3230a5c4
Fri 11:57: Building the CORE arithmetic unit for "conv9_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 24
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv9"
Fri 11:57: 
Fri 11:57: Generating kernel conv10 ...
Fri 11:57: Instantiating kernel "conv10"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv10" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 8, output vector size: 72.
Fri 11:57: Number of separated line buffers: 8
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 64
Fri 11:57: ROM created for conv10_dw of depth 64 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@482fd74a
Fri 11:57: Building the CORE arithmetic unit for "conv10_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 72
Fri 11:57: CORE coefficient vector size: 72
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: Ifmap buffer configuration 16384 x 8
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:57: ROM created for conv10_pw of depth 1408 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1bf0502f
Fri 11:57: Building the CORE arithmetic unit for "conv10_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 8
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv10"
Fri 11:57: 
Fri 11:57: Generating kernel conv11 ...
Fri 11:57: Instantiating kernel "conv11"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv11" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 24, output vector size: 216.
Fri 11:57: Number of separated line buffers: 24
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 22
Fri 11:57: ROM created for conv11_dw of depth 22 and type {DFEVectorType: 216 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@56bec54e
Fri 11:57: Building the CORE arithmetic unit for "conv11_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 216
Fri 11:57: CORE coefficient vector size: 216
Fri 11:57: CORE ofmap vector size: 24
Fri 11:57: Ifmap buffer configuration 256 x 24
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:57: ROM created for conv11_pw of depth 1408 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@78d99911
Fri 11:57: Building the CORE arithmetic unit for "conv11_pw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 24
Fri 11:57: CORE coefficient vector size: 192
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:57: Connecting to output: ofmap
Fri 11:57: Compiling kernel "conv11"
Fri 11:57: 
Fri 11:57: Generating kernel conv12 ...
Fri 11:57: Instantiating kernel "conv12"
Fri 11:57: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: coeffOnChip = true
Fri 11:57: Input height = 14, output height = 14, pad = 1
Fri 11:57: Counter H = 16 W = 16
Fri 11:57: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:57: Building line buffer for "conv12" ...
Fri 11:57: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 11:57: Line buffer input vector size: 8, output vector size: 72.
Fri 11:57: Number of separated line buffers: 8
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Initialising line buffer kernel with 3 x 16 x 1
Fri 11:57: Size of line buffer output: 3
Fri 11:57: Number of line buffer output chunks: 3
Fri 11:57: Connecting outputs from chunk (#000) ...
Fri 11:57: Connecting outputs from chunk (#001) ...
Fri 11:57: Connecting outputs from chunk (#002) ...
Fri 11:57: Depthwise coeff ROM depth = 64
Fri 11:57: ROM created for conv12_dw of depth 64 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@614df2cf
Fri 11:57: Building the CORE arithmetic unit for "conv12_dw" ...
Fri 11:57: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:57: CORE ifmap vector size: 72
Fri 11:57: CORE coefficient vector size: 72
Fri 11:57: CORE ofmap vector size: 8
Fri 11:57: Ifmap buffer configuration 16384 x 8
Fri 11:57: loop = false
Fri 11:57: Pointwise coeff ROM depth = 1408
Fri 11:58: ROM created for conv12_pw of depth 1408 and type {DFEVectorType: 384 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2f12355c
Fri 11:58: Building the CORE arithmetic unit for "conv12_pw" ...
Fri 11:58: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: CORE ifmap vector size: 8
Fri 11:58: CORE coefficient vector size: 384
Fri 11:58: CORE ofmap vector size: 48
Fri 11:58: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Fri 11:58: Connecting to output: ofmap
Fri 11:58: Compiling kernel "conv12"
Fri 11:58: 
Fri 11:58: Generating kernel conv13 ...
Fri 11:58: Instantiating kernel "conv13"
Fri 11:58: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: coeffOnChip = true
Fri 11:58: Input height = 7, output height = 7, pad = 1
Fri 11:58: Counter H = 9 W = 9
Fri 11:58: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:58: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 11:58: Building line buffer for "conv13" ...
Fri 11:58: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Fri 11:58: Line buffer input vector size: 48, output vector size: 432.
Fri 11:58: Number of separated line buffers: 48
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Initialising line buffer kernel with 3 x 9 x 1
Fri 11:58: Size of line buffer output: 3
Fri 11:58: Number of line buffer output chunks: 3
Fri 11:58: Connecting outputs from chunk (#000) ...
Fri 11:58: Connecting outputs from chunk (#001) ...
Fri 11:58: Connecting outputs from chunk (#002) ...
Fri 11:58: Depthwise coeff ROM depth = 22
Fri 11:58: ROM created for conv13_dw of depth 22 and type {DFEVectorType: 432 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7ed8dba6
Fri 11:58: Building the CORE arithmetic unit for "conv13_dw" ...
Fri 11:58: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: CORE ifmap vector size: 432
Fri 11:58: CORE coefficient vector size: 432
Fri 11:58: CORE ofmap vector size: 48
Fri 11:58: Ifmap buffer configuration 128 x 48
Fri 11:58: loop = false
Fri 11:58: Pointwise coeff ROM depth = 5632
Fri 11:58: ROM created for conv13_pw of depth 5632 and type {DFEVectorType: 192 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@38a2548d
Fri 11:58: Building the CORE arithmetic unit for "conv13_pw" ...
Fri 11:58: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Fri 11:58: CORE ifmap vector size: 48
Fri 11:58: CORE coefficient vector size: 192
Fri 11:58: CORE ofmap vector size: 4
Fri 11:58: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 11:58: Connecting to output: ofmap
Fri 11:58: Compiling kernel "conv13"
Fri 11:58: 
Fri 11:58: Generating padding kernels for DRAM access
Fri 11:58: Instantiating kernel "ifmap_unpad"
Fri 11:58: Compiling kernel "ifmap_unpad"
Fri 11:58: 
Fri 11:58: Instantiating kernel "ofmap_pad"
Fri 11:58: Compiling kernel "ofmap_pad"
Fri 11:58: 
Fri 11:58: Setting up stream connections for conv0
Fri 11:58: Setting up stream connections for conv1
Fri 11:58: Connecting ifmap <== conv0: ofmap
Fri 11:58: Setting up stream connections for conv2
Fri 11:58: Connecting ifmap <== conv1: ofmap
Fri 11:58: Setting up stream connections for conv3
Fri 11:58: Connecting ifmap <== conv2: ofmap
Fri 11:58: Setting up stream connections for conv4
Fri 11:58: Connecting ifmap <== conv3: ofmap
Fri 11:58: Setting up stream connections for conv5
Fri 11:58: Connecting ifmap <== conv4: ofmap
Fri 11:58: Setting up stream connections for conv6
Fri 11:58: Connecting ifmap <== conv5: ofmap
Fri 11:58: Setting up stream connections for conv7
Fri 11:58: Connecting ifmap <== conv6: ofmap
Fri 11:58: Setting up stream connections for conv8
Fri 11:58: Connecting ifmap <== conv7: ofmap
Fri 11:58: Setting up stream connections for conv9
Fri 11:58: Connecting ifmap <== conv8: ofmap
Fri 11:58: Setting up stream connections for conv10
Fri 11:58: Connecting ifmap <== conv9: ofmap
Fri 11:58: Setting up stream connections for conv11
Fri 11:58: Connecting ifmap <== conv10: ofmap
Fri 11:58: Setting up stream connections for conv12
Fri 11:58: Connecting ifmap <== conv11: ofmap
Fri 11:58: Setting up stream connections for conv13
Fri 11:58: Connecting ifmap <== conv12: ofmap
Fri 11:58: DRAM will be used to build the design
Fri 11:58: Setup streams for kernel "conv0"
Fri 11:58: # cycles:       408608
Fri 11:58: # ifmap stream: 200704
Fri 11:58: # ofmap stream: 401408
Fri 11:58: coeff vec size: 144
Fri 11:58: coeff stream bit width: 2304
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv1"
Fri 11:58: # cycles:       155952
Fri 11:58: # ifmap stream: 401408
Fri 11:58: # ofmap stream: 903168
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv2"
Fri 11:58: # cycles:       428868
Fri 11:58: # ifmap stream: 903168
Fri 11:58: # ofmap stream: 413952
Fri 11:58: coeff vec size: 2592
Fri 11:58: coeff stream bit width: 41472
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv3"
Fri 11:58: # cycles:       407044
Fri 11:58: # ifmap stream: 413952
Fri 11:58: # ofmap stream: 413952
Fri 11:58: coeff vec size: 1296
Fri 11:58: coeff stream bit width: 20736
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv4"
Fri 11:58: # cycles:       407044
Fri 11:58: # ifmap stream: 413952
Fri 11:58: # ofmap stream: 206976
Fri 11:58: coeff vec size: 2592
Fri 11:58: coeff stream bit width: 41472
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv5"
Fri 11:58: # cycles:       158400
Fri 11:58: # ifmap stream: 206976
Fri 11:58: # ofmap stream: 200704
Fri 11:58: coeff vec size: 3456
Fri 11:58: coeff stream bit width: 55296
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv6"
Fri 11:58: # cycles:       316800
Fri 11:58: # ifmap stream: 200704
Fri 11:58: # ofmap stream: 103488
Fri 11:58: coeff vec size: 3456
Fri 11:58: coeff stream bit width: 55296
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv7"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 103488
Fri 11:58: # ofmap stream: 100352
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv8"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 100352
Fri 11:58: # ofmap stream: 103488
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv9"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 103488
Fri 11:58: # ofmap stream: 100352
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv10"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 100352
Fri 11:58: # ofmap stream: 103488
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv11"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 103488
Fri 11:58: # ofmap stream: 100352
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv12"
Fri 11:58: # cycles:       360448
Fri 11:58: # ifmap stream: 100352
Fri 11:58: # ofmap stream: 51744
Fri 11:58: coeff vec size: 3456
Fri 11:58: coeff stream bit width: 55296
Fri 11:58: coeff stream chunk size: 9
Fri 11:58: Setup streams for kernel "conv13"
Fri 11:58: # cycles:       456192
Fri 11:58: # ifmap stream: 51744
Fri 11:58: # ofmap stream: 50176
Fri 11:58: coeff vec size: 1728
Fri 11:58: coeff stream bit width: 27648
Fri 11:58: coeff stream chunk size: 9
Fri 12:00: Generating input files (VHDL, netlists, vendor specific IP cores)
Fri 13:39: Running back-end  build (15 phases)
Fri 13:39: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Fri 13:39: (2/15) - Synthesize DFE Modules (VivadoSynth)
Fri 13:39: Executing Synthesis Strategy VIVADO_DEFAULT
Fri 16:22: (3/15) - Generate Resource Report (VivadoResourceUsage)
Fri 16:22: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Fri 16:23: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Fri 16:23: 
Fri 16:23: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Fri 16:23: For this compile, we estimate this process may take longer than 1 hour.
Fri 16:23: We recommend running in simulation to verify correctness before building hardware.
Fri 16:23: 
Fri 16:23: PRELIMINARY RESOURCE USAGE
Fri 16:23: FPGA: xcVU9P-FLGB2104-2-E
Fri 16:23: Logic utilization:     1273420 / 3546720 (35.90%)
Fri 16:23:   LUTs:                 152739 / 1182240 (12.92%)
Fri 16:23:   Primary FFs:         1120681 / 2364480 (47.40%)
Fri 16:23: DSP blocks:               5553 / 6840    (81.18%)
Fri 16:23: Block memory (BRAM18):    4187 / 4320    (96.92%)
Fri 16:23: Block memory (URAM):       960 / 960     (100.00%)
Fri 16:23: 
Fri 16:23: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Fri 16:23: 
Fri 16:23: PRELIMINARY POWER REPORT
Fri 16:23: Total On-Chip Power (W) 17.98 (budget: 91.80) 
Fri 16:23: Dynamic Power (W)       15.03 
Fri 16:23: Device Static Power(W)   2.94 
Fri 16:23: 
Fri 16:23: (7/15) - Place DFE (VivadoImplementation)
Fri 16:23: Executing the following 10 Implementation Strategies in 4 threads:
Fri 16:23:  - VIVADO_DEFAULT
Fri 16:23:  - MAXELER1
Fri 16:23:  - MAXELER2
Fri 16:23:  - MAXELER3
Fri 16:23:  - MAXELER4
Fri 16:23:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Fri 16:23:  - PERFORMANCE_EXPLORE
Fri 16:23:  - PERFORMANCE_EXTRA_TIMING_OPT
Fri 16:23:  - PERFORMANCE_NET_DELAY_HIGH
Fri 16:23:  - PERFORMANCE_REFINE_PLACEMENT
