Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v1_par_s32 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 MobilenetV1ParS32Manager \
	DFEModel=MAIA maxFileName=MobilenetV1ParS32 target='DFE' enableMPCX=false \
	FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s32/data/data-mobilenet-v1-par-s32.txt 
]0; maxJavaRun: MobilenetV1ParS32Manager DFEModel=MAIA maxFileName=MobilenetV1ParS32 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s32/data/data-mobilenet-v1-par-s32.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v1_par_s32
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v1_par_s32.MobilenetV1ParS32Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV1ParS32 target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s32/data/data-mobilenet-v1-par-s32.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Fri 00:52: MaxCompiler version: 2021.1
Fri 00:52: Build "MobilenetV1ParS32" start time: Fri Dec 24 00:52:24 GMT 2021
Fri 00:52: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Fri 00:52: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS32_MAIA_DFE_FREQ_300
Fri 00:52: Detailed build log available in "_build.log"
Fri 00:52: 
Fri 00:52: ENGINE BUILD PARAMETERS
Fri 00:52: 	              Build name: MobilenetV1ParS32_MAIA_DFE_FREQ_300                                                                                    
Fri 00:52: 	             maxFileName: MobilenetV1ParS32                                                                                                      
Fri 00:52: 	                  target: DFE                                                                                                                    
Fri 00:52: 	                DFEModel: MAIA                                                                                                                   
Fri 00:52: 	              enableMPCX: false                                                                                                                  
Fri 00:52: 	                bitWidth: 32                                                                                                                     
Fri 00:52: 	                     WBW: 32                                                                                                                     
Fri 00:52: 	                   DTYPE: fixed                                                                                                                  
Fri 00:52: 	           NUM_FRAC_BITS: 8                                                                                                                      
Fri 00:52: 	                      PF: 1                                                                                                                      
Fri 00:52: 	                      PC: 1                                                                                                                      
Fri 00:52: 	                      PK: 1                                                                                                                      
Fri 00:52: 	                       H: 1                                                                                                                      
Fri 00:52: 	                       W: 1                                                                                                                      
Fri 00:52: 	                       C: 1                                                                                                                      
Fri 00:52: 	                       F: 1                                                                                                                      
Fri 00:52: 	                       K: 1                                                                                                                      
Fri 00:52: 	                     PAD: 0                                                                                                                      
Fri 00:52: 	                       S: 1                                                                                                                      
Fri 00:52: 	                     SEQ: 0                                                                                                                      
Fri 00:52: 	                    FREQ: 300                                                                                                                    
Fri 00:52: 	                USE_DRAM: false                                                                                                                  
Fri 00:52: 	                 USE_BNN: false                                                                                                                  
Fri 00:52: 	            USE_WINOGRAD: false                                                                                                                  
Fri 00:52: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                  
Fri 00:52: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                      
Fri 00:52: 	                   DEBUG: false                                                                                                                  
Fri 00:52: 	           COEFF_ON_CHIP: false                                                                                                                  
Fri 00:52: 	              INIT_COEFF: false                                                                                                                  
Fri 00:52: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s32/data/data-mobilenet-v1-par-s32.txt
Fri 00:53: Generating kernel conv0 ...
Fri 00:53: Instantiating kernel "conv0"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 224, output height = 224, pad = 1
Fri 00:53: Counter H = 226 W = 226
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Read for key = conv0 depth = 6
Fri 00:53: ROM created for conv0 of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2e766822
Fri 00:53: Ifmap buffer configuration 262144 x 1
Fri 00:53: loop = false
Fri 00:53: Building line buffer for "conv0" ...
Fri 00:53: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 1, output vector size: 9.
Fri 00:53: Number of separated line buffers: 1
Fri 00:53: Initialising line buffer kernel with 3 x 226 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv0" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 9
Fri 00:53: CORE coefficient vector size: 144
Fri 00:53: CORE ofmap vector size: 16
Fri 00:53: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 00:53: Connecting to output: ofmap
Fri 00:53: Compiling kernel "conv0"
Fri 00:53: 
Fri 00:53: Generating kernel conv1 ...
Fri 00:53: Instantiating kernel "conv1"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 112, output height = 112, pad = 1
Fri 00:53: Counter H = 114 W = 114
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 512 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv1" ...
Fri 00:53: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 16, output vector size: 144.
Fri 00:53: Number of separated line buffers: 16
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv1_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 144
Fri 00:53: CORE coefficient vector size: 144
Fri 00:53: CORE ofmap vector size: 16
Fri 00:53: Ifmap buffer configuration 16384 x 16
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv1_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 16
Fri 00:53: CORE coefficient vector size: 512
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Fri 00:53: Depthwise coeff ROM depth = 2
Fri 00:53: Pointwise coeff ROM depth = 4
Fri 00:53: Read for key = conv1_dw depth = 2
Fri 00:53: ROM created for conv1_dw of depth 2 and type {DFEVectorType: 144 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@49c13ecd
Fri 00:53: Read for key = conv1_pw depth = 4
Fri 00:53: ROM created for conv1_pw of depth 4 and type {DFEVectorType: 512 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2f4545c6
Fri 00:53: Compiling kernel "conv1"
Fri 00:53: 
Fri 00:53: Generating kernel conv2 ...
Fri 00:53: Instantiating kernel "conv2"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 112, output height = 112, pad = 1
Fri 00:53: Counter H = 114 W = 114
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv2" ...
Fri 00:53: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 114 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv2_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 8192 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv2_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 00:53: Depthwise coeff ROM depth = 2
Fri 00:53: Pointwise coeff ROM depth = 8
Fri 00:53: Read for key = conv2_dw depth = 2
Fri 00:53: ROM created for conv2_dw of depth 2 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7538cc8c
Fri 00:53: Read for key = conv2_pw depth = 8
Fri 00:53: ROM created for conv2_pw of depth 8 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@34042639
Fri 00:53: Compiling kernel "conv2"
Fri 00:53: 
Fri 00:53: Generating kernel conv3 ...
Fri 00:53: Instantiating kernel "conv3"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 56, output height = 56, pad = 1
Fri 00:53: Counter H = 58 W = 58
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv3" ...
Fri 00:53: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv3_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 4096 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv3_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Fri 00:53: Depthwise coeff ROM depth = 4
Fri 00:53: Pointwise coeff ROM depth = 16
Fri 00:53: Read for key = conv3_dw depth = 4
Fri 00:53: ROM created for conv3_dw of depth 4 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4e58e3a0
Fri 00:53: Read for key = conv3_pw depth = 16
Fri 00:53: ROM created for conv3_pw of depth 16 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@45a9c5b9
Fri 00:53: Compiling kernel "conv3"
Fri 00:53: 
Fri 00:53: Generating kernel conv4 ...
Fri 00:53: Instantiating kernel "conv4"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 56, output height = 56, pad = 1
Fri 00:53: Counter H = 58 W = 58
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv4" ...
Fri 00:53: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 58 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv4_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 4096 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv4_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Fri 00:53: Depthwise coeff ROM depth = 4
Fri 00:53: Pointwise coeff ROM depth = 32
Fri 00:53: Read for key = conv4_dw depth = 4
Fri 00:53: ROM created for conv4_dw of depth 4 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@34e4dacc
Fri 00:53: Read for key = conv4_pw depth = 32
Fri 00:53: ROM created for conv4_pw of depth 32 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@46011225
Fri 00:53: Compiling kernel "conv4"
Fri 00:53: 
Fri 00:53: Generating kernel conv5 ...
Fri 00:53: Instantiating kernel "conv5"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 28, output height = 28, pad = 1
Fri 00:53: Counter H = 30 W = 30
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv5" ...
Fri 00:53: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv5_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 1024 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv5_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Fri 00:53: Depthwise coeff ROM depth = 8
Fri 00:53: Pointwise coeff ROM depth = 64
Fri 00:53: Read for key = conv5_dw depth = 8
Fri 00:53: ROM created for conv5_dw of depth 8 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2561ac37
Fri 00:53: Read for key = conv5_pw depth = 64
Fri 00:53: ROM created for conv5_pw of depth 64 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2a2694fc
Fri 00:53: Compiling kernel "conv5"
Fri 00:53: 
Fri 00:53: Generating kernel conv6 ...
Fri 00:53: Instantiating kernel "conv6"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 28, output height = 28, pad = 1
Fri 00:53: Counter H = 30 W = 30
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv6" ...
Fri 00:53: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 30 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv6_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 2048 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv6_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 00:53: Depthwise coeff ROM depth = 8
Fri 00:53: Pointwise coeff ROM depth = 128
Fri 00:53: Read for key = conv6_dw depth = 8
Fri 00:53: ROM created for conv6_dw of depth 8 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@56098771
Fri 00:53: Read for key = conv6_pw depth = 128
Fri 00:53: ROM created for conv6_pw of depth 128 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7355b09b
Fri 00:53: Compiling kernel "conv6"
Fri 00:53: 
Fri 00:53: Generating kernel conv7 ...
Fri 00:53: Instantiating kernel "conv7"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv7" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv7_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 256 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv7_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 256
Fri 00:53: Read for key = conv7_dw depth = 16
Fri 00:53: ROM created for conv7_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1809f6ee
Fri 00:53: Read for key = conv7_pw depth = 256
Fri 00:53: ROM created for conv7_pw of depth 256 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@650e7dac
Fri 00:53: Compiling kernel "conv7"
Fri 00:53: 
Fri 00:53: Generating kernel conv8 ...
Fri 00:53: Instantiating kernel "conv8"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv8" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv8_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 4096 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv8_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 256
Fri 00:53: Read for key = conv8_dw depth = 16
Fri 00:53: ROM created for conv8_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@51bb9560
Fri 00:53: Read for key = conv8_pw depth = 256
Fri 00:53: ROM created for conv8_pw of depth 256 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5432faf8
Fri 00:53: Compiling kernel "conv8"
Fri 00:53: 
Fri 00:53: Generating kernel conv9 ...
Fri 00:53: Instantiating kernel "conv9"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv9" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv9_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 256 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv9_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 256
Fri 00:53: Read for key = conv9_dw depth = 16
Fri 00:53: ROM created for conv9_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5b55f10a
Fri 00:53: Read for key = conv9_pw depth = 256
Fri 00:53: ROM created for conv9_pw of depth 256 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@26127623
Fri 00:53: Compiling kernel "conv9"
Fri 00:53: 
Fri 00:53: Generating kernel conv10 ...
Fri 00:53: Instantiating kernel "conv10"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv10" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv10_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 4096 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv10_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 256
Fri 00:53: Read for key = conv10_dw depth = 16
Fri 00:53: ROM created for conv10_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1a3e6aad
Fri 00:53: Read for key = conv10_pw depth = 256
Fri 00:53: ROM created for conv10_pw of depth 256 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@68b9fc67
Fri 00:53: Compiling kernel "conv10"
Fri 00:53: 
Fri 00:53: Generating kernel conv11 ...
Fri 00:53: Instantiating kernel "conv11"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv11" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv11_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 256 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv11_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 256
Fri 00:53: Read for key = conv11_dw depth = 16
Fri 00:53: ROM created for conv11_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6ba64635
Fri 00:53: Read for key = conv11_pw depth = 256
Fri 00:53: ROM created for conv11_pw of depth 256 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7a70b21
Fri 00:53: Compiling kernel "conv11"
Fri 00:53: 
Fri 00:53: Generating kernel conv12 ...
Fri 00:53: Instantiating kernel "conv12"
Fri 00:53: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: coeffOnChip = true
Fri 00:53: Input height = 14, output height = 14, pad = 1
Fri 00:53: Counter H = 16 W = 16
Fri 00:53: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:53: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:53: Building line buffer for "conv12" ...
Fri 00:53: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Fri 00:53: Line buffer input vector size: 32, output vector size: 288.
Fri 00:53: Number of separated line buffers: 32
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Initialising line buffer kernel with 3 x 16 x 1
Fri 00:53: Size of line buffer output: 3
Fri 00:53: Number of line buffer output chunks: 3
Fri 00:53: Connecting outputs from chunk (#000) ...
Fri 00:53: Connecting outputs from chunk (#001) ...
Fri 00:53: Connecting outputs from chunk (#002) ...
Fri 00:53: Building the CORE arithmetic unit for "conv12_dw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 288
Fri 00:53: CORE coefficient vector size: 288
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: Ifmap buffer configuration 1024 x 32
Fri 00:53: loop = false
Fri 00:53: Building the CORE arithmetic unit for "conv12_pw" ...
Fri 00:53: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:53: CORE ifmap vector size: 32
Fri 00:53: CORE coefficient vector size: 1024
Fri 00:53: CORE ofmap vector size: 32
Fri 00:53: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Fri 00:53: Depthwise coeff ROM depth = 16
Fri 00:53: Pointwise coeff ROM depth = 512
Fri 00:53: Read for key = conv12_dw depth = 16
Fri 00:53: ROM created for conv12_dw of depth 16 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@29647dd
Fri 00:53: Read for key = conv12_pw depth = 512
Fri 00:54: ROM created for conv12_pw of depth 512 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@56e50194
Fri 00:54: Compiling kernel "conv12"
Fri 00:54: 
Fri 00:54: Generating kernel conv13 ...
Fri 00:54: Instantiating kernel "conv13"
Fri 00:54: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:54: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:54: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:54: coeffOnChip = true
Fri 00:54: Input height = 7, output height = 7, pad = 1
Fri 00:54: Counter H = 9 W = 9
Fri 00:54: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:54: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 00:54: Pointwise coeff type = {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}
Fri 00:54: Building line buffer for "conv13" ...
Fri 00:54: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Fri 00:54: Line buffer input vector size: 32, output vector size: 288.
Fri 00:54: Number of separated line buffers: 32
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Initialising line buffer kernel with 3 x 9 x 1
Fri 00:54: Size of line buffer output: 3
Fri 00:54: Number of line buffer output chunks: 3
Fri 00:54: Connecting outputs from chunk (#000) ...
Fri 00:54: Connecting outputs from chunk (#001) ...
Fri 00:54: Connecting outputs from chunk (#002) ...
Fri 00:54: Building the CORE arithmetic unit for "conv13_dw" ...
Fri 00:54: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:54: CORE ifmap vector size: 288
Fri 00:54: CORE coefficient vector size: 288
Fri 00:54: CORE ofmap vector size: 32
Fri 00:54: Ifmap buffer configuration 64 x 32
Fri 00:54: loop = false
Fri 00:54: Building the CORE arithmetic unit for "conv13_pw" ...
Fri 00:54: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 00:54: CORE ifmap vector size: 32
Fri 00:54: CORE coefficient vector size: 1024
Fri 00:54: CORE ofmap vector size: 32
Fri 00:54: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Fri 00:54: Depthwise coeff ROM depth = 32
Fri 00:54: Pointwise coeff ROM depth = 1024
Fri 00:54: Read for key = conv13_dw depth = 32
Fri 00:54: ROM created for conv13_dw of depth 32 and type {DFEVectorType: 288 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@73c6b117
Fri 00:54: Read for key = conv13_pw depth = 1024
Fri 00:54: ROM created for conv13_pw of depth 1024 and type {DFEVectorType: 1024 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7bd4742b
Fri 00:54: Compiling kernel "conv13"
Fri 00:54: 
Fri 00:54: Generating padding kernels for DRAM access
Fri 00:54: Instantiating kernel "ifmap_unpad"
Fri 00:54: Compiling kernel "ifmap_unpad"
Fri 00:54: 
Fri 00:54: Instantiating kernel "ofmap_pad"
Fri 00:54: Compiling kernel "ofmap_pad"
Fri 00:54: 
Fri 00:54: Setting up stream connections for conv0
Fri 00:54: Setting up stream connections for conv1
Fri 00:54: Setting up stream connections for conv2
Fri 00:54: Setting up stream connections for conv3
Fri 00:54: Setting up stream connections for conv4
Fri 00:54: Setting up stream connections for conv5
Fri 00:54: Setting up stream connections for conv6
Fri 00:54: Setting up stream connections for conv7
Fri 00:54: Setting up stream connections for conv8
Fri 00:54: Setting up stream connections for conv9
Fri 00:54: Setting up stream connections for conv10
Fri 00:54: Setting up stream connections for conv11
Fri 00:54: Setting up stream connections for conv12
Fri 00:54: Setting up stream connections for conv13
Fri 00:54: DRAM will be used to build the design
Fri 00:54: Setup streams for kernel "conv0"
Fri 00:54: # cycles:       306456
Fri 00:54: # ifmap stream: 150528
Fri 00:54: # coeff stream: 864
Fri 00:54: # ofmap stream: 401408
Fri 00:54: coeff vec size: 144
Fri 00:54: coeff stream bit width: 1152
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv1"
Fri 00:54: # cycles:       51984
Fri 00:54: # ifmap stream: 401408
Fri 00:54: # coeff stream: 3072
Fri 00:54: # ofmap stream: 802816
Fri 00:54: coeff vec size: 4608
Fri 00:54: coeff stream bit width: 36864
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv2"
Fri 00:54: # cycles:       103968
Fri 00:54: # ifmap stream: 802816
Fri 00:54: # coeff stream: 10240
Fri 00:54: # ofmap stream: 401408
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv3"
Fri 00:54: # cycles:       53824
Fri 00:54: # ifmap stream: 401408
Fri 00:54: # coeff stream: 20480
Fri 00:54: # ofmap stream: 401408
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv4"
Fri 00:54: # cycles:       107648
Fri 00:54: # ifmap stream: 401408
Fri 00:54: # coeff stream: 36864
Fri 00:54: # ofmap stream: 200704
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv5"
Fri 00:54: # cycles:       57600
Fri 00:54: # ifmap stream: 200704
Fri 00:54: # coeff stream: 73728
Fri 00:54: # ofmap stream: 200704
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv6"
Fri 00:54: # cycles:       115200
Fri 00:54: # ifmap stream: 200704
Fri 00:54: # coeff stream: 139264
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv7"
Fri 00:54: # cycles:       65536
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 278528
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv8"
Fri 00:54: # cycles:       65536
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 278528
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv9"
Fri 00:54: # cycles:       65536
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 278528
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv10"
Fri 00:54: # cycles:       65536
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 278528
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv11"
Fri 00:54: # cycles:       65536
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 278528
Fri 00:54: # ofmap stream: 100352
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv12"
Fri 00:54: # cycles:       131072
Fri 00:54: # ifmap stream: 100352
Fri 00:54: # coeff stream: 540672
Fri 00:54: # ofmap stream: 50176
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 00:54: Setup streams for kernel "conv13"
Fri 00:54: # cycles:       82944
Fri 00:54: # ifmap stream: 50176
Fri 00:54: # coeff stream: 1081344
Fri 00:54: # ofmap stream: 50176
Fri 00:54: coeff vec size: 9216
Fri 00:54: coeff stream bit width: 73728
Fri 00:54: coeff stream chunk size: 9
Fri 01:02: Generating input files (VHDL, netlists, vendor specific IP cores)
Fri 01:04: Running back-end  build (15 phases)
Fri 01:04: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Fri 01:04: (2/15) - Synthesize DFE Modules (VivadoSynth)
Fri 01:04: Executing Synthesis Strategy VIVADO_DEFAULT
Sat 04:44: (3/15) - Generate Resource Report (VivadoResourceUsage)
Sat 04:47: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Sat 04:51: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Sat 04:51: 
Sat 04:51: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Sat 04:51: For this compile, we estimate this process may take longer than 1 hour.
Sat 04:51: We recommend running in simulation to verify correctness before building hardware.
Sat 04:51: 
Sat 04:51: PRELIMINARY RESOURCE USAGE
Sat 04:51: FPGA: xcVU9P-FLGB2104-2-E
Sat 04:51: Logic utilization:     4243146 / 3546720 (119.64%)
Sat 04:51:   LUTs:                 170266 / 1182240 (14.40%)
Sat 04:51:   Primary FFs:         4072880 / 2364480 (172.25%)
Sat 04:51: DSP blocks:              16553 / 6840    (242.00%)
Sat 04:51: Block memory (BRAM18):    1550 / 4320    (35.88%)
Sat 04:51: Block memory (URAM):       895 / 960     (93.23%)
Sat 04:51: 
Sat 04:51: 
Sat 04:51: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Sat 04:52: 
Sat 04:52: PRELIMINARY POWER REPORT
Sat 04:52: Total On-Chip Power (W) 39.22 (budget: 91.80) 
Sat 04:52: Dynamic Power (W)       35.70 
Sat 04:52: Device Static Power(W)   3.52 
Sat 04:52: 
Sat 04:52: (7/15) - Place DFE (VivadoImplementation)
Sat 04:52: Executing the following 10 Implementation Strategies in 4 threads:
Sat 04:52:  - VIVADO_DEFAULT
Sat 04:52:  - MAXELER1
Sat 04:52:  - MAXELER2
Sat 04:52:  - MAXELER3
Sat 04:52:  - MAXELER4
Sat 04:52:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Sat 04:52:  - PERFORMANCE_EXPLORE
Sat 04:52:  - PERFORMANCE_EXTRA_TIMING_OPT
Sat 04:52:  - PERFORMANCE_NET_DELAY_HIGH
Sat 04:52:  - PERFORMANCE_REFINE_PLACEMENT
Sat 06:17: Implementation: Strategy "MAXELER3" failed (no timing score) Output log file created
Sat 06:17: Implementation: Strategy "MAXELER2" failed (no timing score) Output log file created
Sat 06:18: Implementation: Strategy "MAXELER1" failed (no timing score) Output log file created
Sat 06:59: Implementation: Strategy "VIVADO_DEFAULT" failed (no timing score) Output log file created
Sat 07:42: Implementation: Strategy "MAXELER4" failed (no timing score) Output log file created
Sat 07:42: Implementation: Strategy "PERFORMANCE_EXPLORE" failed (no timing score) Output log file created
Sat 08:25: Implementation: Strategy "PERFORMANCE_EARLY_BLOCK_PLACEMENT" failed (no timing score) Output log file created
Sat 09:06: Implementation: Strategy "PERFORMANCE_EXTRA_TIMING_OPT" failed (no timing score) Output log file created
Sat 09:49: Implementation: Strategy "PERFORMANCE_NET_DELAY_HIGH" failed (no timing score) Output log file created
Sat 09:51: Implementation: Strategy "PERFORMANCE_REFINE_PLACEMENT" failed (no timing score) Output log file created
Sat 09:51: (8/15) - Generate Resource Report (VivadoResourceUsage)
Sat 09:51: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Sat 09:56: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Sat 09:56: (11/15) - Generate Configuration (VivadoBitgen)
Sat 09:56: (12/15) - Update Checksum (VivadoUpdateChecksum)
Sat 09:56: (13/15) - Convert Programming File (VivadoCfgfileGen)
Sat 09:56: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Sat 09:56: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
