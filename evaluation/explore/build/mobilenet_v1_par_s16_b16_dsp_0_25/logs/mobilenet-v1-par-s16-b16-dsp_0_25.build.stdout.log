Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v1_par_s16_b16_dsp_0_25 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 MobilenetV1ParS16B16Dsp025Manager \
	DFEModel=MAIA maxFileName=MobilenetV1ParS16B16Dsp025 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16_dsp_0_25/data/data-mobilenet-v1-par-s16-b16-dsp_0_25.txt 
]0; maxJavaRun: MobilenetV1ParS16B16Dsp025Manager DFEModel=MAIA maxFileName=MobilenetV1ParS16B16Dsp025 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16_dsp_0_25/data/data-mobilenet-v1-par-s16-b16-dsp_0_25.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v1_par_s16_b16_dsp_0_25
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v1_par_s16_b16_dsp_0_25.MobilenetV1ParS16B16Dsp025Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV1ParS16B16Dsp025 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16_dsp_0_25/data/data-mobilenet-v1-par-s16-b16-dsp_0_25.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Wed 21:45: MaxCompiler version: 2021.1
Wed 21:45: Build "MobilenetV1ParS16B16Dsp025" start time: Wed Dec 29 21:45:19 GMT 2021
Wed 21:45: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Wed 21:45: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200
Wed 21:45: Detailed build log available in "_build.log"
Wed 21:45: 
Wed 21:45: ENGINE BUILD PARAMETERS
Wed 21:45: 	              Build name: MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200                                                                                                     
Wed 21:45: 	             maxFileName: MobilenetV1ParS16B16Dsp025                                                                                                                       
Wed 21:45: 	                  target: DFE                                                                                                                                              
Wed 21:45: 	                DFEModel: MAIA                                                                                                                                             
Wed 21:45: 	              enableMPCX: false                                                                                                                                            
Wed 21:45: 	                bitWidth: 32                                                                                                                                               
Wed 21:45: 	                     WBW: 32                                                                                                                                               
Wed 21:45: 	                   DTYPE: fixed                                                                                                                                            
Wed 21:45: 	           NUM_FRAC_BITS: 8                                                                                                                                                
Wed 21:45: 	                      PF: 1                                                                                                                                                
Wed 21:45: 	                      PC: 1                                                                                                                                                
Wed 21:45: 	                      PK: 1                                                                                                                                                
Wed 21:45: 	                       H: 1                                                                                                                                                
Wed 21:45: 	                       W: 1                                                                                                                                                
Wed 21:45: 	                       C: 1                                                                                                                                                
Wed 21:45: 	                       F: 1                                                                                                                                                
Wed 21:45: 	                       K: 1                                                                                                                                                
Wed 21:45: 	                     PAD: 0                                                                                                                                                
Wed 21:45: 	                       S: 1                                                                                                                                                
Wed 21:45: 	                     SEQ: 0                                                                                                                                                
Wed 21:45: 	                    FREQ: 200                                                                                                                                              
Wed 21:45: 	                USE_DRAM: false                                                                                                                                            
Wed 21:45: 	                 USE_BNN: false                                                                                                                                            
Wed 21:45: 	            USE_WINOGRAD: false                                                                                                                                            
Wed 21:45: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                                            
Wed 21:45: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                                
Wed 21:45: 	                   DEBUG: false                                                                                                                                            
Wed 21:45: 	           COEFF_ON_CHIP: false                                                                                                                                            
Wed 21:45: 	              INIT_COEFF: false                                                                                                                                            
Wed 21:45: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16_dsp_0_25/data/data-mobilenet-v1-par-s16-b16-dsp_0_25.txt
Wed 21:45: Generating kernel conv0 ...
Wed 21:45: Instantiating kernel "conv0"
Wed 21:45: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: coeffOnChip = true
Wed 21:45: Input height = 224, output height = 224, pad = 1
Wed 21:45: Counter H = 226 W = 226
Wed 21:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: Ifmap buffer configuration 262144 x 1
Wed 21:45: loop = false
Wed 21:45: Building line buffer for "conv0" ...
Wed 21:45: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Wed 21:45: Line buffer input vector size: 1, output vector size: 9.
Wed 21:45: Number of separated line buffers: 1
Wed 21:45: Initialising line buffer kernel with 3 x 226 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: ROM created for conv0 of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2aac8ad7
Wed 21:45: Building the CORE arithmetic unit for "conv0" ...
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: CORE ifmap vector size: 9
Wed 21:45: CORE coefficient vector size: 144
Wed 21:45: CORE ofmap vector size: 16
Wed 21:45: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 21:45: Connecting to output: ofmap
Wed 21:45: Compiling kernel "conv0"
Wed 21:45: 
Wed 21:45: Generating kernel conv1 ...
Wed 21:45: Instantiating kernel "conv1"
Wed 21:45: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: coeffOnChip = true
Wed 21:45: Input height = 112, output height = 112, pad = 1
Wed 21:45: Counter H = 114 W = 114
Wed 21:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: Building line buffer for "conv1" ...
Wed 21:45: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 21:45: Line buffer input vector size: 16, output vector size: 144.
Wed 21:45: Number of separated line buffers: 16
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Depthwise coeff ROM depth = 2
Wed 21:45: ROM created for conv1_dw of depth 2 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3df473e8
Wed 21:45: Building the CORE arithmetic unit for "conv1_dw" ...
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: CORE ifmap vector size: 144
Wed 21:45: CORE coefficient vector size: 144
Wed 21:45: CORE ofmap vector size: 16
Wed 21:45: Ifmap buffer configuration 16384 x 16
Wed 21:45: loop = false
Wed 21:45: Pointwise coeff ROM depth = 8
Wed 21:45: ROM created for conv1_pw of depth 8 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6193a9e2
Wed 21:45: Building the CORE arithmetic unit for "conv1_pw" ...
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: CORE ifmap vector size: 16
Wed 21:45: CORE coefficient vector size: 256
Wed 21:45: CORE ofmap vector size: 16
Wed 21:45: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Wed 21:45: Connecting to output: ofmap
Wed 21:45: Compiling kernel "conv1"
Wed 21:45: 
Wed 21:45: Generating kernel conv2 ...
Wed 21:45: Instantiating kernel "conv2"
Wed 21:45: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: coeffOnChip = true
Wed 21:45: Input height = 112, output height = 112, pad = 1
Wed 21:45: Counter H = 114 W = 114
Wed 21:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:45: Building line buffer for "conv2" ...
Wed 21:45: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Wed 21:45: Line buffer input vector size: 16, output vector size: 144.
Wed 21:45: Number of separated line buffers: 16
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Initialising line buffer kernel with 3 x 114 x 1
Wed 21:45: Size of line buffer output: 3
Wed 21:45: Number of line buffer output chunks: 3
Wed 21:45: Connecting outputs from chunk (#000) ...
Wed 21:45: Connecting outputs from chunk (#001) ...
Wed 21:45: Connecting outputs from chunk (#002) ...
Wed 21:45: Depthwise coeff ROM depth = 4
Wed 21:45: ROM created for conv2_dw of depth 4 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2290ca46
Wed 21:45: Building the CORE arithmetic unit for "conv2_dw" ...
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: CORE ifmap vector size: 144
Wed 21:45: CORE coefficient vector size: 144
Wed 21:45: CORE ofmap vector size: 16
Wed 21:45: Ifmap buffer configuration 65536 x 16
Wed 21:45: loop = false
Wed 21:45: Pointwise coeff ROM depth = 32
Wed 21:45: ROM created for conv2_pw of depth 32 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5ec84beb
Wed 21:45: Building the CORE arithmetic unit for "conv2_pw" ...
Wed 21:45: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:45: CORE ifmap vector size: 16
Wed 21:45: CORE coefficient vector size: 256
Wed 21:45: CORE ofmap vector size: 16
Wed 21:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:45: Connecting to output: ofmap
Wed 21:45: Compiling kernel "conv2"
Wed 21:46: 
Wed 21:46: Generating kernel conv3 ...
Wed 21:46: Instantiating kernel "conv3"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 56, output height = 56, pad = 1
Wed 21:46: Counter H = 58 W = 58
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv3" ...
Wed 21:46: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 8
Wed 21:46: ROM created for conv3_dw of depth 8 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4fd55294
Wed 21:46: Building the CORE arithmetic unit for "conv3_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 4096 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 64
Wed 21:46: ROM created for conv3_pw of depth 64 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@30e9e7ea
Wed 21:46: Building the CORE arithmetic unit for "conv3_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv3"
Wed 21:46: 
Wed 21:46: Generating kernel conv4 ...
Wed 21:46: Instantiating kernel "conv4"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 56, output height = 56, pad = 1
Wed 21:46: Counter H = 58 W = 58
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv4" ...
Wed 21:46: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 58 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 8
Wed 21:46: ROM created for conv4_dw of depth 8 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@186deb87
Wed 21:46: Building the CORE arithmetic unit for "conv4_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 32768 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 128
Wed 21:46: ROM created for conv4_pw of depth 128 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@eaadd61
Wed 21:46: Building the CORE arithmetic unit for "conv4_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv4"
Wed 21:46: 
Wed 21:46: Generating kernel conv5 ...
Wed 21:46: Instantiating kernel "conv5"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 28, output height = 28, pad = 1
Wed 21:46: Counter H = 30 W = 30
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv5" ...
Wed 21:46: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 16
Wed 21:46: ROM created for conv5_dw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3f2e2cc0
Wed 21:46: Building the CORE arithmetic unit for "conv5_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 1024 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 256
Wed 21:46: ROM created for conv5_pw of depth 256 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@9cd0886
Wed 21:46: Building the CORE arithmetic unit for "conv5_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv5"
Wed 21:46: 
Wed 21:46: Generating kernel conv6 ...
Wed 21:46: Instantiating kernel "conv6"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 28, output height = 28, pad = 1
Wed 21:46: Counter H = 30 W = 30
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv6" ...
Wed 21:46: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 30 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 16
Wed 21:46: ROM created for conv6_dw of depth 16 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4922afab
Wed 21:46: Building the CORE arithmetic unit for "conv6_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 16384 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 512
Wed 21:46: ROM created for conv6_pw of depth 512 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@44db28c0
Wed 21:46: Building the CORE arithmetic unit for "conv6_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv6"
Wed 21:46: 
Wed 21:46: Generating kernel conv7 ...
Wed 21:46: Instantiating kernel "conv7"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv7" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv7_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3cafbd63
Wed 21:46: Building the CORE arithmetic unit for "conv7_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 256 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 1024
Wed 21:46: ROM created for conv7_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1cb86178
Wed 21:46: Building the CORE arithmetic unit for "conv7_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv7"
Wed 21:46: 
Wed 21:46: Generating kernel conv8 ...
Wed 21:46: Instantiating kernel "conv8"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv8" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv8_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@734a926e
Wed 21:46: Building the CORE arithmetic unit for "conv8_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 8192 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 1024
Wed 21:46: ROM created for conv8_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4c122baa
Wed 21:46: Building the CORE arithmetic unit for "conv8_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv8"
Wed 21:46: 
Wed 21:46: Generating kernel conv9 ...
Wed 21:46: Instantiating kernel "conv9"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv9" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv9_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3c87dd24
Wed 21:46: Building the CORE arithmetic unit for "conv9_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 256 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 1024
Wed 21:46: ROM created for conv9_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7a45f379
Wed 21:46: Building the CORE arithmetic unit for "conv9_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv9"
Wed 21:46: 
Wed 21:46: Generating kernel conv10 ...
Wed 21:46: Instantiating kernel "conv10"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv10" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv10_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4ddf46af
Wed 21:46: Building the CORE arithmetic unit for "conv10_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 8192 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 1024
Wed 21:46: ROM created for conv10_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@ce22973
Wed 21:46: Building the CORE arithmetic unit for "conv10_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv10"
Wed 21:46: 
Wed 21:46: Generating kernel conv11 ...
Wed 21:46: Instantiating kernel "conv11"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv11" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv11_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@62ef39df
Wed 21:46: Building the CORE arithmetic unit for "conv11_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 256 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 1024
Wed 21:46: ROM created for conv11_pw of depth 1024 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@51b1fda6
Wed 21:46: Building the CORE arithmetic unit for "conv11_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv11"
Wed 21:46: 
Wed 21:46: Generating kernel conv12 ...
Wed 21:46: Instantiating kernel "conv12"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 14, output height = 14, pad = 1
Wed 21:46: Counter H = 16 W = 16
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv12" ...
Wed 21:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 16 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 32
Wed 21:46: ROM created for conv12_dw of depth 32 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4f5cc537
Wed 21:46: Building the CORE arithmetic unit for "conv12_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 8192 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 2048
Wed 21:46: ROM created for conv12_pw of depth 2048 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7005fdf7
Wed 21:46: Building the CORE arithmetic unit for "conv12_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv12"
Wed 21:46: 
Wed 21:46: Generating kernel conv13 ...
Wed 21:46: Instantiating kernel "conv13"
Wed 21:46: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: coeffOnChip = true
Wed 21:46: Input height = 7, output height = 7, pad = 1
Wed 21:46: Counter H = 9 W = 9
Wed 21:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 21:46: Building line buffer for "conv13" ...
Wed 21:46: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Wed 21:46: Line buffer input vector size: 16, output vector size: 144.
Wed 21:46: Number of separated line buffers: 16
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Initialising line buffer kernel with 3 x 9 x 1
Wed 21:46: Size of line buffer output: 3
Wed 21:46: Number of line buffer output chunks: 3
Wed 21:46: Connecting outputs from chunk (#000) ...
Wed 21:46: Connecting outputs from chunk (#001) ...
Wed 21:46: Connecting outputs from chunk (#002) ...
Wed 21:46: Depthwise coeff ROM depth = 64
Wed 21:46: ROM created for conv13_dw of depth 64 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@764f94d4
Wed 21:46: Building the CORE arithmetic unit for "conv13_dw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 144
Wed 21:46: CORE coefficient vector size: 144
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: Ifmap buffer configuration 128 x 16
Wed 21:46: loop = false
Wed 21:46: Pointwise coeff ROM depth = 4096
Wed 21:46: ROM created for conv13_pw of depth 4096 and type {DFEVectorType: 256 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5b0f6621
Wed 21:46: Building the CORE arithmetic unit for "conv13_pw" ...
Wed 21:46: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Wed 21:46: CORE ifmap vector size: 16
Wed 21:46: CORE coefficient vector size: 256
Wed 21:46: CORE ofmap vector size: 16
Wed 21:46: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Wed 21:46: Connecting to output: ofmap
Wed 21:46: Compiling kernel "conv13"
Wed 21:47: 
Wed 21:47: Generating padding kernels for DRAM access
Wed 21:47: Instantiating kernel "ifmap_unpad"
Wed 21:47: Compiling kernel "ifmap_unpad"
Wed 21:47: 
Wed 21:47: Instantiating kernel "ofmap_pad"
Wed 21:47: Compiling kernel "ofmap_pad"
Wed 21:47: 
Wed 21:47: Setting up stream connections for conv0
Wed 21:47: Setting up stream connections for conv1
Wed 21:47: Connecting ifmap <== conv0: ofmap
Wed 21:47: Setting up stream connections for conv2
Wed 21:47: Connecting ifmap <== conv1: ofmap
Wed 21:47: Setting up stream connections for conv3
Wed 21:47: Connecting ifmap <== conv2: ofmap
Wed 21:47: Setting up stream connections for conv4
Wed 21:47: Connecting ifmap <== conv3: ofmap
Wed 21:47: Setting up stream connections for conv5
Wed 21:47: Connecting ifmap <== conv4: ofmap
Wed 21:47: Setting up stream connections for conv6
Wed 21:47: Connecting ifmap <== conv5: ofmap
Wed 21:47: Setting up stream connections for conv7
Wed 21:47: Connecting ifmap <== conv6: ofmap
Wed 21:47: Setting up stream connections for conv8
Wed 21:47: Connecting ifmap <== conv7: ofmap
Wed 21:47: Setting up stream connections for conv9
Wed 21:47: Connecting ifmap <== conv8: ofmap
Wed 21:47: Setting up stream connections for conv10
Wed 21:47: Connecting ifmap <== conv9: ofmap
Wed 21:47: Setting up stream connections for conv11
Wed 21:47: Connecting ifmap <== conv10: ofmap
Wed 21:47: Setting up stream connections for conv12
Wed 21:47: Connecting ifmap <== conv11: ofmap
Wed 21:47: Setting up stream connections for conv13
Wed 21:47: Connecting ifmap <== conv12: ofmap
Wed 21:47: DRAM will be used to build the design
Wed 21:47: Setup streams for kernel "conv0"
Wed 21:47: # cycles:       306456
Wed 21:47: # ifmap stream: 150528
Wed 21:47: # ofmap stream: 401408
Wed 21:47: coeff vec size: 144
Wed 21:47: coeff stream bit width: 2304
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv1"
Wed 21:47: # cycles:       103968
Wed 21:47: # ifmap stream: 401408
Wed 21:47: # ofmap stream: 802816
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv2"
Wed 21:47: # cycles:       415872
Wed 21:47: # ifmap stream: 802816
Wed 21:47: # ofmap stream: 401408
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv3"
Wed 21:47: # cycles:       215296
Wed 21:47: # ifmap stream: 401408
Wed 21:47: # ofmap stream: 401408
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv4"
Wed 21:47: # cycles:       430592
Wed 21:47: # ifmap stream: 401408
Wed 21:47: # ofmap stream: 200704
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv5"
Wed 21:47: # cycles:       230400
Wed 21:47: # ifmap stream: 200704
Wed 21:47: # ofmap stream: 200704
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv6"
Wed 21:47: # cycles:       460800
Wed 21:47: # ifmap stream: 200704
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv7"
Wed 21:47: # cycles:       262144
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv8"
Wed 21:47: # cycles:       262144
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv9"
Wed 21:47: # cycles:       262144
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv10"
Wed 21:47: # cycles:       262144
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv11"
Wed 21:47: # cycles:       262144
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 100352
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv12"
Wed 21:47: # cycles:       524288
Wed 21:47: # ifmap stream: 100352
Wed 21:47: # ofmap stream: 50176
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:47: Setup streams for kernel "conv13"
Wed 21:47: # cycles:       331776
Wed 21:47: # ifmap stream: 50176
Wed 21:47: # ofmap stream: 50176
Wed 21:47: coeff vec size: 2304
Wed 21:47: coeff stream bit width: 36864
Wed 21:47: coeff stream chunk size: 9
Wed 21:49: Generating input files (VHDL, netlists, vendor specific IP cores)
Wed 21:50: Running back-end  build (15 phases)
Wed 21:50: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Wed 21:50: (2/15) - Synthesize DFE Modules (VivadoSynth)
Wed 21:50: Executing Synthesis Strategy VIVADO_DEFAULT
Thu 00:01: (3/15) - Generate Resource Report (VivadoResourceUsage)
Thu 00:01: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 00:02: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Thu 00:02: 
Thu 00:02: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Thu 00:02: For this compile, we estimate this process may take longer than 1 hour.
Thu 00:02: We recommend running in simulation to verify correctness before building hardware.
Thu 00:02: 
Thu 00:02: PRELIMINARY RESOURCE USAGE
Thu 00:02: FPGA: xcVU9P-FLGB2104-2-E
Thu 00:02: Logic utilization:     1141419 / 3546720 (32.18%)
Thu 00:02:   LUTs:                 148305 / 1182240 (12.54%)
Thu 00:02:   Primary FFs:          993114 / 2364480 (42.00%)
Thu 00:02: DSP blocks:               5377 / 6840    (78.61%)
Thu 00:02: Block memory (BRAM18):    2971 / 4320    (68.77%)
Thu 00:02: Block memory (URAM):       858 / 960     (89.38%)
Thu 00:02: 
Thu 00:02: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Thu 00:02: 
Thu 00:02: PRELIMINARY POWER REPORT
Thu 00:02: Total On-Chip Power (W) 17.14 (budget: 91.80) 
Thu 00:02: Dynamic Power (W)       14.23 
Thu 00:02: Device Static Power(W)   2.90 
Thu 00:02: 
Thu 00:02: (7/15) - Place DFE (VivadoImplementation)
Thu 00:02: Executing the following 10 Implementation Strategies in 4 threads:
Thu 00:02:  - VIVADO_DEFAULT
Thu 00:02:  - MAXELER1
Thu 00:02:  - MAXELER2
Thu 00:02:  - MAXELER3
Thu 00:02:  - MAXELER4
Thu 00:02:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Thu 00:02:  - PERFORMANCE_EXPLORE
Thu 00:02:  - PERFORMANCE_EXTRA_TIMING_OPT
Thu 00:02:  - PERFORMANCE_NET_DELAY_HIGH
Thu 00:02:  - PERFORMANCE_REFINE_PLACEMENT
Thu 05:18: Implementation: Strategy "MAXELER3" met timing with score 0 (best score 0)
Thu 05:18: Implementation: Strategy "VIVADO_DEFAULT" was cancelled (no timing score)
Thu 05:18: Implementation: Strategy "MAXELER2" was cancelled (no timing score)
Thu 05:18: (8/15) - Generate Resource Report (VivadoResourceUsage)
Thu 05:18: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 05:19: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Thu 05:19: 
Thu 05:19: FINAL POWER REPORT
Thu 05:19: Total On-Chip Power (W) 17.31 (budget: 91.80) 
Thu 05:19: Dynamic Power (W)       14.40 
Thu 05:19: Device Static Power(W)   2.91 
Thu 05:19: 
Thu 05:19: (11/15) - Generate Configuration (VivadoBitgen)
Thu 05:40: (12/15) - Update Checksum (VivadoUpdateChecksum)
Thu 05:45: (13/15) - Convert Programming File (VivadoCfgfileGen)
Thu 05:45: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Thu 05:46: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Thu 05:46: 
Thu 05:46: FINAL RESOURCE USAGE
Thu 05:46: FPGA: xcVU9P-FLGB2104-2-E
Thu 05:46: Logic utilization:      852897 / 3546720 (24.05%)
Thu 05:46:   LUTs:                 132712 / 1182240 (11.23%)
Thu 05:46:   Primary FFs:          720185 / 2364480 (30.46%)
Thu 05:46: DSP blocks:               5363 / 6840    (78.41%)
Thu 05:46: Block memory (BRAM18):    2971 / 4320    (68.77%)
Thu 05:46: Block memory (URAM):       858 / 960     (89.38%)
Thu 05:46: 
Thu 05:46: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max (MD5Sum: 0ec3866664222d332fa914c8c0de371b)
Thu 05:46: Build completed: Thu Dec 30 05:46:13 GMT 2021 (took 8 hours, 0 mins, 53 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV1ParS16B16Dsp025.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV1ParS16B16Dsp025.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max MobilenetV1ParS16B16Dsp025_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_9215661110329014398/cobject/max_4680838042790809712.c -o /tmp/sliccompile_9215661110329014398/cobject/max_4680838042790809712.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results/MobilenetV1ParS16B16Dsp025.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_2289623543512001278.o 
ld -r /tmp/sliccompile_9215661110329014398/cobject/max_4680838042790809712.c.o max_2289623543512001278.o -o MobilenetV1ParS16B16Dsp025_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v1_par_s16_b16_dsp_0_25'
g++ ../../src/mobilenet_v1_par_s16_b16_dsp_0_25/MobilenetV1ParS16B16Dsp025CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV1ParS16B16Dsp025_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=MobilenetV1ParS16B16Dsp025 -c -o MobilenetV1ParS16B16Dsp025_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o MobilenetV1ParS16B16Dsp025_FREQ_200_dfe MobilenetV1ParS16B16Dsp025_FREQ_200_dfe.o MobilenetV1ParS16B16Dsp025_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
