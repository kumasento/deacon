Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v2_onnx_manual_2 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 MobilenetV2OnnxManual2Manager \
	DFEModel=MAIA maxFileName=MobilenetV2OnnxManual2 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_manual_2/data/data-mobilenet_v2_onnx-manual_2.txt 
]0; maxJavaRun: MobilenetV2OnnxManual2Manager DFEModel=MAIA maxFileName=MobilenetV2OnnxManual2 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_manual_2/data/data-mobilenet_v2_onnx-manual_2.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v2_onnx_manual_2
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v2_onnx_manual_2.MobilenetV2OnnxManual2Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV2OnnxManual2 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_manual_2/data/data-mobilenet_v2_onnx-manual_2.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Thu 18:14: MaxCompiler version: 2021.1
Thu 18:14: Build "MobilenetV2OnnxManual2" start time: Thu Dec 30 18:14:58 GMT 2021
Thu 18:14: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Thu 18:14: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200
Thu 18:14: Detailed build log available in "_build.log"
Thu 18:14: 
Thu 18:14: ENGINE BUILD PARAMETERS
Thu 18:14: 	              Build name: MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200                                                                                           
Thu 18:14: 	             maxFileName: MobilenetV2OnnxManual2                                                                                                             
Thu 18:14: 	                  target: DFE                                                                                                                                
Thu 18:14: 	                DFEModel: MAIA                                                                                                                               
Thu 18:14: 	              enableMPCX: false                                                                                                                              
Thu 18:14: 	                bitWidth: 32                                                                                                                                 
Thu 18:14: 	                     WBW: 32                                                                                                                                 
Thu 18:14: 	                   DTYPE: fixed                                                                                                                              
Thu 18:14: 	           NUM_FRAC_BITS: 8                                                                                                                                  
Thu 18:14: 	                      PF: 1                                                                                                                                  
Thu 18:14: 	                      PC: 1                                                                                                                                  
Thu 18:14: 	                      PK: 1                                                                                                                                  
Thu 18:14: 	                       H: 1                                                                                                                                  
Thu 18:14: 	                       W: 1                                                                                                                                  
Thu 18:14: 	                       C: 1                                                                                                                                  
Thu 18:14: 	                       F: 1                                                                                                                                  
Thu 18:14: 	                       K: 1                                                                                                                                  
Thu 18:14: 	                     PAD: 0                                                                                                                                  
Thu 18:14: 	                       S: 1                                                                                                                                  
Thu 18:14: 	                     SEQ: 0                                                                                                                                  
Thu 18:14: 	                    FREQ: 200                                                                                                                                
Thu 18:14: 	                USE_DRAM: false                                                                                                                              
Thu 18:14: 	                 USE_BNN: false                                                                                                                              
Thu 18:14: 	            USE_WINOGRAD: false                                                                                                                              
Thu 18:14: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                              
Thu 18:14: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                  
Thu 18:14: 	                   DEBUG: false                                                                                                                              
Thu 18:14: 	           COEFF_ON_CHIP: false                                                                                                                              
Thu 18:14: 	              INIT_COEFF: false                                                                                                                              
Thu 18:14: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_manual_2/data/data-mobilenet_v2_onnx-manual_2.txt
Thu 18:15: Generating kernel conv0 ...
Thu 18:15: Instantiating kernel "conv0"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 224, output height = 224, pad = 1
Thu 18:15: Counter H = 226 W = 226
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 262144 x 1
Thu 18:15: loop = false
Thu 18:15: Building line buffer for "conv0" ...
Thu 18:15: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 1, output vector size: 9.
Thu 18:15: Number of separated line buffers: 1
Thu 18:15: Initialising line buffer kernel with 3 x 226 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: ROM created for conv0 of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4470f8a6
Thu 18:15: Building the CORE arithmetic unit for "conv0" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 9
Thu 18:15: CORE coefficient vector size: 144
Thu 18:15: CORE ofmap vector size: 16
Thu 18:15: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv0"
Thu 18:15: 
Thu 18:15: Generating kernel conv2 ...
Thu 18:15: Instantiating kernel "conv2"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 112, output height = 112, pad = 1
Thu 18:15: Counter H = 114 W = 114
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv2" ...
Thu 18:15: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 16, output vector size: 144.
Thu 18:15: Number of separated line buffers: 16
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 2
Thu 18:15: ROM created for conv2_dw of depth 2 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6f231ced
Thu 18:15: Building the CORE arithmetic unit for "conv2_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 144
Thu 18:15: CORE coefficient vector size: 144
Thu 18:15: CORE ofmap vector size: 16
Thu 18:15: Ifmap buffer configuration 16384 x 16
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 8
Thu 18:15: ROM created for conv2_pw of depth 8 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@45f756e6
Thu 18:15: Building the CORE arithmetic unit for "conv2_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 16
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: [ConvLayerOfmapBuffer] depth = 65536 addr_bits =    16
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv2"
Thu 18:15: 
Thu 18:15: Generating kernel conv5 ...
Thu 18:15: Instantiating kernel "conv5"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 112, output height = 112, pad = 0
Thu 18:15: Counter H = 112 W = 112
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 65536 x 4
Thu 18:15: loop = false
Thu 18:15: ROM created for conv5 of depth 24 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@51f4439e
Thu 18:15: Building the CORE arithmetic unit for "conv5" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 4
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 16
Thu 18:15: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv5"
Thu 18:15: 
Thu 18:15: Generating kernel conv7 ...
Thu 18:15: Instantiating kernel "conv7"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 112, output height = 112, pad = 1
Thu 18:15: Counter H = 114 W = 114
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv7" ...
Thu 18:15: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 16, output vector size: 144.
Thu 18:15: Number of separated line buffers: 16
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 114 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 6
Thu 18:15: ROM created for conv7_dw of depth 6 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@15c96f24
Thu 18:15: Building the CORE arithmetic unit for "conv7_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 144
Thu 18:15: CORE coefficient vector size: 144
Thu 18:15: CORE ofmap vector size: 16
Thu 18:15: Ifmap buffer configuration 16384 x 16
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 18
Thu 18:15: ROM created for conv7_pw of depth 18 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1174e173
Thu 18:15: Building the CORE arithmetic unit for "conv7_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 16
Thu 18:15: CORE coefficient vector size: 128
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv7"
Thu 18:15: 
Thu 18:15: Generating kernel conv10 ...
Thu 18:15: Instantiating kernel "conv10"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 56, output height = 56, pad = 0
Thu 18:15: Counter H = 56 W = 56
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 16384 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv10 of depth 108 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@e18848d
Thu 18:15: Building the CORE arithmetic unit for "conv10" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv10"
Thu 18:15: 
Thu 18:15: Generating kernel conv12 ...
Thu 18:15: Instantiating kernel "conv12"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 56, output height = 56, pad = 1
Thu 18:15: Counter H = 58 W = 58
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv12" ...
Thu 18:15: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 4, output vector size: 36.
Thu 18:15: Number of separated line buffers: 4
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 36
Thu 18:15: ROM created for conv12_dw of depth 36 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1926a40f
Thu 18:15: Building the CORE arithmetic unit for "conv12_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 36
Thu 18:15: CORE coefficient vector size: 36
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: Ifmap buffer configuration 4096 x 4
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 108
Thu 18:15: ROM created for conv12_pw of depth 108 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@49f8b57d
Thu 18:15: Building the CORE arithmetic unit for "conv12_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 4
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 4096
Thu 18:15: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv12"
Thu 18:15: 
Thu 18:15: Generating kernel conv16 ...
Thu 18:15: Instantiating kernel "conv16"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 56, output height = 56, pad = 0
Thu 18:15: Counter H = 56 W = 56
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 16384 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv16 of depth 54 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@100a15a3
Thu 18:15: Building the CORE arithmetic unit for "conv16" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv16"
Thu 18:15: 
Thu 18:15: Generating kernel conv18 ...
Thu 18:15: Instantiating kernel "conv18"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 56, output height = 56, pad = 1
Thu 18:15: Counter H = 58 W = 58
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv18" ...
Thu 18:15: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 8, output vector size: 72.
Thu 18:15: Number of separated line buffers: 8
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 58 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 18
Thu 18:15: ROM created for conv18_dw of depth 18 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5e2f409f
Thu 18:15: Building the CORE arithmetic unit for "conv18_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 72
Thu 18:15: CORE coefficient vector size: 72
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 72
Thu 18:15: ROM created for conv18_pw of depth 72 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3de6799f
Thu 18:15: Building the CORE arithmetic unit for "conv18_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv18"
Thu 18:15: 
Thu 18:15: Generating kernel conv21 ...
Thu 18:15: Instantiating kernel "conv21"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 0
Thu 18:15: Counter H = 28 W = 28
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv21 of depth 384 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@19ed6130
Thu 18:15: Building the CORE arithmetic unit for "conv21" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv21"
Thu 18:15: 
Thu 18:15: Generating kernel conv23 ...
Thu 18:15: Instantiating kernel "conv23"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 1
Thu 18:15: Counter H = 30 W = 30
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv23" ...
Thu 18:15: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 2, output vector size: 18.
Thu 18:15: Number of separated line buffers: 2
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 96
Thu 18:15: ROM created for conv23_dw of depth 96 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@b484c37
Thu 18:15: Building the CORE arithmetic unit for "conv23_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 18
Thu 18:15: CORE coefficient vector size: 18
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: Ifmap buffer configuration 1024 x 2
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 384
Thu 18:15: ROM created for conv23_pw of depth 384 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@519f665e
Thu 18:15: Building the CORE arithmetic unit for "conv23_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 2
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 1024
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv23"
Thu 18:15: 
Thu 18:15: Generating kernel conv27 ...
Thu 18:15: Instantiating kernel "conv27"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 0
Thu 18:15: Counter H = 28 W = 28
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv27 of depth 384 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@8afb1bd
Thu 18:15: Building the CORE arithmetic unit for "conv27" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv27"
Thu 18:15: 
Thu 18:15: Generating kernel conv29 ...
Thu 18:15: Instantiating kernel "conv29"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 1
Thu 18:15: Counter H = 30 W = 30
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv29" ...
Thu 18:15: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 2, output vector size: 18.
Thu 18:15: Number of separated line buffers: 2
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 96
Thu 18:15: ROM created for conv29_dw of depth 96 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3b39b73f
Thu 18:15: Building the CORE arithmetic unit for "conv29_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 18
Thu 18:15: CORE coefficient vector size: 18
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: Ifmap buffer configuration 1024 x 2
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 384
Thu 18:15: ROM created for conv29_pw of depth 384 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@15c14cbd
Thu 18:15: Building the CORE arithmetic unit for "conv29_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 2
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 1024
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv29"
Thu 18:15: 
Thu 18:15: Generating kernel conv33 ...
Thu 18:15: Instantiating kernel "conv33"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 0
Thu 18:15: Counter H = 28 W = 28
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv33 of depth 192 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@318821c7
Thu 18:15: Building the CORE arithmetic unit for "conv33" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv33"
Thu 18:15: 
Thu 18:15: Generating kernel conv35 ...
Thu 18:15: Instantiating kernel "conv35"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 28, output height = 28, pad = 1
Thu 18:15: Counter H = 30 W = 30
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv35" ...
Thu 18:15: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 4, output vector size: 36.
Thu 18:15: Number of separated line buffers: 4
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 30 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 48
Thu 18:15: ROM created for conv35_dw of depth 48 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4a02814e
Thu 18:15: Building the CORE arithmetic unit for "conv35_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 36
Thu 18:15: CORE coefficient vector size: 36
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: Ifmap buffer configuration 1024 x 4
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 384
Thu 18:15: ROM created for conv35_pw of depth 384 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@12d1165b
Thu 18:15: Building the CORE arithmetic unit for "conv35_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 4
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv35"
Thu 18:15: 
Thu 18:15: Generating kernel conv38 ...
Thu 18:15: Instantiating kernel "conv38"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 2048 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv38 of depth 768 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@258377a7
Thu 18:15: Building the CORE arithmetic unit for "conv38" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv38"
Thu 18:15: 
Thu 18:15: Generating kernel conv40 ...
Thu 18:15: Instantiating kernel "conv40"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv40" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 4, output vector size: 36.
Thu 18:15: Number of separated line buffers: 4
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 96
Thu 18:15: ROM created for conv40_dw of depth 96 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5ccdf14f
Thu 18:15: Building the CORE arithmetic unit for "conv40_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 36
Thu 18:15: CORE coefficient vector size: 36
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: Ifmap buffer configuration 256 x 4
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 768
Thu 18:15: ROM created for conv40_pw of depth 768 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2d4ffd58
Thu 18:15: Building the CORE arithmetic unit for "conv40_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 4
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 256
Thu 18:15: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv40"
Thu 18:15: 
Thu 18:15: Generating kernel conv44 ...
Thu 18:15: Instantiating kernel "conv44"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 2048 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv44 of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7a8495a
Thu 18:15: Building the CORE arithmetic unit for "conv44" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv44"
Thu 18:15: 
Thu 18:15: Generating kernel conv46 ...
Thu 18:15: Instantiating kernel "conv46"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv46" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 2, output vector size: 18.
Thu 18:15: Number of separated line buffers: 2
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 192
Thu 18:15: ROM created for conv46_dw of depth 192 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6dac1e9c
Thu 18:15: Building the CORE arithmetic unit for "conv46_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 18
Thu 18:15: CORE coefficient vector size: 18
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: Ifmap buffer configuration 256 x 2
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 1536
Thu 18:15: ROM created for conv46_pw of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7dd5fc36
Thu 18:15: Building the CORE arithmetic unit for "conv46_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 2
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 256
Thu 18:15: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv46"
Thu 18:15: 
Thu 18:15: Generating kernel conv50 ...
Thu 18:15: Instantiating kernel "conv50"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 2048 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv50 of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@71fc0316
Thu 18:15: Building the CORE arithmetic unit for "conv50" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv50"
Thu 18:15: 
Thu 18:15: Generating kernel conv52 ...
Thu 18:15: Instantiating kernel "conv52"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv52" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 2, output vector size: 18.
Thu 18:15: Number of separated line buffers: 2
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 192
Thu 18:15: ROM created for conv52_dw of depth 192 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@f6aa60a
Thu 18:15: Building the CORE arithmetic unit for "conv52_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 18
Thu 18:15: CORE coefficient vector size: 18
Thu 18:15: CORE ofmap vector size: 2
Thu 18:15: Ifmap buffer configuration 256 x 2
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 1536
Thu 18:15: ROM created for conv52_pw of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3d294cdb
Thu 18:15: Building the CORE arithmetic unit for "conv52_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 2
Thu 18:15: CORE coefficient vector size: 16
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 256
Thu 18:15: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv52"
Thu 18:15: 
Thu 18:15: Generating kernel conv56 ...
Thu 18:15: Instantiating kernel "conv56"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 2048 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv56 of depth 768 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4e729324
Thu 18:15: Building the CORE arithmetic unit for "conv56" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv56"
Thu 18:15: 
Thu 18:15: Generating kernel conv58 ...
Thu 18:15: Instantiating kernel "conv58"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv58" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 4, output vector size: 36.
Thu 18:15: Number of separated line buffers: 4
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 96
Thu 18:15: ROM created for conv58_dw of depth 96 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5175626c
Thu 18:15: Building the CORE arithmetic unit for "conv58_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 36
Thu 18:15: CORE coefficient vector size: 36
Thu 18:15: CORE ofmap vector size: 4
Thu 18:15: Ifmap buffer configuration 256 x 4
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 1152
Thu 18:15: ROM created for conv58_pw of depth 1152 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@59683eaf
Thu 18:15: Building the CORE arithmetic unit for "conv58_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 4
Thu 18:15: CORE coefficient vector size: 32
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv58"
Thu 18:15: 
Thu 18:15: Generating kernel conv61 ...
Thu 18:15: Instantiating kernel "conv61"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv61 of depth 864 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2ed37e1e
Thu 18:15: Building the CORE arithmetic unit for "conv61" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv61"
Thu 18:15: 
Thu 18:15: Generating kernel conv63 ...
Thu 18:15: Instantiating kernel "conv63"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv63" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 8, output vector size: 72.
Thu 18:15: Number of separated line buffers: 8
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 72
Thu 18:15: ROM created for conv63_dw of depth 72 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@17338ff8
Thu 18:15: Building the CORE arithmetic unit for "conv63_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 72
Thu 18:15: CORE coefficient vector size: 72
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Ifmap buffer configuration 256 x 8
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 864
Thu 18:15: ROM created for conv63_pw of depth 864 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5d6f0e8b
Thu 18:15: Building the CORE arithmetic unit for "conv63_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 256
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv63"
Thu 18:15: 
Thu 18:15: Generating kernel conv67 ...
Thu 18:15: Instantiating kernel "conv67"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 0
Thu 18:15: Counter H = 14 W = 14
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Ifmap buffer configuration 4096 x 8
Thu 18:15: loop = false
Thu 18:15: ROM created for conv67 of depth 864 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2973515a
Thu 18:15: Building the CORE arithmetic unit for "conv67" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Connecting to output: ofmap_1
Thu 18:15: Compiling kernel "conv67"
Thu 18:15: 
Thu 18:15: Generating kernel conv69 ...
Thu 18:15: Instantiating kernel "conv69"
Thu 18:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: coeffOnChip = true
Thu 18:15: Input height = 14, output height = 14, pad = 1
Thu 18:15: Counter H = 16 W = 16
Thu 18:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:15: Building line buffer for "conv69" ...
Thu 18:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:15: Line buffer input vector size: 8, output vector size: 72.
Thu 18:15: Number of separated line buffers: 8
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:15: Size of line buffer output: 3
Thu 18:15: Number of line buffer output chunks: 3
Thu 18:15: Connecting outputs from chunk (#000) ...
Thu 18:15: Connecting outputs from chunk (#001) ...
Thu 18:15: Connecting outputs from chunk (#002) ...
Thu 18:15: Depthwise coeff ROM depth = 72
Thu 18:15: ROM created for conv69_dw of depth 72 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2f88fc72
Thu 18:15: Building the CORE arithmetic unit for "conv69_dw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 72
Thu 18:15: CORE coefficient vector size: 72
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Ifmap buffer configuration 256 x 8
Thu 18:15: loop = false
Thu 18:15: Pointwise coeff ROM depth = 864
Thu 18:15: ROM created for conv69_pw of depth 864 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@64f0e140
Thu 18:15: Building the CORE arithmetic unit for "conv69_pw" ...
Thu 18:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:15: CORE ifmap vector size: 8
Thu 18:15: CORE coefficient vector size: 64
Thu 18:15: CORE ofmap vector size: 8
Thu 18:15: Residual buffer depth = 256
Thu 18:15: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 18:15: Connecting to output: ofmap
Thu 18:15: Compiling kernel "conv69"
Thu 18:16: 
Thu 18:16: Generating kernel conv73 ...
Thu 18:16: Instantiating kernel "conv73"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 14, output height = 14, pad = 0
Thu 18:16: Counter H = 14 W = 14
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Ifmap buffer configuration 4096 x 8
Thu 18:16: loop = false
Thu 18:16: ROM created for conv73 of depth 432 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2fbb9c3f
Thu 18:16: Building the CORE arithmetic unit for "conv73" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 8
Thu 18:16: CORE coefficient vector size: 128
Thu 18:16: CORE ofmap vector size: 16
Thu 18:16: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv73"
Thu 18:16: 
Thu 18:16: Generating kernel conv75 ...
Thu 18:16: Instantiating kernel "conv75"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 14, output height = 14, pad = 1
Thu 18:16: Counter H = 16 W = 16
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Building line buffer for "conv75" ...
Thu 18:16: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 18:16: Line buffer input vector size: 16, output vector size: 144.
Thu 18:16: Number of separated line buffers: 16
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 16 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Depthwise coeff ROM depth = 36
Thu 18:16: ROM created for conv75_dw of depth 36 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4aa1d49b
Thu 18:16: Building the CORE arithmetic unit for "conv75_dw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 144
Thu 18:16: CORE coefficient vector size: 144
Thu 18:16: CORE ofmap vector size: 16
Thu 18:16: Ifmap buffer configuration 256 x 16
Thu 18:16: loop = false
Thu 18:16: Pointwise coeff ROM depth = 720
Thu 18:16: ROM created for conv75_pw of depth 720 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d41a264
Thu 18:16: Building the CORE arithmetic unit for "conv75_pw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 16
Thu 18:16: CORE coefficient vector size: 128
Thu 18:16: CORE ofmap vector size: 8
Thu 18:16: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv75"
Thu 18:16: 
Thu 18:16: Generating kernel conv78 ...
Thu 18:16: Instantiating kernel "conv78"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 0
Thu 18:16: Counter H = 7 W = 7
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Ifmap buffer configuration 1024 x 8
Thu 18:16: loop = false
Thu 18:16: ROM created for conv78 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@323baeb8
Thu 18:16: Building the CORE arithmetic unit for "conv78" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 8
Thu 18:16: CORE coefficient vector size: 32
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Connecting to output: ofmap_1
Thu 18:16: Compiling kernel "conv78"
Thu 18:16: 
Thu 18:16: Generating kernel conv80 ...
Thu 18:16: Instantiating kernel "conv80"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 1
Thu 18:16: Counter H = 9 W = 9
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Building line buffer for "conv80" ...
Thu 18:16: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 18:16: Line buffer input vector size: 4, output vector size: 36.
Thu 18:16: Number of separated line buffers: 4
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Depthwise coeff ROM depth = 240
Thu 18:16: ROM created for conv80_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4b444421
Thu 18:16: Building the CORE arithmetic unit for "conv80_dw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 36
Thu 18:16: CORE coefficient vector size: 36
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: Ifmap buffer configuration 128 x 4
Thu 18:16: loop = false
Thu 18:16: Pointwise coeff ROM depth = 4800
Thu 18:16: ROM created for conv80_pw of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3b4bc36
Thu 18:16: Building the CORE arithmetic unit for "conv80_pw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 4
Thu 18:16: CORE coefficient vector size: 32
Thu 18:16: CORE ofmap vector size: 8
Thu 18:16: Residual buffer depth = 64
Thu 18:16: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv80"
Thu 18:16: 
Thu 18:16: Generating kernel conv84 ...
Thu 18:16: Instantiating kernel "conv84"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 0
Thu 18:16: Counter H = 7 W = 7
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Ifmap buffer configuration 1024 x 8
Thu 18:16: loop = false
Thu 18:16: ROM created for conv84 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@19a5f1fa
Thu 18:16: Building the CORE arithmetic unit for "conv84" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 8
Thu 18:16: CORE coefficient vector size: 32
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Connecting to output: ofmap_1
Thu 18:16: Compiling kernel "conv84"
Thu 18:16: 
Thu 18:16: Generating kernel conv86 ...
Thu 18:16: Instantiating kernel "conv86"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 1
Thu 18:16: Counter H = 9 W = 9
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Building line buffer for "conv86" ...
Thu 18:16: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 18:16: Line buffer input vector size: 4, output vector size: 36.
Thu 18:16: Number of separated line buffers: 4
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Depthwise coeff ROM depth = 240
Thu 18:16: ROM created for conv86_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@14f45b8c
Thu 18:16: Building the CORE arithmetic unit for "conv86_dw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 36
Thu 18:16: CORE coefficient vector size: 36
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: Ifmap buffer configuration 128 x 4
Thu 18:16: loop = false
Thu 18:16: Pointwise coeff ROM depth = 4800
Thu 18:16: ROM created for conv86_pw of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@aa27f8
Thu 18:16: Building the CORE arithmetic unit for "conv86_pw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 4
Thu 18:16: CORE coefficient vector size: 32
Thu 18:16: CORE ofmap vector size: 8
Thu 18:16: Residual buffer depth = 64
Thu 18:16: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv86"
Thu 18:16: 
Thu 18:16: Generating kernel conv90 ...
Thu 18:16: Instantiating kernel "conv90"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 0
Thu 18:16: Counter H = 7 W = 7
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Ifmap buffer configuration 1024 x 8
Thu 18:16: loop = false
Thu 18:16: ROM created for conv90 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1eb4191a
Thu 18:16: Building the CORE arithmetic unit for "conv90" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 8
Thu 18:16: CORE coefficient vector size: 32
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv90"
Thu 18:16: 
Thu 18:16: Generating kernel conv92 ...
Thu 18:16: Instantiating kernel "conv92"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 1
Thu 18:16: Counter H = 9 W = 9
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Building line buffer for "conv92" ...
Thu 18:16: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 18:16: Line buffer input vector size: 4, output vector size: 36.
Thu 18:16: Number of separated line buffers: 4
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Initialising line buffer kernel with 3 x 9 x 1
Thu 18:16: Size of line buffer output: 3
Thu 18:16: Number of line buffer output chunks: 3
Thu 18:16: Connecting outputs from chunk (#000) ...
Thu 18:16: Connecting outputs from chunk (#001) ...
Thu 18:16: Connecting outputs from chunk (#002) ...
Thu 18:16: Depthwise coeff ROM depth = 240
Thu 18:16: ROM created for conv92_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2e5833c2
Thu 18:16: Building the CORE arithmetic unit for "conv92_dw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 36
Thu 18:16: CORE coefficient vector size: 36
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: Ifmap buffer configuration 128 x 4
Thu 18:16: loop = false
Thu 18:16: Pointwise coeff ROM depth = 4800
Thu 18:16: ROM created for conv92_pw of depth 4800 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@10336f57
Thu 18:16: Building the CORE arithmetic unit for "conv92_pw" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 4
Thu 18:16: CORE coefficient vector size: 64
Thu 18:16: CORE ofmap vector size: 16
Thu 18:16: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv92"
Thu 18:16: 
Thu 18:16: Generating kernel conv95 ...
Thu 18:16: Instantiating kernel "conv95"
Thu 18:16: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: coeffOnChip = true
Thu 18:16: Input height = 7, output height = 7, pad = 0
Thu 18:16: Counter H = 7 W = 7
Thu 18:16: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 18:16: Ifmap buffer configuration 1024 x 16
Thu 18:16: loop = false
Thu 18:16: ROM created for conv95 of depth 6400 and type {DFEVectorType: 64 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@84e376a
Thu 18:16: Building the CORE arithmetic unit for "conv95" ...
Thu 18:16: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 18:16: CORE ifmap vector size: 16
Thu 18:16: CORE coefficient vector size: 64
Thu 18:16: CORE ofmap vector size: 4
Thu 18:16: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 18:16: Connecting to output: ofmap
Thu 18:16: Compiling kernel "conv95"
Thu 18:16: 
Thu 18:16: Generating padding kernels for DRAM access
Thu 18:16: Instantiating kernel "ifmap_unpad"
Thu 18:16: Compiling kernel "ifmap_unpad"
Thu 18:16: 
Thu 18:16: Instantiating kernel "ofmap_pad"
Thu 18:16: Compiling kernel "ofmap_pad"
Thu 18:16: 
Thu 18:16: Setting up stream connections for conv0
Thu 18:16: Setting up stream connections for conv2
Thu 18:16: Connecting ifmap <== conv0: ofmap
Thu 18:16: Setting up stream connections for conv5
Thu 18:16: Connecting ifmap <== conv2: ofmap
Thu 18:16: Setting up stream connections for conv7
Thu 18:16: Connecting ifmap <== conv5: ofmap
Thu 18:16: Setting up stream connections for conv10
Thu 18:16: Connecting ifmap <== conv7: ofmap
Thu 18:16: Setting up stream connections for conv12
Thu 18:16: Connecting ifmap <== conv10: ofmap
Thu 18:16: Setting up stream connections for conv16
Thu 18:16: Connecting ifmap <== conv12: ofmap
Thu 18:16: Setting up stream connections for conv18
Thu 18:16: Connecting ifmap <== conv16: ofmap
Thu 18:16: Setting up stream connections for conv21
Thu 18:16: Connecting ifmap <== conv18: ofmap
Thu 18:16: Setting up stream connections for conv23
Thu 18:16: Connecting ifmap <== conv21: ofmap
Thu 18:16: Setting up stream connections for conv27
Thu 18:16: Connecting ifmap <== conv23: ofmap
Thu 18:16: Setting up stream connections for conv29
Thu 18:16: Connecting ifmap <== conv27: ofmap
Thu 18:16: Setting up stream connections for conv33
Thu 18:16: Connecting ifmap <== conv29: ofmap
Thu 18:16: Setting up stream connections for conv35
Thu 18:16: Connecting ifmap <== conv33: ofmap
Thu 18:16: Setting up stream connections for conv38
Thu 18:16: Connecting ifmap <== conv35: ofmap
Thu 18:16: Setting up stream connections for conv40
Thu 18:16: Connecting ifmap <== conv38: ofmap
Thu 18:16: Setting up stream connections for conv44
Thu 18:16: Connecting ifmap <== conv40: ofmap
Thu 18:16: Setting up stream connections for conv46
Thu 18:16: Connecting ifmap <== conv44: ofmap
Thu 18:16: Setting up stream connections for conv50
Thu 18:16: Connecting ifmap <== conv46: ofmap
Thu 18:16: Setting up stream connections for conv52
Thu 18:16: Connecting ifmap <== conv50: ofmap
Thu 18:16: Setting up stream connections for conv56
Thu 18:16: Connecting ifmap <== conv52: ofmap
Thu 18:16: Setting up stream connections for conv58
Thu 18:16: Connecting ifmap <== conv56: ofmap
Thu 18:16: Setting up stream connections for conv61
Thu 18:16: Connecting ifmap <== conv58: ofmap
Thu 18:16: Setting up stream connections for conv63
Thu 18:16: Connecting ifmap <== conv61: ofmap
Thu 18:16: Setting up stream connections for conv67
Thu 18:16: Connecting ifmap <== conv63: ofmap
Thu 18:16: Setting up stream connections for conv69
Thu 18:16: Connecting ifmap <== conv67: ofmap
Thu 18:16: Setting up stream connections for conv73
Thu 18:16: Connecting ifmap <== conv69: ofmap
Thu 18:16: Setting up stream connections for conv75
Thu 18:16: Connecting ifmap <== conv73: ofmap
Thu 18:16: Setting up stream connections for conv78
Thu 18:16: Connecting ifmap <== conv75: ofmap
Thu 18:16: Setting up stream connections for conv80
Thu 18:16: Connecting ifmap <== conv78: ofmap
Thu 18:16: Setting up stream connections for conv84
Thu 18:16: Connecting ifmap <== conv80: ofmap
Thu 18:16: Setting up stream connections for conv86
Thu 18:16: Connecting ifmap <== conv84: ofmap
Thu 18:16: Setting up stream connections for conv90
Thu 18:16: Connecting ifmap <== conv86: ofmap
Thu 18:16: Setting up stream connections for conv92
Thu 18:16: Connecting ifmap <== conv90: ofmap
Thu 18:16: Setting up stream connections for conv95
Thu 18:16: Connecting ifmap <== conv92: ofmap
Thu 18:16: DRAM will be used to build the design
Thu 18:16: Setup streams for kernel "conv0"
Thu 18:16: # cycles:       306456
Thu 18:16: # ifmap stream: 150528
Thu 18:16: # ofmap stream: 401408
Thu 18:16: coeff vec size: 144
Thu 18:16: coeff stream bit width: 2304
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv2"
Thu 18:16: # cycles:       103968
Thu 18:16: # ifmap stream: 401408
Thu 18:16: # ofmap stream: 200704
Thu 18:16: coeff vec size: 576
Thu 18:16: coeff stream bit width: 9216
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv5"
Thu 18:16: # cycles:       301056
Thu 18:16: # ifmap stream: 200704
Thu 18:16: # ofmap stream: 1204224
Thu 18:16: coeff vec size: 64
Thu 18:16: coeff stream bit width: 1024
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv7"
Thu 18:16: # cycles:       233928
Thu 18:16: # ifmap stream: 1204224
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 1152
Thu 18:16: coeff stream bit width: 18432
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv10"
Thu 18:16: # cycles:       338688
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 451584
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv12"
Thu 18:16: # cycles:       363312
Thu 18:16: # ifmap stream: 451584
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv16"
Thu 18:16: # cycles:       169344
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 451584
Thu 18:16: coeff vec size: 64
Thu 18:16: coeff stream bit width: 1024
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv18"
Thu 18:16: # cycles:       242208
Thu 18:16: # ifmap stream: 451584
Thu 18:16: # ofmap stream: 25088
Thu 18:16: coeff vec size: 576
Thu 18:16: coeff stream bit width: 9216
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv21"
Thu 18:16: # cycles:       301056
Thu 18:16: # ifmap stream: 25088
Thu 18:16: # ofmap stream: 150528
Thu 18:16: coeff vec size: 16
Thu 18:16: coeff stream bit width: 256
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv23"
Thu 18:16: # cycles:       345600
Thu 18:16: # ifmap stream: 150528
Thu 18:16: # ofmap stream: 25088
Thu 18:16: coeff vec size: 144
Thu 18:16: coeff stream bit width: 2304
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv27"
Thu 18:16: # cycles:       301056
Thu 18:16: # ifmap stream: 25088
Thu 18:16: # ofmap stream: 150528
Thu 18:16: coeff vec size: 16
Thu 18:16: coeff stream bit width: 256
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv29"
Thu 18:16: # cycles:       345600
Thu 18:16: # ifmap stream: 150528
Thu 18:16: # ofmap stream: 25088
Thu 18:16: coeff vec size: 144
Thu 18:16: coeff stream bit width: 2304
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv33"
Thu 18:16: # cycles:       150528
Thu 18:16: # ifmap stream: 25088
Thu 18:16: # ofmap stream: 150528
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv35"
Thu 18:16: # cycles:       345600
Thu 18:16: # ifmap stream: 150528
Thu 18:16: # ofmap stream: 12544
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv38"
Thu 18:16: # cycles:       150528
Thu 18:16: # ifmap stream: 12544
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv40"
Thu 18:16: # cycles:       196608
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 12544
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv44"
Thu 18:16: # cycles:       301056
Thu 18:16: # ifmap stream: 12544
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 16
Thu 18:16: coeff stream bit width: 256
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv46"
Thu 18:16: # cycles:       393216
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 12544
Thu 18:16: coeff vec size: 144
Thu 18:16: coeff stream bit width: 2304
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv50"
Thu 18:16: # cycles:       301056
Thu 18:16: # ifmap stream: 12544
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 16
Thu 18:16: coeff stream bit width: 256
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv52"
Thu 18:16: # cycles:       393216
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 12544
Thu 18:16: coeff vec size: 144
Thu 18:16: coeff stream bit width: 2304
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv56"
Thu 18:16: # cycles:       150528
Thu 18:16: # ifmap stream: 12544
Thu 18:16: # ofmap stream: 75264
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv58"
Thu 18:16: # cycles:       294912
Thu 18:16: # ifmap stream: 75264
Thu 18:16: # ofmap stream: 18816
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv61"
Thu 18:16: # cycles:       169344
Thu 18:16: # ifmap stream: 18816
Thu 18:16: # ofmap stream: 112896
Thu 18:16: coeff vec size: 64
Thu 18:16: coeff stream bit width: 1024
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv63"
Thu 18:16: # cycles:       221184
Thu 18:16: # ifmap stream: 112896
Thu 18:16: # ofmap stream: 18816
Thu 18:16: coeff vec size: 576
Thu 18:16: coeff stream bit width: 9216
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv67"
Thu 18:16: # cycles:       169344
Thu 18:16: # ifmap stream: 18816
Thu 18:16: # ofmap stream: 112896
Thu 18:16: coeff vec size: 64
Thu 18:16: coeff stream bit width: 1024
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv69"
Thu 18:16: # cycles:       221184
Thu 18:16: # ifmap stream: 112896
Thu 18:16: # ofmap stream: 18816
Thu 18:16: coeff vec size: 576
Thu 18:16: coeff stream bit width: 9216
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv73"
Thu 18:16: # cycles:       84672
Thu 18:16: # ifmap stream: 18816
Thu 18:16: # ofmap stream: 112896
Thu 18:16: coeff vec size: 128
Thu 18:16: coeff stream bit width: 2048
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv75"
Thu 18:16: # cycles:       184320
Thu 18:16: # ifmap stream: 112896
Thu 18:16: # ofmap stream: 7840
Thu 18:16: coeff vec size: 1152
Thu 18:16: coeff stream bit width: 18432
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv78"
Thu 18:16: # cycles:       235200
Thu 18:16: # ifmap stream: 7840
Thu 18:16: # ofmap stream: 47040
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv80"
Thu 18:16: # cycles:       388800
Thu 18:16: # ifmap stream: 47040
Thu 18:16: # ofmap stream: 7840
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv84"
Thu 18:16: # cycles:       235200
Thu 18:16: # ifmap stream: 7840
Thu 18:16: # ofmap stream: 47040
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv86"
Thu 18:16: # cycles:       388800
Thu 18:16: # ifmap stream: 47040
Thu 18:16: # ofmap stream: 7840
Thu 18:16: coeff vec size: 288
Thu 18:16: coeff stream bit width: 4608
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv90"
Thu 18:16: # cycles:       235200
Thu 18:16: # ifmap stream: 7840
Thu 18:16: # ofmap stream: 47040
Thu 18:16: coeff vec size: 32
Thu 18:16: coeff stream bit width: 512
Thu 18:16: coeff stream chunk size: 1
Thu 18:16: Setup streams for kernel "conv92"
Thu 18:16: # cycles:       388800
Thu 18:16: # ifmap stream: 47040
Thu 18:16: # ofmap stream: 15680
Thu 18:16: coeff vec size: 576
Thu 18:16: coeff stream bit width: 9216
Thu 18:16: coeff stream chunk size: 9
Thu 18:16: Setup streams for kernel "conv95"
Thu 18:16: # cycles:       313600
Thu 18:16: # ifmap stream: 15680
Thu 18:16: # ofmap stream: 62720
Thu 18:16: coeff vec size: 64
Thu 18:16: coeff stream bit width: 1024
Thu 18:16: coeff stream chunk size: 1
Thu 18:18: Generating input files (VHDL, netlists, vendor specific IP cores)
Thu 19:56: Running back-end  build (15 phases)
Thu 19:56: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Thu 19:56: (2/15) - Synthesize DFE Modules (VivadoSynth)
Thu 19:56: Executing Synthesis Strategy VIVADO_DEFAULT
Thu 20:48: (3/15) - Generate Resource Report (VivadoResourceUsage)
Thu 20:48: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 20:49: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Thu 20:49: 
Thu 20:49: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Thu 20:49: For this compile, we estimate this process may take longer than 1 hour.
Thu 20:49: We recommend running in simulation to verify correctness before building hardware.
Thu 20:49: 
Thu 20:49: PRELIMINARY RESOURCE USAGE
Thu 20:49: FPGA: xcVU9P-FLGB2104-2-E
Thu 20:49: Logic utilization:      549455 / 3546720 (15.49%)
Thu 20:49:   LUTs:                 136791 / 1182240 (11.57%)
Thu 20:49:   Primary FFs:          412664 / 2364480 (17.45%)
Thu 20:49: DSP blocks:               2701 / 6840    (39.49%)
Thu 20:49: Block memory (BRAM18):    3762 / 4320    (87.08%)
Thu 20:49: Block memory (URAM):       292 / 960     (30.42%)
Thu 20:49: 
Thu 20:49: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Thu 20:49: 
Thu 20:49: PRELIMINARY POWER REPORT
Thu 20:49: Total On-Chip Power (W) 12.60 (budget: 91.80) 
Thu 20:49: Dynamic Power (W)        9.84 
Thu 20:49: Device Static Power(W)   2.76 
Thu 20:49: 
Thu 20:49: (7/15) - Place DFE (VivadoImplementation)
Thu 20:49: Executing the following 10 Implementation Strategies in 4 threads:
Thu 20:49:  - VIVADO_DEFAULT
Thu 20:49:  - MAXELER1
Thu 20:49:  - MAXELER2
Thu 20:49:  - MAXELER3
Thu 20:49:  - MAXELER4
Thu 20:49:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Thu 20:49:  - PERFORMANCE_EXPLORE
Thu 20:49:  - PERFORMANCE_EXTRA_TIMING_OPT
Thu 20:49:  - PERFORMANCE_NET_DELAY_HIGH
Thu 20:49:  - PERFORMANCE_REFINE_PLACEMENT
Thu 23:55: Implementation: Strategy "VIVADO_DEFAULT" met timing with score 0 (best score 0)
Thu 23:55: Implementation: Strategy "MAXELER2" was cancelled (no timing score)
Thu 23:55: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Thu 23:55: Implementation: Strategy "MAXELER3" was cancelled (no timing score)
Thu 23:55: (8/15) - Generate Resource Report (VivadoResourceUsage)
Thu 23:55: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 23:56: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Thu 23:56: 
Thu 23:56: FINAL POWER REPORT
Thu 23:56: Total On-Chip Power (W) 13.86 (budget: 91.80) 
Thu 23:56: Dynamic Power (W)       11.08 
Thu 23:56: Device Static Power(W)   2.78 
Thu 23:56: 
Thu 23:56: (11/15) - Generate Configuration (VivadoBitgen)
Fri 00:14: (12/15) - Update Checksum (VivadoUpdateChecksum)
Fri 00:19: (13/15) - Convert Programming File (VivadoCfgfileGen)
Fri 00:20: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Fri 00:20: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Fri 00:20: 
Fri 00:20: FINAL RESOURCE USAGE
Fri 00:20: FPGA: xcVU9P-FLGB2104-2-E
Fri 00:20: Logic utilization:      483602 / 3546720 (13.64%)
Fri 00:20:   LUTs:                 122402 / 1182240 (10.35%)
Fri 00:20:   Primary FFs:          361200 / 2364480 (15.28%)
Fri 00:20: DSP blocks:               2699 / 6840    (39.46%)
Fri 00:20: Block memory (BRAM18):    3762 / 4320    (87.08%)
Fri 00:20: Block memory (URAM):       292 / 960     (30.42%)
Fri 00:20: 
Fri 00:20: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max (MD5Sum: 299604afbfaad46bc031eb2017e983a3)
Fri 00:20: Build completed: Fri Dec 31 00:20:40 GMT 2021 (took 6 hours, 5 mins, 42 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV2OnnxManual2.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch/MobilenetV2OnnxManual2.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max MobilenetV2OnnxManual2_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_5848173768289494363/cobject/max_2593170611133394209.c -o /tmp/sliccompile_5848173768289494363/cobject/max_2593170611133394209.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results/MobilenetV2OnnxManual2.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_8308330328582957903.o 
ld -r /tmp/sliccompile_5848173768289494363/cobject/max_2593170611133394209.c.o max_8308330328582957903.o -o MobilenetV2OnnxManual2_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/mobilenet_v2_onnx_manual_2'
g++ ../../src/mobilenet_v2_onnx_manual_2/MobilenetV2OnnxManual2CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual2_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=MobilenetV2OnnxManual2 -c -o MobilenetV2OnnxManual2_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o MobilenetV2OnnxManual2_FREQ_200_dfe MobilenetV2OnnxManual2_FREQ_200_dfe.o MobilenetV2OnnxManual2_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
