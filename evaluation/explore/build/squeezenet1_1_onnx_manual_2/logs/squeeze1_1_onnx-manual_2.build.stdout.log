Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=squeezenet1_1_onnx_manual_2 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 Squeezenet11OnnxManual2Manager \
	DFEModel=MAIA maxFileName=Squeezenet11OnnxManual2 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_2/data/data-squeeze1_1_onnx-manual_2.txt 
]0; maxJavaRun: Squeezenet11OnnxManual2Manager DFEModel=MAIA maxFileName=Squeezenet11OnnxManual2 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_2/data/data-squeeze1_1_onnx-manual_2.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : squeezenet1_1_onnx_manual_2
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : squeezenet1_1_onnx_manual_2.Squeezenet11OnnxManual2Manager
Class arguments     : DFEModel=MAIA maxFileName=Squeezenet11OnnxManual2 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_2/data/data-squeeze1_1_onnx-manual_2.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Thu 20:28: MaxCompiler version: 2021.1
Thu 20:28: Build "Squeezenet11OnnxManual2" start time: Thu Dec 30 20:28:57 GMT 2021
Thu 20:28: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Thu 20:28: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200
Thu 20:28: Detailed build log available in "_build.log"
Thu 20:28: 
Thu 20:28: ENGINE BUILD PARAMETERS
Thu 20:28: 	              Build name: Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200                                                                                         
Thu 20:28: 	             maxFileName: Squeezenet11OnnxManual2                                                                                                           
Thu 20:28: 	                  target: DFE                                                                                                                               
Thu 20:28: 	                DFEModel: MAIA                                                                                                                              
Thu 20:28: 	              enableMPCX: false                                                                                                                             
Thu 20:28: 	                bitWidth: 32                                                                                                                                
Thu 20:28: 	                     WBW: 32                                                                                                                                
Thu 20:28: 	                   DTYPE: fixed                                                                                                                             
Thu 20:28: 	           NUM_FRAC_BITS: 8                                                                                                                                 
Thu 20:28: 	                      PF: 1                                                                                                                                 
Thu 20:28: 	                      PC: 1                                                                                                                                 
Thu 20:28: 	                      PK: 1                                                                                                                                 
Thu 20:28: 	                       H: 1                                                                                                                                 
Thu 20:28: 	                       W: 1                                                                                                                                 
Thu 20:28: 	                       C: 1                                                                                                                                 
Thu 20:28: 	                       F: 1                                                                                                                                 
Thu 20:28: 	                       K: 1                                                                                                                                 
Thu 20:28: 	                     PAD: 0                                                                                                                                 
Thu 20:28: 	                       S: 1                                                                                                                                 
Thu 20:28: 	                     SEQ: 0                                                                                                                                 
Thu 20:28: 	                    FREQ: 200                                                                                                                               
Thu 20:28: 	                USE_DRAM: false                                                                                                                             
Thu 20:28: 	                 USE_BNN: false                                                                                                                             
Thu 20:28: 	            USE_WINOGRAD: false                                                                                                                             
Thu 20:28: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                             
Thu 20:28: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                 
Thu 20:28: 	                   DEBUG: false                                                                                                                             
Thu 20:28: 	           COEFF_ON_CHIP: false                                                                                                                             
Thu 20:28: 	              INIT_COEFF: false                                                                                                                             
Thu 20:28: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_2/data/data-squeeze1_1_onnx-manual_2.txt
Thu 20:29: Generating kernel squeezenet0conv0fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv0fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 223, output height = 223, pad = 0
Thu 20:29: Counter H = 223 W = 223
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 262144 x 1
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv0fwd" ...
Thu 20:29: Line buffer shape 3 x 223, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 1, output vector size: 9.
Thu 20:29: Number of separated line buffers: 1
Thu 20:29: Initialising line buffer kernel with 3 x 223 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv0fwd of depth 12 and type {DFEVectorType: 144 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4470f8a6
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv0fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 9
Thu 20:29: CORE coefficient vector size: 144
Thu 20:29: CORE ofmap vector size: 16
Thu 20:29: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv0fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0pool0fwd ...
Thu 20:29: Instantiating kernel "squeezenet0pool0fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 111, output height = 111, pad = 0
Thu 20:29: Counter H = 111 W = 111
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Building line buffer for "squeezenet0pool0fwd" ...
Thu 20:29: Line buffer shape 3 x 111, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 16, output vector size: 144.
Thu 20:29: Number of separated line buffers: 16
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 111 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0pool0fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv1fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv1fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 0
Thu 20:29: Counter H = 55 W = 55
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 16
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv1fwd of depth 32 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4e8598d9
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv1fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 16
Thu 20:29: CORE coefficient vector size: 32
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv1fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv2fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv2fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 0
Thu 20:29: Counter H = 55 W = 55
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 32768 x 2
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv2fwd of depth 128 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@500ec769
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv2fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 2
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv2fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv3fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv3fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 1
Thu 20:29: Counter H = 57 W = 57
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 32768 x 2
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv3fwd" ...
Thu 20:29: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 2, output vector size: 18.
Thu 20:29: Number of separated line buffers: 2
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv3fwd of depth 128 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@43294e9b
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv3fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 18
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv3fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat0 ...
Thu 20:29: Instantiating kernel "squeezenet0concat0"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat0"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv4fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv4fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 0
Thu 20:29: Counter H = 55 W = 55
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 8
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv4fwd of depth 64 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5aa334c
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv4fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 8
Thu 20:29: CORE coefficient vector size: 32
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv4fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv5fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv5fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 0
Thu 20:29: Counter H = 55 W = 55
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 16384 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv5fwd of depth 128 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d432bc0
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv5fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv5fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv6fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv6fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 1
Thu 20:29: Counter H = 57 W = 57
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 16384 x 4
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv6fwd" ...
Thu 20:29: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 57 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv6fwd of depth 128 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@41271320
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv6fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 36
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv6fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat1 ...
Thu 20:29: Instantiating kernel "squeezenet0concat1"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat1"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0pool1fwd ...
Thu 20:29: Instantiating kernel "squeezenet0pool1fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 55, output height = 55, pad = 0
Thu 20:29: Counter H = 55 W = 55
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Building line buffer for "squeezenet0pool1fwd" ...
Thu 20:29: Line buffer shape 3 x 55, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 55 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 55 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 55 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 55 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0pool1fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv7fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv7fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 0
Thu 20:29: Counter H = 27 W = 27
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 1024 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv7fwd of depth 256 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@72e806
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv7fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 16
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv7fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv8fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv8fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 0
Thu 20:29: Counter H = 27 W = 27
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv8fwd of depth 512 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1ba00c0c
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv8fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv8fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv9fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv9fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 1
Thu 20:29: Counter H = 29 W = 29
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 4
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv9fwd" ...
Thu 20:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv9fwd of depth 512 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1b557402
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv9fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 36
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv9fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat2 ...
Thu 20:29: Instantiating kernel "squeezenet0concat2"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat2"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv10fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv10fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 0
Thu 20:29: Counter H = 27 W = 27
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 1024 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv10fwd of depth 512 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@148a581e
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv10fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 16
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv10fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv11fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv11fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 0
Thu 20:29: Counter H = 27 W = 27
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv11fwd of depth 512 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@19d8d11f
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv11fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv11fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv12fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv12fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 1
Thu 20:29: Counter H = 29 W = 29
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 4
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv12fwd" ...
Thu 20:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 29 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv12fwd of depth 512 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@19adcb41
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv12fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 36
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv12fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat3 ...
Thu 20:29: Instantiating kernel "squeezenet0concat3"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat3"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0pool2fwd ...
Thu 20:29: Instantiating kernel "squeezenet0pool2fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 27, output height = 27, pad = 0
Thu 20:29: Counter H = 27 W = 27
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Building line buffer for "squeezenet0pool2fwd" ...
Thu 20:29: Line buffer shape 3 x 27, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 27 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 27 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 27 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 27 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0pool2fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv13fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv13fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 256 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv13fwd of depth 1536 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7c47ae7d
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv13fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv13fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv14fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv14fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 2
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv14fwd of depth 2304 and type {DFEVectorType: 4 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4a57cec1
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv14fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 2
Thu 20:29: CORE coefficient vector size: 4
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv14fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv15fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv15fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 1
Thu 20:29: Counter H = 15 W = 15
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 2
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv15fwd" ...
Thu 20:29: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 2, output vector size: 18.
Thu 20:29: Number of separated line buffers: 2
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv15fwd of depth 2304 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3c596a57
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv15fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 18
Thu 20:29: CORE coefficient vector size: 36
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv15fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat4 ...
Thu 20:29: Instantiating kernel "squeezenet0concat4"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat4"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv16fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv16fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 256 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv16fwd of depth 2304 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@328c9bf5
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv16fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv16fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv17fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv17fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 2
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv17fwd of depth 2304 and type {DFEVectorType: 4 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d4069b0
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv17fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 2
Thu 20:29: CORE coefficient vector size: 4
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv17fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv18fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv18fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 1
Thu 20:29: Counter H = 15 W = 15
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 8192 x 2
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv18fwd" ...
Thu 20:29: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 2, output vector size: 18.
Thu 20:29: Number of separated line buffers: 2
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv18fwd of depth 2304 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6d0e2a12
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv18fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 18
Thu 20:29: CORE coefficient vector size: 36
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv18fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat5 ...
Thu 20:29: Instantiating kernel "squeezenet0concat5"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat5"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv19fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv19fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 256 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv19fwd of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4d0aa772
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv19fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 16
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv19fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv20fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv20fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv20fwd of depth 2048 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5a0fc6cd
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv20fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv20fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv21fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv21fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 1
Thu 20:29: Counter H = 15 W = 15
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 4
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv21fwd" ...
Thu 20:29: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv21fwd of depth 2048 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@3c927907
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv21fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 36
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv21fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat6 ...
Thu 20:29: Instantiating kernel "squeezenet0concat6"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat6"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv22fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv22fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 256 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv22fwd of depth 2048 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@103109d3
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv22fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 16
Thu 20:29: CORE ofmap vector size: 4
Thu 20:29: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Connecting to output: ofmap_1
Thu 20:29: Compiling kernel "squeezenet0conv22fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv23fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv23fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv23fwd of depth 2048 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4eda4c0e
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv23fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 8
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv23fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv24fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv24fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 1
Thu 20:29: Counter H = 15 W = 15
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 4096 x 4
Thu 20:29: loop = false
Thu 20:29: Building line buffer for "squeezenet0conv24fwd" ...
Thu 20:29: Line buffer shape 3 x 13, produces 1 number of 3 x 3 tiles per cycle
Thu 20:29: Line buffer input vector size: 4, output vector size: 36.
Thu 20:29: Number of separated line buffers: 4
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: Initialising line buffer kernel with 3 x 15 x 1
Thu 20:29: Size of line buffer output: 3
Thu 20:29: Number of line buffer output chunks: 3
Thu 20:29: Connecting outputs from chunk (#000) ...
Thu 20:29: Connecting outputs from chunk (#001) ...
Thu 20:29: Connecting outputs from chunk (#002) ...
Thu 20:29: ROM created for squeezenet0conv24fwd of depth 2048 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1eb7de01
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv24fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 36
Thu 20:29: CORE coefficient vector size: 72
Thu 20:29: CORE ofmap vector size: 2
Thu 20:29: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv24fwd"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0concat7 ...
Thu 20:29: Instantiating kernel "squeezenet0concat7"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: Compiling kernel "squeezenet0concat7"
Thu 20:29: 
Thu 20:29: Generating kernel squeezenet0conv25fwd ...
Thu 20:29: Instantiating kernel "squeezenet0conv25fwd"
Thu 20:29: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: coeffOnChip = true
Thu 20:29: Input height = 13, output height = 13, pad = 0
Thu 20:29: Counter H = 13 W = 13
Thu 20:29: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 20:29: Ifmap buffer configuration 256 x 4
Thu 20:29: loop = false
Thu 20:29: ROM created for squeezenet0conv25fwd of depth 4096 and type {DFEVectorType: 128 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@67b166a0
Thu 20:29: Building the CORE arithmetic unit for "squeezenet0conv25fwd" ...
Thu 20:29: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 20:29: CORE ifmap vector size: 4
Thu 20:29: CORE coefficient vector size: 128
Thu 20:29: CORE ofmap vector size: 32
Thu 20:29: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 20:29: Connecting to output: ofmap
Thu 20:29: Compiling kernel "squeezenet0conv25fwd"
Thu 20:29: 
Thu 20:29: Generating padding kernels for DRAM access
Thu 20:29: Instantiating kernel "ifmap_unpad"
Thu 20:29: Compiling kernel "ifmap_unpad"
Thu 20:29: 
Thu 20:29: Instantiating kernel "ofmap_pad"
Thu 20:29: Compiling kernel "ofmap_pad"
Thu 20:29: 
Thu 20:29: Setting up stream connections for squeezenet0conv0fwd
Thu 20:29: Setting up stream connections for squeezenet0pool0fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv0fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv1fwd
Thu 20:29: Connecting ifmap <== squeezenet0pool0fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv2fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv1fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv3fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv1fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat0
Thu 20:29: Connecting ifmap <== squeezenet0conv2fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv3fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv4fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat0: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv5fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv4fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv6fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv4fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat1
Thu 20:29: Connecting ifmap <== squeezenet0conv5fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv6fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0pool1fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat1: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv7fwd
Thu 20:29: Connecting ifmap <== squeezenet0pool1fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv8fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv7fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv9fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv7fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat2
Thu 20:29: Connecting ifmap <== squeezenet0conv8fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv9fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv10fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat2: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv11fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv10fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv12fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv10fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat3
Thu 20:29: Connecting ifmap <== squeezenet0conv11fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv12fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0pool2fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat3: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv13fwd
Thu 20:29: Connecting ifmap <== squeezenet0pool2fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv14fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv13fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv15fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv13fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat4
Thu 20:29: Connecting ifmap <== squeezenet0conv14fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv15fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv16fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat4: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv17fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv16fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv18fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv16fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat5
Thu 20:29: Connecting ifmap <== squeezenet0conv17fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv18fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv19fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat5: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv20fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv19fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv21fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv19fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat6
Thu 20:29: Connecting ifmap <== squeezenet0conv20fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv21fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv22fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat6: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv23fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv22fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv24fwd
Thu 20:29: Connecting ifmap <== squeezenet0conv22fwd: ofmap_1
Thu 20:29: Setting up stream connections for squeezenet0concat7
Thu 20:29: Connecting ifmap <== squeezenet0conv23fwd: ofmap
Thu 20:29: Connecting ifmap_1 <== squeezenet0conv24fwd: ofmap
Thu 20:29: Setting up stream connections for squeezenet0conv25fwd
Thu 20:29: Connecting ifmap <== squeezenet0concat7: ofmap
Thu 20:29: DRAM will be used to build the design
Thu 20:29: Setup streams for kernel "squeezenet0conv0fwd"
Thu 20:29: # cycles:       596748
Thu 20:29: # ifmap stream: 149187
Thu 20:29: # ofmap stream: 788544
Thu 20:29: coeff vec size: 144
Thu 20:29: coeff stream bit width: 2304
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0pool0fwd"
Thu 20:29: # cycles:       49284
Thu 20:29: # ifmap stream: 788544
Thu 20:29: # ofmap stream: 193600
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv1fwd"
Thu 20:29: # cycles:       96800
Thu 20:29: # ifmap stream: 193600
Thu 20:29: # ofmap stream: 48400
Thu 20:29: coeff vec size: 32
Thu 20:29: coeff stream bit width: 512
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv2fwd"
Thu 20:29: # cycles:       387200
Thu 20:29: # ifmap stream: 48400
Thu 20:29: # ofmap stream: 193600
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv3fwd"
Thu 20:29: # cycles:       415872
Thu 20:29: # ifmap stream: 48400
Thu 20:29: # ofmap stream: 193600
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat0"
Thu 20:29: # cycles:       48400
Thu 20:29: # ifmap stream: 193600
Thu 20:29: # ofmap stream: 387200
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv4fwd"
Thu 20:29: # cycles:       193600
Thu 20:29: # ifmap stream: 387200
Thu 20:29: # ofmap stream: 48400
Thu 20:29: coeff vec size: 32
Thu 20:29: coeff stream bit width: 512
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv5fwd"
Thu 20:29: # cycles:       387200
Thu 20:29: # ifmap stream: 48400
Thu 20:29: # ofmap stream: 193600
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv6fwd"
Thu 20:29: # cycles:       415872
Thu 20:29: # ifmap stream: 48400
Thu 20:29: # ofmap stream: 193600
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat1"
Thu 20:29: # cycles:       96800
Thu 20:29: # ifmap stream: 193600
Thu 20:29: # ofmap stream: 387200
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0pool1fwd"
Thu 20:29: # cycles:       96800
Thu 20:29: # ifmap stream: 387200
Thu 20:29: # ofmap stream: 93312
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv7fwd"
Thu 20:29: # cycles:       186624
Thu 20:29: # ifmap stream: 93312
Thu 20:29: # ofmap stream: 23328
Thu 20:29: coeff vec size: 16
Thu 20:29: coeff stream bit width: 256
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv8fwd"
Thu 20:29: # cycles:       373248
Thu 20:29: # ifmap stream: 23328
Thu 20:29: # ofmap stream: 93312
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv9fwd"
Thu 20:29: # cycles:       430592
Thu 20:29: # ifmap stream: 23328
Thu 20:29: # ofmap stream: 93312
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat2"
Thu 20:29: # cycles:       46656
Thu 20:29: # ifmap stream: 93312
Thu 20:29: # ofmap stream: 186624
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv10fwd"
Thu 20:29: # cycles:       373248
Thu 20:29: # ifmap stream: 186624
Thu 20:29: # ofmap stream: 23328
Thu 20:29: coeff vec size: 16
Thu 20:29: coeff stream bit width: 256
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv11fwd"
Thu 20:29: # cycles:       373248
Thu 20:29: # ifmap stream: 23328
Thu 20:29: # ofmap stream: 93312
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv12fwd"
Thu 20:29: # cycles:       430592
Thu 20:29: # ifmap stream: 23328
Thu 20:29: # ofmap stream: 93312
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat3"
Thu 20:29: # cycles:       46656
Thu 20:29: # ifmap stream: 93312
Thu 20:29: # ofmap stream: 186624
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0pool2fwd"
Thu 20:29: # cycles:       46656
Thu 20:29: # ifmap stream: 186624
Thu 20:29: # ofmap stream: 43264
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv13fwd"
Thu 20:29: # cycles:       259584
Thu 20:29: # ifmap stream: 43264
Thu 20:29: # ofmap stream: 8112
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv14fwd"
Thu 20:29: # cycles:       389376
Thu 20:29: # ifmap stream: 8112
Thu 20:29: # ofmap stream: 32448
Thu 20:29: coeff vec size: 4
Thu 20:29: coeff stream bit width: 64
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv15fwd"
Thu 20:29: # cycles:       518400
Thu 20:29: # ifmap stream: 8112
Thu 20:29: # ofmap stream: 32448
Thu 20:29: coeff vec size: 36
Thu 20:29: coeff stream bit width: 576
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat4"
Thu 20:29: # cycles:       16224
Thu 20:29: # ifmap stream: 32448
Thu 20:29: # ofmap stream: 64896
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv16fwd"
Thu 20:29: # cycles:       389376
Thu 20:29: # ifmap stream: 64896
Thu 20:29: # ofmap stream: 8112
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv17fwd"
Thu 20:29: # cycles:       389376
Thu 20:29: # ifmap stream: 8112
Thu 20:29: # ofmap stream: 32448
Thu 20:29: coeff vec size: 4
Thu 20:29: coeff stream bit width: 64
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv18fwd"
Thu 20:29: # cycles:       518400
Thu 20:29: # ifmap stream: 8112
Thu 20:29: # ofmap stream: 32448
Thu 20:29: coeff vec size: 36
Thu 20:29: coeff stream bit width: 576
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat5"
Thu 20:29: # cycles:       16224
Thu 20:29: # ifmap stream: 32448
Thu 20:29: # ofmap stream: 64896
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv19fwd"
Thu 20:29: # cycles:       259584
Thu 20:29: # ifmap stream: 64896
Thu 20:29: # ofmap stream: 10816
Thu 20:29: coeff vec size: 16
Thu 20:29: coeff stream bit width: 256
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv20fwd"
Thu 20:29: # cycles:       346112
Thu 20:29: # ifmap stream: 10816
Thu 20:29: # ofmap stream: 43264
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv21fwd"
Thu 20:29: # cycles:       460800
Thu 20:29: # ifmap stream: 10816
Thu 20:29: # ofmap stream: 43264
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat6"
Thu 20:29: # cycles:       21632
Thu 20:29: # ifmap stream: 43264
Thu 20:29: # ofmap stream: 86528
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv22fwd"
Thu 20:29: # cycles:       346112
Thu 20:29: # ifmap stream: 86528
Thu 20:29: # ofmap stream: 10816
Thu 20:29: coeff vec size: 16
Thu 20:29: coeff stream bit width: 256
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv23fwd"
Thu 20:29: # cycles:       346112
Thu 20:29: # ifmap stream: 10816
Thu 20:29: # ofmap stream: 43264
Thu 20:29: coeff vec size: 8
Thu 20:29: coeff stream bit width: 128
Thu 20:29: coeff stream chunk size: 1
Thu 20:29: Setup streams for kernel "squeezenet0conv24fwd"
Thu 20:29: # cycles:       460800
Thu 20:29: # ifmap stream: 10816
Thu 20:29: # ofmap stream: 43264
Thu 20:29: coeff vec size: 72
Thu 20:29: coeff stream bit width: 1152
Thu 20:29: coeff stream chunk size: 9
Thu 20:29: Setup streams for kernel "squeezenet0concat7"
Thu 20:29: # cycles:       21632
Thu 20:29: # ifmap stream: 43264
Thu 20:29: # ofmap stream: 86528
Thu 20:29: coeff vec size: 0
Thu 20:29: coeff stream bit width: 0
Thu 20:29: coeff stream chunk size: 0
Thu 20:29: Setup streams for kernel "squeezenet0conv25fwd"
Thu 20:29: # cycles:       692224
Thu 20:29: # ifmap stream: 86528
Thu 20:29: # ofmap stream: 173056
Thu 20:29: coeff vec size: 128
Thu 20:29: coeff stream bit width: 2048
Thu 20:29: coeff stream chunk size: 1
Thu 20:30: Generating input files (VHDL, netlists, vendor specific IP cores)
Thu 22:10: Running back-end  build (15 phases)
Thu 22:10: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Thu 22:10: (2/15) - Synthesize DFE Modules (VivadoSynth)
Thu 22:10: Executing Synthesis Strategy VIVADO_DEFAULT
Thu 22:40: (3/15) - Generate Resource Report (VivadoResourceUsage)
Thu 22:40: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 22:41: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Thu 22:41: 
Thu 22:41: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Thu 22:41: For this compile, we estimate this process may take longer than 1 hour.
Thu 22:41: We recommend running in simulation to verify correctness before building hardware.
Thu 22:41: 
Thu 22:41: PRELIMINARY RESOURCE USAGE
Thu 22:41: FPGA: xcVU9P-FLGB2104-2-E
Thu 22:41: Logic utilization:      398268 / 3546720 (11.23%)
Thu 22:41:   LUTs:                 120338 / 1182240 (10.18%)
Thu 22:41:   Primary FFs:          277930 / 2364480 (11.75%)
Thu 22:41: DSP blocks:               1181 / 6840    (17.27%)
Thu 22:41: Block memory (BRAM18):    1937 / 4320    (44.84%)
Thu 22:41: Block memory (URAM):       127 / 960     (13.23%)
Thu 22:41: 
Thu 22:41: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Thu 22:41: 
Thu 22:41: PRELIMINARY POWER REPORT
Thu 22:41: Total On-Chip Power (W) 11.03 (budget: 91.80) 
Thu 22:41: Dynamic Power (W)        8.33 
Thu 22:41: Device Static Power(W)   2.70 
Thu 22:41: 
Thu 22:41: (7/15) - Place DFE (VivadoImplementation)
Thu 22:41: Executing the following 10 Implementation Strategies in 4 threads:
Thu 22:41:  - VIVADO_DEFAULT
Thu 22:41:  - MAXELER1
Thu 22:41:  - MAXELER2
Thu 22:41:  - MAXELER3
Thu 22:41:  - MAXELER4
Thu 22:41:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Thu 22:41:  - PERFORMANCE_EXPLORE
Thu 22:41:  - PERFORMANCE_EXTRA_TIMING_OPT
Thu 22:41:  - PERFORMANCE_NET_DELAY_HIGH
Thu 22:41:  - PERFORMANCE_REFINE_PLACEMENT
Fri 00:50: Implementation: Strategy "MAXELER3" met timing with score 0 (best score 0)
Fri 00:50: Implementation: Strategy "VIVADO_DEFAULT" was cancelled (no timing score)
Fri 00:50: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Fri 00:50: Implementation: Strategy "MAXELER2" was cancelled (no timing score)
Fri 00:50: (8/15) - Generate Resource Report (VivadoResourceUsage)
Fri 00:50: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Fri 00:50: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Fri 00:50: 
Fri 00:50: FINAL POWER REPORT
Fri 00:50: Total On-Chip Power (W) 12.56 (budget: 91.80) 
Fri 00:50: Dynamic Power (W)        9.84 
Fri 00:50: Device Static Power(W)   2.73 
Fri 00:50: 
Fri 00:50: (11/15) - Generate Configuration (VivadoBitgen)
Fri 01:02: (12/15) - Update Checksum (VivadoUpdateChecksum)
Fri 01:06: (13/15) - Convert Programming File (VivadoCfgfileGen)
Fri 01:06: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Fri 01:06: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Fri 01:07: 
Fri 01:07: FINAL RESOURCE USAGE
Fri 01:07: FPGA: xcVU9P-FLGB2104-2-E
Fri 01:07: Logic utilization:      357859 / 3546720 (10.09%)
Fri 01:07:   LUTs:                 106645 / 1182240 (9.02%)
Fri 01:07:   Primary FFs:          251214 / 2364480 (10.62%)
Fri 01:07: DSP blocks:               1038 / 6840    (15.18%)
Fri 01:07: Block memory (BRAM18):    1937 / 4320    (44.84%)
Fri 01:07: Block memory (URAM):       127 / 960     (13.23%)
Fri 01:07: 
Fri 01:07: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max (MD5Sum: 43f673b87d9e7a612058cfb6bb5bca72)
Fri 01:07: Build completed: Fri Dec 31 01:07:04 GMT 2021 (took 4 hours, 38 mins, 7 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch/Squeezenet11OnnxManual2.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch/Squeezenet11OnnxManual2.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max Squeezenet11OnnxManual2_FREQ_200_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_5325298864276271011/cobject/max_3108241645088569325.c -o /tmp/sliccompile_5325298864276271011/cobject/max_3108241645088569325.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results/Squeezenet11OnnxManual2.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_3016365401884372692.o 
ld -r /tmp/sliccompile_5325298864276271011/cobject/max_3108241645088569325.c.o max_3016365401884372692.o -o Squeezenet11OnnxManual2_FREQ_200_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/explore/build/squeezenet1_1_onnx_manual_2'
g++ ../../src/squeezenet1_1_onnx_manual_2/Squeezenet11OnnxManual2CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Squeezenet11OnnxManual2_MAIA_DFE_FREQ_200/results -DDESIGN_NAME=Squeezenet11OnnxManual2 -c -o Squeezenet11OnnxManual2_FREQ_200_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o Squeezenet11OnnxManual2_FREQ_200_dfe Squeezenet11OnnxManual2_FREQ_200_dfe.o Squeezenet11OnnxManual2_FREQ_200_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
