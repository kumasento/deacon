Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=resnet_50_a MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 Resnet50AManager \
	DFEModel=MAIA maxFileName=Resnet50A target='DFE' enableMPCX=false \
	FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/test/build/resnet_50_a/data/data-resnet-50-a.txt 
]0; maxJavaRun: Resnet50AManager DFEModel=MAIA maxFileName=Resnet50A target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/test/build/resnet_50_a/data/data-resnet-50-a.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : resnet_50_a
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : resnet_50_a.Resnet50AManager
Class arguments     : DFEModel=MAIA maxFileName=Resnet50A target=DFE enableMPCX=false FREQ=300 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/test/build/resnet_50_a/data/data-resnet-50-a.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Sun 12:37: MaxCompiler version: 2021.1
Sun 12:37: Build "Resnet50A" start time: Sun Dec 26 12:37:18 GMT 2021
Sun 12:37: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Sun 12:37: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300
Sun 12:37: Detailed build log available in "_build.log"
Sun 12:37: 
Sun 12:37: ENGINE BUILD PARAMETERS
Sun 12:37: 	              Build name: Resnet50A_MAIA_DFE_FREQ_300                                                                       
Sun 12:37: 	             maxFileName: Resnet50A                                                                                         
Sun 12:37: 	                  target: DFE                                                                                               
Sun 12:37: 	                DFEModel: MAIA                                                                                              
Sun 12:37: 	              enableMPCX: false                                                                                             
Sun 12:37: 	                bitWidth: 32                                                                                                
Sun 12:37: 	                     WBW: 32                                                                                                
Sun 12:37: 	                   DTYPE: fixed                                                                                             
Sun 12:37: 	           NUM_FRAC_BITS: 8                                                                                                 
Sun 12:37: 	                      PF: 1                                                                                                 
Sun 12:37: 	                      PC: 1                                                                                                 
Sun 12:37: 	                      PK: 1                                                                                                 
Sun 12:37: 	                       H: 1                                                                                                 
Sun 12:37: 	                       W: 1                                                                                                 
Sun 12:37: 	                       C: 1                                                                                                 
Sun 12:37: 	                       F: 1                                                                                                 
Sun 12:37: 	                       K: 1                                                                                                 
Sun 12:37: 	                     PAD: 0                                                                                                 
Sun 12:37: 	                       S: 1                                                                                                 
Sun 12:37: 	                     SEQ: 0                                                                                                 
Sun 12:37: 	                    FREQ: 300                                                                                               
Sun 12:37: 	                USE_DRAM: false                                                                                             
Sun 12:37: 	                 USE_BNN: false                                                                                             
Sun 12:37: 	            USE_WINOGRAD: false                                                                                             
Sun 12:37: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                             
Sun 12:37: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                 
Sun 12:37: 	                   DEBUG: false                                                                                             
Sun 12:37: 	           COEFF_ON_CHIP: false                                                                                             
Sun 12:37: 	              INIT_COEFF: false                                                                                             
Sun 12:37: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/test/build/resnet_50_a/data/data-resnet-50-a.txt
Sun 12:37: Generating kernel conv0 ...
Sun 12:37: Instantiating kernel "conv0"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 225, output height = 225, pad = 2
Sun 12:37: Counter H = 229 W = 229
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Building line buffer for "conv0" ...
Sun 12:37: Line buffer shape 7 x 225, produces 1 number of 7 x 7 tiles per cycle
Sun 12:37: Line buffer input vector size: 1, output vector size: 49.
Sun 12:37: Number of separated line buffers: 1
Sun 12:37: Initialising line buffer kernel with 7 x 229 x 1
Sun 12:37: Size of line buffer output: 7
Sun 12:37: Number of line buffer output chunks: 7
Sun 12:37: Connecting outputs from chunk (#000) ...
Sun 12:37: Connecting outputs from chunk (#001) ...
Sun 12:37: Connecting outputs from chunk (#002) ...
Sun 12:37: Connecting outputs from chunk (#003) ...
Sun 12:37: Connecting outputs from chunk (#004) ...
Sun 12:37: Connecting outputs from chunk (#005) ...
Sun 12:37: Connecting outputs from chunk (#006) ...
Sun 12:37: Read for key = conv0 depth = 192 raw data = 9408
Sun 12:37: ROM created for conv0 of depth 192 and type {DFEVectorType: 49 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@51e69659
Sun 12:37: Building the CORE arithmetic unit for "conv0" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 49
Sun 12:37: CORE coefficient vector size: 49
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Compiling kernel "conv0"
Sun 12:37: 
Sun 12:37: Generating kernel pool0 ...
Sun 12:37: Instantiating kernel "pool0"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 112, output height = 112, pad = 1
Sun 12:37: Counter H = 114 W = 114
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Building line buffer for "pool0" ...
Sun 12:37: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Sun 12:37: Line buffer input vector size: 1, output vector size: 9.
Sun 12:37: Number of separated line buffers: 1
Sun 12:37: Initialising line buffer kernel with 3 x 114 x 1
Sun 12:37: Size of line buffer output: 3
Sun 12:37: Number of line buffer output chunks: 3
Sun 12:37: Connecting outputs from chunk (#000) ...
Sun 12:37: Connecting outputs from chunk (#001) ...
Sun 12:37: Connecting outputs from chunk (#002) ...
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Compiling kernel "pool0"
Sun 12:37: 
Sun 12:37: Generating kernel b2c0 ...
Sun 12:37: Instantiating kernel "b2c0"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 0
Sun 12:37: Counter H = 56 W = 56
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Read for key = b2c0 depth = 4096 raw data = 4096
Sun 12:37: ROM created for b2c0 of depth 4096 and type {DFEVectorType: 1 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@45673f68
Sun 12:37: Building the CORE arithmetic unit for "b2c0" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 1
Sun 12:37: CORE coefficient vector size: 1
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Connecting to output: ofmap_1
Sun 12:37: Compiling kernel "b2c0"
Sun 12:37: 
Sun 12:37: Generating kernel b2c1 ...
Sun 12:37: Instantiating kernel "b2c1"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 1
Sun 12:37: Counter H = 58 W = 58
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Building line buffer for "b2c1" ...
Sun 12:37: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 12:37: Line buffer input vector size: 1, output vector size: 9.
Sun 12:37: Number of separated line buffers: 1
Sun 12:37: Initialising line buffer kernel with 3 x 58 x 1
Sun 12:37: Size of line buffer output: 3
Sun 12:37: Number of line buffer output chunks: 3
Sun 12:37: Connecting outputs from chunk (#000) ...
Sun 12:37: Connecting outputs from chunk (#001) ...
Sun 12:37: Connecting outputs from chunk (#002) ...
Sun 12:37: Read for key = b2c1 depth = 4096 raw data = 36864
Sun 12:37: ROM created for b2c1 of depth 4096 and type {DFEVectorType: 9 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6a84bc3f
Sun 12:37: Building the CORE arithmetic unit for "b2c1" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 9
Sun 12:37: CORE coefficient vector size: 9
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Connecting to output: ofmap_1
Sun 12:37: Compiling kernel "b2c1"
Sun 12:37: 
Sun 12:37: Generating kernel b2c2 ...
Sun 12:37: Instantiating kernel "b2c2"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 0
Sun 12:37: Counter H = 56 W = 56
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 4096 x 1
Sun 12:37: loop = false
Sun 12:37: Read for key = b2c2 depth = 16384 raw data = 16384
Sun 12:37: ROM created for b2c2 of depth 16384 and type {DFEVectorType: 1 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@a0f53fc
Sun 12:37: Building the CORE arithmetic unit for "b2c2" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 1
Sun 12:37: CORE coefficient vector size: 1
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: Ifmap buffer configuration 4096 x 1
Sun 12:37: loop = false
Sun 12:37: Read for key = b2c2_1 depth = 16384 raw data = 16384
Sun 12:37: ROM created for b2c2_1 of depth 16384 and type {DFEVectorType: 1 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@14b0e127
Sun 12:37: Building the CORE arithmetic unit for "b2c2" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 1
Sun 12:37: CORE coefficient vector size: 1
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth = 1048576 addr_bits =    20
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Compiling kernel "b2c2"
Sun 12:37: 
Sun 12:37: Generating kernel b3c0 ...
Sun 12:37: Instantiating kernel "b3c0"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 0
Sun 12:37: Counter H = 56 W = 56
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 4
Sun 12:37: loop = false
Sun 12:37: Read for key = b3c0 depth = 4096 raw data = 16384
Sun 12:37: ROM created for b3c0 of depth 4096 and type {DFEVectorType: 4 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7d7cac8
Sun 12:37: Building the CORE arithmetic unit for "b3c0" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 4
Sun 12:37: CORE coefficient vector size: 4
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Connecting to output: ofmap_1
Sun 12:37: Compiling kernel "b3c0"
Sun 12:37: 
Sun 12:37: Generating kernel b3c1 ...
Sun 12:37: Instantiating kernel "b3c1"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 1
Sun 12:37: Counter H = 58 W = 58
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Building line buffer for "b3c1" ...
Sun 12:37: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 12:37: Line buffer input vector size: 1, output vector size: 9.
Sun 12:37: Number of separated line buffers: 1
Sun 12:37: Initialising line buffer kernel with 3 x 58 x 1
Sun 12:37: Size of line buffer output: 3
Sun 12:37: Number of line buffer output chunks: 3
Sun 12:37: Connecting outputs from chunk (#000) ...
Sun 12:37: Connecting outputs from chunk (#001) ...
Sun 12:37: Connecting outputs from chunk (#002) ...
Sun 12:37: Read for key = b3c1 depth = 4096 raw data = 36864
Sun 12:37: ROM created for b3c1 of depth 4096 and type {DFEVectorType: 9 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@77db3d02
Sun 12:37: Building the CORE arithmetic unit for "b3c1" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 9
Sun 12:37: CORE coefficient vector size: 9
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:37: Ifmap buffer configuration 262144 x 4
Sun 12:37: loop = false
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Connecting to output: ofmap_1
Sun 12:37: Compiling kernel "b3c1"
Sun 12:37: 
Sun 12:37: Generating kernel b3c2 ...
Sun 12:37: Instantiating kernel "b3c2"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 0
Sun 12:37: Counter H = 56 W = 56
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 4096 x 1
Sun 12:37: loop = false
Sun 12:37: Read for key = b3c2 depth = 4096 raw data = 16384
Sun 12:37: ROM created for b3c2 of depth 4096 and type {DFEVectorType: 4 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4b41587d
Sun 12:37: Building the CORE arithmetic unit for "b3c2" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 1
Sun 12:37: CORE coefficient vector size: 4
Sun 12:37: CORE ofmap vector size: 4
Sun 12:37: Residual buffer depth = 4096
Sun 12:37: [ConvLayerOfmapBuffer] depth = 262144 addr_bits =    18
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Compiling kernel "b3c2"
Sun 12:37: 
Sun 12:37: Generating kernel b4c0 ...
Sun 12:37: Instantiating kernel "b4c0"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 0
Sun 12:37: Counter H = 56 W = 56
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 4
Sun 12:37: loop = false
Sun 12:37: Read for key = b4c0 depth = 4096 raw data = 16384
Sun 12:37: ROM created for b4c0 of depth 4096 and type {DFEVectorType: 4 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@c14e5a5
Sun 12:37: Building the CORE arithmetic unit for "b4c0" ...
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: CORE ifmap vector size: 4
Sun 12:37: CORE coefficient vector size: 4
Sun 12:37: CORE ofmap vector size: 1
Sun 12:37: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:37: Connecting to output: ofmap
Sun 12:37: Connecting to output: ofmap_1
Sun 12:37: Compiling kernel "b4c0"
Sun 12:37: 
Sun 12:37: Generating kernel b4c1 ...
Sun 12:37: Instantiating kernel "b4c1"
Sun 12:37: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:37: coeffOnChip = true
Sun 12:37: Input height = 56, output height = 56, pad = 1
Sun 12:37: Counter H = 58 W = 58
Sun 12:37: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:37: Ifmap buffer configuration 262144 x 1
Sun 12:37: loop = false
Sun 12:37: Building line buffer for "b4c1" ...
Sun 12:37: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 12:37: Line buffer input vector size: 1, output vector size: 9.
Sun 12:37: Number of separated line buffers: 1
Sun 12:37: Initialising line buffer kernel with 3 x 58 x 1
Sun 12:37: Size of line buffer output: 3
Sun 12:37: Number of line buffer output chunks: 3
Sun 12:37: Connecting outputs from chunk (#000) ...
Sun 12:37: Connecting outputs from chunk (#001) ...
Sun 12:37: Connecting outputs from chunk (#002) ...
Sun 12:38: Read for key = b4c1 depth = 4096 raw data = 36864
Sun 12:38: ROM created for b4c1 of depth 4096 and type {DFEVectorType: 9 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@14b5752f
Sun 12:38: Building the CORE arithmetic unit for "b4c1" ...
Sun 12:38: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:38: CORE ifmap vector size: 9
Sun 12:38: CORE coefficient vector size: 9
Sun 12:38: CORE ofmap vector size: 1
Sun 12:38: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 12:38: Ifmap buffer configuration 262144 x 4
Sun 12:38: loop = false
Sun 12:38: Connecting to output: ofmap
Sun 12:38: Connecting to output: ofmap_1
Sun 12:38: Compiling kernel "b4c1"
Sun 12:38: 
Sun 12:38: Generating kernel b4c2 ...
Sun 12:38: Instantiating kernel "b4c2"
Sun 12:38: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:38: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:38: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:38: coeffOnChip = true
Sun 12:38: Input height = 56, output height = 56, pad = 0
Sun 12:38: Counter H = 56 W = 56
Sun 12:38: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:38: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 12:38: Ifmap buffer configuration 4096 x 1
Sun 12:38: loop = false
Sun 12:38: Read for key = b4c2 depth = 4096 raw data = 16384
Sun 12:38: ROM created for b4c2 of depth 4096 and type {DFEVectorType: 4 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@54e0f76f
Sun 12:38: Building the CORE arithmetic unit for "b4c2" ...
Sun 12:38: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 12:38: CORE ifmap vector size: 1
Sun 12:38: CORE coefficient vector size: 4
Sun 12:38: CORE ofmap vector size: 4
Sun 12:38: Residual buffer depth = 4096
Sun 12:38: [ConvLayerOfmapBuffer] depth = 262144 addr_bits =    18
Sun 12:38: Connecting to output: ofmap
Sun 12:38: Compiling kernel "b4c2"
Sun 12:38: 
Sun 12:38: Generating padding kernels for DRAM access
Sun 12:38: Instantiating kernel "ifmap_unpad"
Sun 12:38: Compiling kernel "ifmap_unpad"
Sun 12:38: 
Sun 12:38: Instantiating kernel "ofmap_pad"
Sun 12:38: Compiling kernel "ofmap_pad"
Sun 12:38: 
Sun 12:38: Setting up stream connections for conv0
Sun 12:38: Setting up stream connections for pool0
Sun 12:38: Connecting ifmap <== conv0: ofmap
Sun 12:38: Setting up stream connections for b2c0
Sun 12:38: Connecting ifmap <== pool0: ofmap
Sun 12:38: Setting up stream connections for b2c1
Sun 12:38: Connecting ifmap <== b2c0: ofmap
Sun 12:38: Connecting ifmap_1 <== b2c0: ofmap_1
Sun 12:38: Setting up stream connections for b2c2
Sun 12:38: Connecting ifmap <== b2c1: ofmap
Sun 12:38: Connecting ifmap_1 <== b2c1: ofmap_1
Sun 12:38: Setting up stream connections for b3c0
Sun 12:38: Connecting ifmap <== b2c2: ofmap
Sun 12:38: Setting up stream connections for b3c1
Sun 12:38: Connecting ifmap <== b3c0: ofmap
Sun 12:38: Connecting ifmap_1 <== b3c0: ofmap_1
Sun 12:38: Setting up stream connections for b3c2
Sun 12:38: Connecting ifmap <== b3c1: ofmap
Sun 12:38: Setting up stream connections for b4c0
Sun 12:38: Connecting ifmap <== b3c2: ofmap
Sun 12:38: Setting up stream connections for b4c1
Sun 12:38: Connecting ifmap <== b4c0: ofmap
Sun 12:38: Connecting ifmap_1 <== b4c0: ofmap_1
Sun 12:38: Setting up stream connections for b4c2
Sun 12:38: Connecting ifmap <== b4c1: ofmap
Sun 12:38: DRAM will be used to build the design
Sun 12:38: Setup streams for kernel "conv0"
Sun 12:38: # cycles:       10068672
Sun 12:38: # ifmap stream: 151875
Sun 12:38: # ofmap stream: 802816
Sun 12:38: coeff vec size: 49
Sun 12:38: coeff stream bit width: 392
Sun 12:38: coeff stream chunk size: 49
cp.C = 64
Sun 12:38: Setup streams for kernel "pool0"
Sun 12:38: # cycles:       831744
Sun 12:38: # ifmap stream: 802816
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 0
Sun 12:38: coeff stream bit width: 0
Sun 12:38: coeff stream chunk size: 0
cp.C = 64
Sun 12:38: Setup streams for kernel "b2c0"
Sun 12:38: # cycles:       12845056
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 1
Sun 12:38: coeff stream bit width: 8
Sun 12:38: coeff stream chunk size: 1
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b2c1"
Sun 12:38: # cycles:       13778944
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 9
Sun 12:38: coeff stream bit width: 72
Sun 12:38: coeff stream chunk size: 9
cp.C = 64
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b2c2"
Sun 12:38: # cycles:       51380224
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 802816
Sun 12:38: coeff vec size: 1
Sun 12:38: coeff stream bit width: 8
Sun 12:38: coeff stream chunk size: 1
cp.C = 256
Sun 12:38: Setup streams for kernel "b3c0"
Sun 12:38: # cycles:       12845056
Sun 12:38: # ifmap stream: 802816
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 4
Sun 12:38: coeff stream bit width: 32
Sun 12:38: coeff stream chunk size: 1
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b3c1"
Sun 12:38: # cycles:       13778944
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 9
Sun 12:38: coeff stream bit width: 72
Sun 12:38: coeff stream chunk size: 9
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b3c2"
Sun 12:38: # cycles:       12845056
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 802816
Sun 12:38: coeff vec size: 4
Sun 12:38: coeff stream bit width: 32
Sun 12:38: coeff stream chunk size: 1
cp.C = 256
Sun 12:38: Setup streams for kernel "b4c0"
Sun 12:38: # cycles:       12845056
Sun 12:38: # ifmap stream: 802816
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 4
Sun 12:38: coeff stream bit width: 32
Sun 12:38: coeff stream chunk size: 1
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b4c1"
Sun 12:38: # cycles:       13778944
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 200704
Sun 12:38: coeff vec size: 9
Sun 12:38: coeff stream bit width: 72
Sun 12:38: coeff stream chunk size: 9
cp.C = 64
cp.C = 64
Sun 12:38: Setup streams for kernel "b4c2"
Sun 12:38: # cycles:       12845056
Sun 12:38: # ifmap stream: 200704
Sun 12:38: # ofmap stream: 802816
Sun 12:38: coeff vec size: 4
Sun 12:38: coeff stream bit width: 32
Sun 12:38: coeff stream chunk size: 1
Sun 12:38: Generating input files (VHDL, netlists, vendor specific IP cores)
Sun 14:21: Running back-end  build (15 phases)
Sun 14:21: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Sun 14:21: (2/15) - Synthesize DFE Modules (VivadoSynth)
Sun 14:21: Executing Synthesis Strategy VIVADO_DEFAULT
Sun 14:38: (3/15) - Generate Resource Report (VivadoResourceUsage)
Sun 14:38: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Sun 14:38: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Sun 14:38: 
Sun 14:38: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Sun 14:38: For this compile, we estimate this process may take longer than 1 hour.
Sun 14:38: We recommend running in simulation to verify correctness before building hardware.
Sun 14:38: 
Sun 14:38: PRELIMINARY RESOURCE USAGE
Sun 14:38: FPGA: xcVU9P-FLGB2104-2-E
Sun 14:38: Logic utilization:      246397 / 3546720 (6.95%)
Sun 14:38:   LUTs:                  94133 / 1182240 (7.96%)
Sun 14:38:   Primary FFs:          152264 / 2364480 (6.44%)
Sun 14:38: DSP blocks:                144 / 6840    (2.11%)
Sun 14:38: Block memory (BRAM18):    2946 / 4320    (68.19%)
Sun 14:38: Block memory (URAM):       208 / 960     (21.67%)
Sun 14:38: 
Sun 14:38: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Sun 14:38: 
Sun 14:38: PRELIMINARY POWER REPORT
Sun 14:38: Total On-Chip Power (W) 11.45 (budget: 91.80) 
Sun 14:38: Dynamic Power (W)        8.73 
Sun 14:38: Device Static Power(W)   2.72 
Sun 14:38: 
Sun 14:38: (7/15) - Place DFE (VivadoImplementation)
Sun 14:38: Executing the following 10 Implementation Strategies in 4 threads:
Sun 14:38:  - VIVADO_DEFAULT
Sun 14:38:  - MAXELER1
Sun 14:38:  - MAXELER2
Sun 14:38:  - MAXELER3
Sun 14:38:  - MAXELER4
Sun 14:38:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Sun 14:38:  - PERFORMANCE_EXPLORE
Sun 14:38:  - PERFORMANCE_EXTRA_TIMING_OPT
Sun 14:38:  - PERFORMANCE_NET_DELAY_HIGH
Sun 14:38:  - PERFORMANCE_REFINE_PLACEMENT
Sun 16:13: Implementation: Strategy "MAXELER2" met timing with score 0 (best score 0)
Sun 16:14: Implementation: Strategy "MAXELER1" was cancelled (no timing score)
Sun 16:14: Implementation: Strategy "VIVADO_DEFAULT" was cancelled (no timing score)
Sun 16:14: Implementation: Strategy "MAXELER3" was cancelled (no timing score)
Sun 16:14: (8/15) - Generate Resource Report (VivadoResourceUsage)
Sun 16:14: (9/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Sun 16:14: (10/15) - Analyse Power Usage (FinalVivadoReportPower)
Sun 16:14: 
Sun 16:14: FINAL POWER REPORT
Sun 16:14: Total On-Chip Power (W) 13.20 (budget: 91.80) 
Sun 16:14: Dynamic Power (W)       10.45 
Sun 16:14: Device Static Power(W)   2.75 
Sun 16:14: 
Sun 16:14: (11/15) - Generate Configuration (VivadoBitgen)
Sun 16:24: (12/15) - Update Checksum (VivadoUpdateChecksum)
Sun 16:27: (13/15) - Convert Programming File (VivadoCfgfileGen)
Sun 16:28: (14/15) - Generate MaxFile (VivadoGenerateMaxFile)
Sun 16:28: (15/15) - Clean Build Directory (VivadoCleanBuildDirectory)
Sun 16:28: 
Sun 16:28: FINAL RESOURCE USAGE
Sun 16:28: FPGA: xcVU9P-FLGB2104-2-E
Sun 16:28: Logic utilization:      225496 / 3546720 (6.36%)
Sun 16:28:   LUTs:                  83117 / 1182240 (7.03%)
Sun 16:28:   Primary FFs:          142379 / 2364480 (6.02%)
Sun 16:28: DSP blocks:                134 / 6840    (1.96%)
Sun 16:28: Block memory (BRAM18):    2946 / 4320    (68.19%)
Sun 16:28: Block memory (URAM):       208 / 960     (21.67%)
Sun 16:28: 
Sun 16:28: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max (MD5Sum: e7e6bb1357e8037e96363ef9acc48f1b)
Sun 16:28: Build completed: Sun Dec 26 16:28:18 GMT 2021 (took 3 hours, 50 mins, 59 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Maxfiles.h
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A_backup.max
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.h
rm /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max
mv /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A_backup.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/../scratch/Resnet50A.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.h
# cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/../scratch/Resnet50A.max /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max
# rm -rf /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/../scratch
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max Resnet50A_FREQ_300_dfe.o
Processing maxfile for MAX5_LIMA from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_6548850837270465540/cobject/max_7387731480386585164.c -o /tmp/sliccompile_6548850837270465540/cobject/max_7387731480386585164.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results/Resnet50A.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_1930827649043061428.o 
ld -r /tmp/sliccompile_6548850837270465540/cobject/max_7387731480386585164.c.o max_1930827649043061428.o -o Resnet50A_FREQ_300_dfe.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/test/build/resnet_50_a'
g++ ../../src/resnet_50_a/Resnet50ACpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet50A_MAIA_DFE_FREQ_300/results -DDESIGN_NAME=Resnet50A -c -o Resnet50A_FREQ_300_dfec.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_   -o Resnet50A_FREQ_300_dfe Resnet50A_FREQ_300_dfe.o Resnet50A_FREQ_300_dfec.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
