Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=mobilenet_v2_onnx_manual_1 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 32768 MobilenetV2OnnxManual1Manager \
	DFEModel=MAIA maxFileName=MobilenetV2OnnxManual1 target='DFE' enableMPCX=false \
	FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/mobilenet_v2_onnx_manual_1/data/data-mobilenet_v2_onnx-manual_1.txt 
]0; maxJavaRun: MobilenetV2OnnxManual1Manager DFEModel=MAIA maxFileName=MobilenetV2OnnxManual1 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/mobilenet_v2_onnx_manual_1/data/data-mobilenet_v2_onnx-manual_1.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : mobilenet_v2_onnx_manual_1
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : mobilenet_v2_onnx_manual_1.MobilenetV2OnnxManual1Manager
Class arguments     : DFEModel=MAIA maxFileName=MobilenetV2OnnxManual1 target=DFE enableMPCX=false FREQ=200 DEBUG=false COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/mobilenet_v2_onnx_manual_1/data/data-mobilenet_v2_onnx-manual_1.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 32768 MB
----------------------------------------------------------

Thu 13:14: MaxCompiler version: 2021.1
Thu 13:14: Build "MobilenetV2OnnxManual1" start time: Thu Dec 30 13:14:05 GMT 2021
Thu 13:14: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Thu 13:14: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/MobilenetV2OnnxManual1_MAIA_DFE_FREQ_200
Thu 13:14: Detailed build log available in "_build.log"
Thu 13:14: 
Thu 13:14: ENGINE BUILD PARAMETERS
Thu 13:14: 	              Build name: MobilenetV2OnnxManual1_MAIA_DFE_FREQ_200                                                                                   
Thu 13:14: 	             maxFileName: MobilenetV2OnnxManual1                                                                                                     
Thu 13:14: 	                  target: DFE                                                                                                                        
Thu 13:14: 	                DFEModel: MAIA                                                                                                                       
Thu 13:14: 	              enableMPCX: false                                                                                                                      
Thu 13:14: 	                bitWidth: 32                                                                                                                         
Thu 13:14: 	                     WBW: 32                                                                                                                         
Thu 13:14: 	                   DTYPE: fixed                                                                                                                      
Thu 13:14: 	           NUM_FRAC_BITS: 8                                                                                                                          
Thu 13:14: 	                      PF: 1                                                                                                                          
Thu 13:14: 	                      PC: 1                                                                                                                          
Thu 13:14: 	                      PK: 1                                                                                                                          
Thu 13:14: 	                       H: 1                                                                                                                          
Thu 13:14: 	                       W: 1                                                                                                                          
Thu 13:14: 	                       C: 1                                                                                                                          
Thu 13:14: 	                       F: 1                                                                                                                          
Thu 13:14: 	                       K: 1                                                                                                                          
Thu 13:14: 	                     PAD: 0                                                                                                                          
Thu 13:14: 	                       S: 1                                                                                                                          
Thu 13:14: 	                     SEQ: 0                                                                                                                          
Thu 13:14: 	                    FREQ: 200                                                                                                                        
Thu 13:14: 	                USE_DRAM: false                                                                                                                      
Thu 13:14: 	                 USE_BNN: false                                                                                                                      
Thu 13:14: 	            USE_WINOGRAD: false                                                                                                                      
Thu 13:14: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                      
Thu 13:14: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                          
Thu 13:14: 	                   DEBUG: false                                                                                                                      
Thu 13:14: 	           COEFF_ON_CHIP: false                                                                                                                      
Thu 13:14: 	              INIT_COEFF: false                                                                                                                      
Thu 13:14: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/mobilenet_v2_onnx_manual_1/data/data-mobilenet_v2_onnx-manual_1.txt
Thu 13:14: Generating kernel conv0 ...
Thu 13:14: Instantiating kernel "conv0"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 224, output height = 224, pad = 1
Thu 13:14: Counter H = 226 W = 226
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 262144 x 1
Thu 13:14: loop = false
Thu 13:14: Building line buffer for "conv0" ...
Thu 13:14: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 1, output vector size: 9.
Thu 13:14: Number of separated line buffers: 1
Thu 13:14: Initialising line buffer kernel with 3 x 226 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: ROM created for conv0 of depth 24 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2df9b86
Thu 13:14: Building the CORE arithmetic unit for "conv0" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 9
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv0"
Thu 13:14: 
Thu 13:14: Generating kernel conv2 ...
Thu 13:14: Instantiating kernel "conv2"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 112, output height = 112, pad = 1
Thu 13:14: Counter H = 114 W = 114
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv2" ...
Thu 13:14: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 8
Thu 13:14: ROM created for conv2_dw of depth 8 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@c65a5ef
Thu 13:14: Building the CORE arithmetic unit for "conv2_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 16384 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 64
Thu 13:14: ROM created for conv2_pw of depth 64 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@67ef029
Thu 13:14: Building the CORE arithmetic unit for "conv2_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth = 131072 addr_bits =    17
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv2"
Thu 13:14: 
Thu 13:14: Generating kernel conv5 ...
Thu 13:14: Instantiating kernel "conv5"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 112, output height = 112, pad = 0
Thu 13:14: Counter H = 112 W = 112
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 131072 x 2
Thu 13:14: loop = false
Thu 13:14: ROM created for conv5 of depth 96 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@21f8e55f
Thu 13:14: Building the CORE arithmetic unit for "conv5" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 8
Thu 13:14: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv5"
Thu 13:14: 
Thu 13:14: Generating kernel conv7 ...
Thu 13:14: Instantiating kernel "conv7"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 112, output height = 112, pad = 1
Thu 13:14: Counter H = 114 W = 114
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv7" ...
Thu 13:14: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 8, output vector size: 72.
Thu 13:14: Number of separated line buffers: 8
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 114 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 12
Thu 13:14: ROM created for conv7_dw of depth 12 and type {DFEVectorType: 72 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4012d5bc
Thu 13:14: Building the CORE arithmetic unit for "conv7_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 72
Thu 13:14: CORE coefficient vector size: 72
Thu 13:14: CORE ofmap vector size: 8
Thu 13:14: Ifmap buffer configuration 16384 x 8
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 72
Thu 13:14: ROM created for conv7_pw of depth 72 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7b6c6e70
Thu 13:14: Building the CORE arithmetic unit for "conv7_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 8
Thu 13:14: CORE coefficient vector size: 32
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv7"
Thu 13:14: 
Thu 13:14: Generating kernel conv10 ...
Thu 13:14: Instantiating kernel "conv10"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 56, output height = 56, pad = 0
Thu 13:14: Counter H = 56 W = 56
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 32768 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv10 of depth 216 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@51ed2f68
Thu 13:14: Building the CORE arithmetic unit for "conv10" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv10"
Thu 13:14: 
Thu 13:14: Generating kernel conv12 ...
Thu 13:14: Instantiating kernel "conv12"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 56, output height = 56, pad = 1
Thu 13:14: Counter H = 58 W = 58
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv12" ...
Thu 13:14: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 36
Thu 13:14: ROM created for conv12_dw of depth 36 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@38929da
Thu 13:14: Building the CORE arithmetic unit for "conv12_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 216
Thu 13:14: ROM created for conv12_pw of depth 216 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@d1f23a0
Thu 13:14: Building the CORE arithmetic unit for "conv12_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 4096
Thu 13:14: [ConvLayerOfmapBuffer] depth = 32768 addr_bits =    15
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv12"
Thu 13:14: 
Thu 13:14: Generating kernel conv16 ...
Thu 13:14: Instantiating kernel "conv16"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 56, output height = 56, pad = 0
Thu 13:14: Counter H = 56 W = 56
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 32768 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv16 of depth 216 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@637d111d
Thu 13:14: Building the CORE arithmetic unit for "conv16" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv16"
Thu 13:14: 
Thu 13:14: Generating kernel conv18 ...
Thu 13:14: Instantiating kernel "conv18"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 56, output height = 56, pad = 1
Thu 13:14: Counter H = 58 W = 58
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv18" ...
Thu 13:14: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 58 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 36
Thu 13:14: ROM created for conv18_dw of depth 36 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@74919649
Thu 13:14: Building the CORE arithmetic unit for "conv18_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 288
Thu 13:14: ROM created for conv18_pw of depth 288 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@31940d6b
Thu 13:14: Building the CORE arithmetic unit for "conv18_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv18"
Thu 13:14: 
Thu 13:14: Generating kernel conv21 ...
Thu 13:14: Instantiating kernel "conv21"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 0
Thu 13:14: Counter H = 28 W = 28
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 8192 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv21 of depth 768 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@a70daf4
Thu 13:14: Building the CORE arithmetic unit for "conv21" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv21"
Thu 13:14: 
Thu 13:14: Generating kernel conv23 ...
Thu 13:14: Instantiating kernel "conv23"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 1
Thu 13:14: Counter H = 30 W = 30
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv23" ...
Thu 13:14: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 2, output vector size: 18.
Thu 13:14: Number of separated line buffers: 2
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 96
Thu 13:14: ROM created for conv23_dw of depth 96 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@288e50c1
Thu 13:14: Building the CORE arithmetic unit for "conv23_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 18
Thu 13:14: CORE coefficient vector size: 18
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: Ifmap buffer configuration 1024 x 2
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 768
Thu 13:14: ROM created for conv23_pw of depth 768 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2d732cda
Thu 13:14: Building the CORE arithmetic unit for "conv23_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 1024
Thu 13:14: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv23"
Thu 13:14: 
Thu 13:14: Generating kernel conv27 ...
Thu 13:14: Instantiating kernel "conv27"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 0
Thu 13:14: Counter H = 28 W = 28
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 8192 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv27 of depth 768 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1cafb30
Thu 13:14: Building the CORE arithmetic unit for "conv27" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv27"
Thu 13:14: 
Thu 13:14: Generating kernel conv29 ...
Thu 13:14: Instantiating kernel "conv29"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 1
Thu 13:14: Counter H = 30 W = 30
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv29" ...
Thu 13:14: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 2, output vector size: 18.
Thu 13:14: Number of separated line buffers: 2
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 96
Thu 13:14: ROM created for conv29_dw of depth 96 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@121fe002
Thu 13:14: Building the CORE arithmetic unit for "conv29_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 18
Thu 13:14: CORE coefficient vector size: 18
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: Ifmap buffer configuration 1024 x 2
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 768
Thu 13:14: ROM created for conv29_pw of depth 768 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@ae4a043
Thu 13:14: Building the CORE arithmetic unit for "conv29_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 1024
Thu 13:14: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv29"
Thu 13:14: 
Thu 13:14: Generating kernel conv33 ...
Thu 13:14: Instantiating kernel "conv33"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 0
Thu 13:14: Counter H = 28 W = 28
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 8192 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv33 of depth 384 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@33c6c4f
Thu 13:14: Building the CORE arithmetic unit for "conv33" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv33"
Thu 13:14: 
Thu 13:14: Generating kernel conv35 ...
Thu 13:14: Instantiating kernel "conv35"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 28, output height = 28, pad = 1
Thu 13:14: Counter H = 30 W = 30
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv35" ...
Thu 13:14: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 30 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 48
Thu 13:14: ROM created for conv35_dw of depth 48 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7c2b858d
Thu 13:14: Building the CORE arithmetic unit for "conv35_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 1024 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 768
Thu 13:14: ROM created for conv35_pw of depth 768 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@32089590
Thu 13:14: Building the CORE arithmetic unit for "conv35_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv35"
Thu 13:14: 
Thu 13:14: Generating kernel conv38 ...
Thu 13:14: Instantiating kernel "conv38"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv38 of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@355c2b72
Thu 13:14: Building the CORE arithmetic unit for "conv38" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv38"
Thu 13:14: 
Thu 13:14: Generating kernel conv40 ...
Thu 13:14: Instantiating kernel "conv40"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv40" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 96
Thu 13:14: ROM created for conv40_dw of depth 96 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@cce77c8
Thu 13:14: Building the CORE arithmetic unit for "conv40_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 256 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 1536
Thu 13:14: ROM created for conv40_pw of depth 1536 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@46306e5f
Thu 13:14: Building the CORE arithmetic unit for "conv40_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 256
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv40"
Thu 13:14: 
Thu 13:14: Generating kernel conv44 ...
Thu 13:14: Instantiating kernel "conv44"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv44 of depth 3072 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@c634247
Thu 13:14: Building the CORE arithmetic unit for "conv44" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv44"
Thu 13:14: 
Thu 13:14: Generating kernel conv46 ...
Thu 13:14: Instantiating kernel "conv46"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv46" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 2, output vector size: 18.
Thu 13:14: Number of separated line buffers: 2
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 192
Thu 13:14: ROM created for conv46_dw of depth 192 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@12cea099
Thu 13:14: Building the CORE arithmetic unit for "conv46_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 18
Thu 13:14: CORE coefficient vector size: 18
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: Ifmap buffer configuration 256 x 2
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 3072
Thu 13:14: ROM created for conv46_pw of depth 3072 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1f116973
Thu 13:14: Building the CORE arithmetic unit for "conv46_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 256
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv46"
Thu 13:14: 
Thu 13:14: Generating kernel conv50 ...
Thu 13:14: Instantiating kernel "conv50"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv50 of depth 3072 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@42bd5540
Thu 13:14: Building the CORE arithmetic unit for "conv50" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv50"
Thu 13:14: 
Thu 13:14: Generating kernel conv52 ...
Thu 13:14: Instantiating kernel "conv52"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv52" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 2, output vector size: 18.
Thu 13:14: Number of separated line buffers: 2
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 192
Thu 13:14: ROM created for conv52_dw of depth 192 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1fb81254
Thu 13:14: Building the CORE arithmetic unit for "conv52_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 18
Thu 13:14: CORE coefficient vector size: 18
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: Ifmap buffer configuration 256 x 2
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 3072
Thu 13:14: ROM created for conv52_pw of depth 3072 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@704091b4
Thu 13:14: Building the CORE arithmetic unit for "conv52_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 256
Thu 13:14: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv52"
Thu 13:14: 
Thu 13:14: Generating kernel conv56 ...
Thu 13:14: Instantiating kernel "conv56"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 4096 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv56 of depth 3072 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@524105bc
Thu 13:14: Building the CORE arithmetic unit for "conv56" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv56"
Thu 13:14: 
Thu 13:14: Generating kernel conv58 ...
Thu 13:14: Instantiating kernel "conv58"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv58" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 2, output vector size: 18.
Thu 13:14: Number of separated line buffers: 2
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 192
Thu 13:14: ROM created for conv58_dw of depth 192 and type {DFEVectorType: 18 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@a471163
Thu 13:14: Building the CORE arithmetic unit for "conv58_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 18
Thu 13:14: CORE coefficient vector size: 18
Thu 13:14: CORE ofmap vector size: 2
Thu 13:14: Ifmap buffer configuration 256 x 2
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 4608
Thu 13:14: ROM created for conv58_pw of depth 4608 and type {DFEVectorType: 8 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7649dcbd
Thu 13:14: Building the CORE arithmetic unit for "conv58_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 2
Thu 13:14: CORE coefficient vector size: 8
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv58"
Thu 13:14: 
Thu 13:14: Generating kernel conv61 ...
Thu 13:14: Instantiating kernel "conv61"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 8192 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv61 of depth 3456 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@18bbcce8
Thu 13:14: Building the CORE arithmetic unit for "conv61" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv61"
Thu 13:14: 
Thu 13:14: Generating kernel conv63 ...
Thu 13:14: Instantiating kernel "conv63"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv63" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 144
Thu 13:14: ROM created for conv63_dw of depth 144 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@16b7a00a
Thu 13:14: Building the CORE arithmetic unit for "conv63_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 256 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 3456
Thu 13:14: ROM created for conv63_pw of depth 3456 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@54310ed3
Thu 13:14: Building the CORE arithmetic unit for "conv63_pw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Residual buffer depth = 256
Thu 13:14: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Compiling kernel "conv63"
Thu 13:14: 
Thu 13:14: Generating kernel conv67 ...
Thu 13:14: Instantiating kernel "conv67"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 0
Thu 13:14: Counter H = 14 W = 14
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Ifmap buffer configuration 8192 x 4
Thu 13:14: loop = false
Thu 13:14: ROM created for conv67 of depth 3456 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@76518f6b
Thu 13:14: Building the CORE arithmetic unit for "conv67" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 4
Thu 13:14: CORE coefficient vector size: 16
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:14: Connecting to output: ofmap
Thu 13:14: Connecting to output: ofmap_1
Thu 13:14: Compiling kernel "conv67"
Thu 13:14: 
Thu 13:14: Generating kernel conv69 ...
Thu 13:14: Instantiating kernel "conv69"
Thu 13:14: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: coeffOnChip = true
Thu 13:14: Input height = 14, output height = 14, pad = 1
Thu 13:14: Counter H = 16 W = 16
Thu 13:14: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:14: Building line buffer for "conv69" ...
Thu 13:14: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:14: Line buffer input vector size: 4, output vector size: 36.
Thu 13:14: Number of separated line buffers: 4
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:14: Size of line buffer output: 3
Thu 13:14: Number of line buffer output chunks: 3
Thu 13:14: Connecting outputs from chunk (#000) ...
Thu 13:14: Connecting outputs from chunk (#001) ...
Thu 13:14: Connecting outputs from chunk (#002) ...
Thu 13:14: Depthwise coeff ROM depth = 144
Thu 13:14: ROM created for conv69_dw of depth 144 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@766ab334
Thu 13:14: Building the CORE arithmetic unit for "conv69_dw" ...
Thu 13:14: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:14: CORE ifmap vector size: 36
Thu 13:14: CORE coefficient vector size: 36
Thu 13:14: CORE ofmap vector size: 4
Thu 13:14: Ifmap buffer configuration 256 x 4
Thu 13:14: loop = false
Thu 13:14: Pointwise coeff ROM depth = 3456
Thu 13:15: ROM created for conv69_pw of depth 3456 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@38527a68
Thu 13:15: Building the CORE arithmetic unit for "conv69_pw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 16
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: Residual buffer depth = 256
Thu 13:15: [ConvLayerOfmapBuffer] depth =  8192 addr_bits =    13
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv69"
Thu 13:15: 
Thu 13:15: Generating kernel conv73 ...
Thu 13:15: Instantiating kernel "conv73"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 14, output height = 14, pad = 0
Thu 13:15: Counter H = 14 W = 14
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Ifmap buffer configuration 8192 x 4
Thu 13:15: loop = false
Thu 13:15: ROM created for conv73 of depth 3456 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@6931e110
Thu 13:15: Building the CORE arithmetic unit for "conv73" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 16
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv73"
Thu 13:15: 
Thu 13:15: Generating kernel conv75 ...
Thu 13:15: Instantiating kernel "conv75"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 14, output height = 14, pad = 1
Thu 13:15: Counter H = 16 W = 16
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Building line buffer for "conv75" ...
Thu 13:15: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Thu 13:15: Line buffer input vector size: 4, output vector size: 36.
Thu 13:15: Number of separated line buffers: 4
Thu 13:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 16 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Depthwise coeff ROM depth = 144
Thu 13:15: ROM created for conv75_dw of depth 144 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@5511d1a
Thu 13:15: Building the CORE arithmetic unit for "conv75_dw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 36
Thu 13:15: CORE coefficient vector size: 36
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: Ifmap buffer configuration 256 x 4
Thu 13:15: loop = false
Thu 13:15: Pointwise coeff ROM depth = 2880
Thu 13:15: ROM created for conv75_pw of depth 2880 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@1ac9a733
Thu 13:15: Building the CORE arithmetic unit for "conv75_pw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 8
Thu 13:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv75"
Thu 13:15: 
Thu 13:15: Generating kernel conv78 ...
Thu 13:15: Instantiating kernel "conv78"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 0
Thu 13:15: Counter H = 7 W = 7
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Ifmap buffer configuration 1024 x 8
Thu 13:15: loop = false
Thu 13:15: ROM created for conv78 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@390d7327
Thu 13:15: Building the CORE arithmetic unit for "conv78" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 8
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Connecting to output: ofmap_1
Thu 13:15: Compiling kernel "conv78"
Thu 13:15: 
Thu 13:15: Generating kernel conv80 ...
Thu 13:15: Instantiating kernel "conv80"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 1
Thu 13:15: Counter H = 9 W = 9
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Building line buffer for "conv80" ...
Thu 13:15: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 13:15: Line buffer input vector size: 4, output vector size: 36.
Thu 13:15: Number of separated line buffers: 4
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Depthwise coeff ROM depth = 240
Thu 13:15: ROM created for conv80_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@48b920e8
Thu 13:15: Building the CORE arithmetic unit for "conv80_dw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 36
Thu 13:15: CORE coefficient vector size: 36
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: Ifmap buffer configuration 128 x 4
Thu 13:15: loop = false
Thu 13:15: Pointwise coeff ROM depth = 4800
Thu 13:15: ROM created for conv80_pw of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@509ab3b0
Thu 13:15: Building the CORE arithmetic unit for "conv80_pw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 8
Thu 13:15: Residual buffer depth = 64
Thu 13:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv80"
Thu 13:15: 
Thu 13:15: Generating kernel conv84 ...
Thu 13:15: Instantiating kernel "conv84"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 0
Thu 13:15: Counter H = 7 W = 7
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Ifmap buffer configuration 1024 x 8
Thu 13:15: loop = false
Thu 13:15: ROM created for conv84 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@147ee167
Thu 13:15: Building the CORE arithmetic unit for "conv84" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 8
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Connecting to output: ofmap_1
Thu 13:15: Compiling kernel "conv84"
Thu 13:15: 
Thu 13:15: Generating kernel conv86 ...
Thu 13:15: Instantiating kernel "conv86"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 1
Thu 13:15: Counter H = 9 W = 9
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Building line buffer for "conv86" ...
Thu 13:15: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 13:15: Line buffer input vector size: 4, output vector size: 36.
Thu 13:15: Number of separated line buffers: 4
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Depthwise coeff ROM depth = 240
Thu 13:15: ROM created for conv86_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@37601c65
Thu 13:15: Building the CORE arithmetic unit for "conv86_dw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 36
Thu 13:15: CORE coefficient vector size: 36
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: Ifmap buffer configuration 128 x 4
Thu 13:15: loop = false
Thu 13:15: Pointwise coeff ROM depth = 4800
Thu 13:15: ROM created for conv86_pw of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@e3eb13a
Thu 13:15: Building the CORE arithmetic unit for "conv86_pw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 8
Thu 13:15: Residual buffer depth = 64
Thu 13:15: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv86"
Thu 13:15: 
Thu 13:15: Generating kernel conv90 ...
Thu 13:15: Instantiating kernel "conv90"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 0
Thu 13:15: Counter H = 7 W = 7
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Ifmap buffer configuration 1024 x 8
Thu 13:15: loop = false
Thu 13:15: ROM created for conv90 of depth 4800 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4e3652b7
Thu 13:15: Building the CORE arithmetic unit for "conv90" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 8
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv90"
Thu 13:15: 
Thu 13:15: Generating kernel conv92 ...
Thu 13:15: Instantiating kernel "conv92"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 1
Thu 13:15: Counter H = 9 W = 9
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Building line buffer for "conv92" ...
Thu 13:15: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Thu 13:15: Line buffer input vector size: 4, output vector size: 36.
Thu 13:15: Number of separated line buffers: 4
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Initialising line buffer kernel with 3 x 9 x 1
Thu 13:15: Size of line buffer output: 3
Thu 13:15: Number of line buffer output chunks: 3
Thu 13:15: Connecting outputs from chunk (#000) ...
Thu 13:15: Connecting outputs from chunk (#001) ...
Thu 13:15: Connecting outputs from chunk (#002) ...
Thu 13:15: Depthwise coeff ROM depth = 240
Thu 13:15: ROM created for conv92_dw of depth 240 and type {DFEVectorType: 36 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@389f0d20
Thu 13:15: Building the CORE arithmetic unit for "conv92_dw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 36
Thu 13:15: CORE coefficient vector size: 36
Thu 13:15: CORE ofmap vector size: 4
Thu 13:15: Ifmap buffer configuration 128 x 4
Thu 13:15: loop = false
Thu 13:15: Pointwise coeff ROM depth = 9600
Thu 13:15: ROM created for conv92_pw of depth 9600 and type {DFEVectorType: 32 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@795d805b
Thu 13:15: Building the CORE arithmetic unit for "conv92_pw" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 4
Thu 13:15: CORE coefficient vector size: 32
Thu 13:15: CORE ofmap vector size: 8
Thu 13:15: [ConvLayerOfmapBuffer] depth =  2048 addr_bits =    11
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv92"
Thu 13:15: 
Thu 13:15: Generating kernel conv95 ...
Thu 13:15: Instantiating kernel "conv95"
Thu 13:15: T = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: coeffOnChip = true
Thu 13:15: Input height = 7, output height = 7, pad = 0
Thu 13:15: Counter H = 7 W = 7
Thu 13:15: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Thu 13:15: Ifmap buffer configuration 2048 x 8
Thu 13:15: loop = false
Thu 13:15: ROM created for conv95 of depth 25600 and type {DFEVectorType: 16 x dfeFix(8, 8, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@686df31b
Thu 13:15: Building the CORE arithmetic unit for "conv95" ...
Thu 13:15: WT = dfeFix(8, 8, TWOSCOMPLEMENT)
Thu 13:15: CORE ifmap vector size: 8
Thu 13:15: CORE coefficient vector size: 16
Thu 13:15: CORE ofmap vector size: 2
Thu 13:15: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Thu 13:15: Connecting to output: ofmap
Thu 13:15: Compiling kernel "conv95"
Thu 13:15: 
Thu 13:15: Generating padding kernels for DRAM access
Thu 13:15: Instantiating kernel "ifmap_unpad"
Thu 13:15: Compiling kernel "ifmap_unpad"
Thu 13:15: 
Thu 13:15: Instantiating kernel "ofmap_pad"
Thu 13:15: Compiling kernel "ofmap_pad"
Thu 13:15: 
Thu 13:15: Setting up stream connections for conv0
Thu 13:15: Setting up stream connections for conv2
Thu 13:15: Connecting ifmap <== conv0: ofmap
Thu 13:15: Setting up stream connections for conv5
Thu 13:15: Connecting ifmap <== conv2: ofmap
Thu 13:15: Setting up stream connections for conv7
Thu 13:15: Connecting ifmap <== conv5: ofmap
Thu 13:15: Setting up stream connections for conv10
Thu 13:15: Connecting ifmap <== conv7: ofmap
Thu 13:15: Setting up stream connections for conv12
Thu 13:15: Connecting ifmap <== conv10: ofmap
Thu 13:15: Setting up stream connections for conv16
Thu 13:15: Connecting ifmap <== conv12: ofmap
Thu 13:15: Setting up stream connections for conv18
Thu 13:15: Connecting ifmap <== conv16: ofmap
Thu 13:15: Setting up stream connections for conv21
Thu 13:15: Connecting ifmap <== conv18: ofmap
Thu 13:15: Setting up stream connections for conv23
Thu 13:15: Connecting ifmap <== conv21: ofmap
Thu 13:15: Setting up stream connections for conv27
Thu 13:15: Connecting ifmap <== conv23: ofmap
Thu 13:15: Setting up stream connections for conv29
Thu 13:15: Connecting ifmap <== conv27: ofmap
Thu 13:15: Setting up stream connections for conv33
Thu 13:15: Connecting ifmap <== conv29: ofmap
Thu 13:15: Setting up stream connections for conv35
Thu 13:15: Connecting ifmap <== conv33: ofmap
Thu 13:15: Setting up stream connections for conv38
Thu 13:15: Connecting ifmap <== conv35: ofmap
Thu 13:15: Setting up stream connections for conv40
Thu 13:15: Connecting ifmap <== conv38: ofmap
Thu 13:15: Setting up stream connections for conv44
Thu 13:15: Connecting ifmap <== conv40: ofmap
Thu 13:15: Setting up stream connections for conv46
Thu 13:15: Connecting ifmap <== conv44: ofmap
Thu 13:15: Setting up stream connections for conv50
Thu 13:15: Connecting ifmap <== conv46: ofmap
Thu 13:15: Setting up stream connections for conv52
Thu 13:15: Connecting ifmap <== conv50: ofmap
Thu 13:15: Setting up stream connections for conv56
Thu 13:15: Connecting ifmap <== conv52: ofmap
Thu 13:15: Setting up stream connections for conv58
Thu 13:15: Connecting ifmap <== conv56: ofmap
Thu 13:15: Setting up stream connections for conv61
Thu 13:15: Connecting ifmap <== conv58: ofmap
Thu 13:15: Setting up stream connections for conv63
Thu 13:15: Connecting ifmap <== conv61: ofmap
Thu 13:15: Setting up stream connections for conv67
Thu 13:15: Connecting ifmap <== conv63: ofmap
Thu 13:15: Setting up stream connections for conv69
Thu 13:15: Connecting ifmap <== conv67: ofmap
Thu 13:15: Setting up stream connections for conv73
Thu 13:15: Connecting ifmap <== conv69: ofmap
Thu 13:15: Setting up stream connections for conv75
Thu 13:15: Connecting ifmap <== conv73: ofmap
Thu 13:15: Setting up stream connections for conv78
Thu 13:15: Connecting ifmap <== conv75: ofmap
Thu 13:15: Setting up stream connections for conv80
Thu 13:15: Connecting ifmap <== conv78: ofmap
Thu 13:15: Setting up stream connections for conv84
Thu 13:15: Connecting ifmap <== conv80: ofmap
Thu 13:15: Setting up stream connections for conv86
Thu 13:15: Connecting ifmap <== conv84: ofmap
Thu 13:15: Setting up stream connections for conv90
Thu 13:15: Connecting ifmap <== conv86: ofmap
Thu 13:15: Setting up stream connections for conv92
Thu 13:15: Connecting ifmap <== conv90: ofmap
Thu 13:15: Setting up stream connections for conv95
Thu 13:15: Connecting ifmap <== conv92: ofmap
Thu 13:15: DRAM will be used to build the design
Thu 13:15: Setup streams for kernel "conv0"
Thu 13:15: # cycles:       1225824
Thu 13:15: # ifmap stream: 150528
Thu 13:15: # ofmap stream: 401408
Thu 13:15: coeff vec size: 36
Thu 13:15: coeff stream bit width: 576
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv2"
Thu 13:15: # cycles:       831744
Thu 13:15: # ifmap stream: 401408
Thu 13:15: # ofmap stream: 200704
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv5"
Thu 13:15: # cycles:       1204224
Thu 13:15: # ifmap stream: 200704
Thu 13:15: # ofmap stream: 1204224
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv7"
Thu 13:15: # cycles:       935712
Thu 13:15: # ifmap stream: 1204224
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 288
Thu 13:15: coeff stream bit width: 4608
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv10"
Thu 13:15: # cycles:       677376
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 451584
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv12"
Thu 13:15: # cycles:       726624
Thu 13:15: # ifmap stream: 451584
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv16"
Thu 13:15: # cycles:       677376
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 451584
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv18"
Thu 13:15: # cycles:       968832
Thu 13:15: # ifmap stream: 451584
Thu 13:15: # ofmap stream: 25088
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv21"
Thu 13:15: # cycles:       602112
Thu 13:15: # ifmap stream: 25088
Thu 13:15: # ofmap stream: 150528
Thu 13:15: coeff vec size: 8
Thu 13:15: coeff stream bit width: 128
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv23"
Thu 13:15: # cycles:       691200
Thu 13:15: # ifmap stream: 150528
Thu 13:15: # ofmap stream: 25088
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv27"
Thu 13:15: # cycles:       602112
Thu 13:15: # ifmap stream: 25088
Thu 13:15: # ofmap stream: 150528
Thu 13:15: coeff vec size: 8
Thu 13:15: coeff stream bit width: 128
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv29"
Thu 13:15: # cycles:       691200
Thu 13:15: # ifmap stream: 150528
Thu 13:15: # ofmap stream: 25088
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv33"
Thu 13:15: # cycles:       301056
Thu 13:15: # ifmap stream: 25088
Thu 13:15: # ofmap stream: 150528
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv35"
Thu 13:15: # cycles:       691200
Thu 13:15: # ifmap stream: 150528
Thu 13:15: # ofmap stream: 12544
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv38"
Thu 13:15: # cycles:       301056
Thu 13:15: # ifmap stream: 12544
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv40"
Thu 13:15: # cycles:       393216
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 12544
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv44"
Thu 13:15: # cycles:       602112
Thu 13:15: # ifmap stream: 12544
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 8
Thu 13:15: coeff stream bit width: 128
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv46"
Thu 13:15: # cycles:       786432
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 12544
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv50"
Thu 13:15: # cycles:       602112
Thu 13:15: # ifmap stream: 12544
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 8
Thu 13:15: coeff stream bit width: 128
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv52"
Thu 13:15: # cycles:       786432
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 12544
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv56"
Thu 13:15: # cycles:       602112
Thu 13:15: # ifmap stream: 12544
Thu 13:15: # ofmap stream: 75264
Thu 13:15: coeff vec size: 8
Thu 13:15: coeff stream bit width: 128
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv58"
Thu 13:15: # cycles:       1179648
Thu 13:15: # ifmap stream: 75264
Thu 13:15: # ofmap stream: 18816
Thu 13:15: coeff vec size: 72
Thu 13:15: coeff stream bit width: 1152
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv61"
Thu 13:15: # cycles:       677376
Thu 13:15: # ifmap stream: 18816
Thu 13:15: # ofmap stream: 112896
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv63"
Thu 13:15: # cycles:       884736
Thu 13:15: # ifmap stream: 112896
Thu 13:15: # ofmap stream: 18816
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv67"
Thu 13:15: # cycles:       677376
Thu 13:15: # ifmap stream: 18816
Thu 13:15: # ofmap stream: 112896
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv69"
Thu 13:15: # cycles:       884736
Thu 13:15: # ifmap stream: 112896
Thu 13:15: # ofmap stream: 18816
Thu 13:15: coeff vec size: 144
Thu 13:15: coeff stream bit width: 2304
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv73"
Thu 13:15: # cycles:       677376
Thu 13:15: # ifmap stream: 18816
Thu 13:15: # ofmap stream: 112896
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv75"
Thu 13:15: # cycles:       737280
Thu 13:15: # ifmap stream: 112896
Thu 13:15: # ofmap stream: 7840
Thu 13:15: coeff vec size: 288
Thu 13:15: coeff stream bit width: 4608
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv78"
Thu 13:15: # cycles:       235200
Thu 13:15: # ifmap stream: 7840
Thu 13:15: # ofmap stream: 47040
Thu 13:15: coeff vec size: 32
Thu 13:15: coeff stream bit width: 512
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv80"
Thu 13:15: # cycles:       388800
Thu 13:15: # ifmap stream: 47040
Thu 13:15: # ofmap stream: 7840
Thu 13:15: coeff vec size: 288
Thu 13:15: coeff stream bit width: 4608
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv84"
Thu 13:15: # cycles:       235200
Thu 13:15: # ifmap stream: 7840
Thu 13:15: # ofmap stream: 47040
Thu 13:15: coeff vec size: 32
Thu 13:15: coeff stream bit width: 512
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv86"
Thu 13:15: # cycles:       388800
Thu 13:15: # ifmap stream: 47040
Thu 13:15: # ofmap stream: 7840
Thu 13:15: coeff vec size: 288
Thu 13:15: coeff stream bit width: 4608
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv90"
Thu 13:15: # cycles:       235200
Thu 13:15: # ifmap stream: 7840
Thu 13:15: # ofmap stream: 47040
Thu 13:15: coeff vec size: 32
Thu 13:15: coeff stream bit width: 512
Thu 13:15: coeff stream chunk size: 1
Thu 13:15: Setup streams for kernel "conv92"
Thu 13:15: # cycles:       777600
Thu 13:15: # ifmap stream: 47040
Thu 13:15: # ofmap stream: 15680
Thu 13:15: coeff vec size: 288
Thu 13:15: coeff stream bit width: 4608
Thu 13:15: coeff stream chunk size: 9
Thu 13:15: Setup streams for kernel "conv95"
Thu 13:15: # cycles:       1254400
Thu 13:15: # ifmap stream: 15680
Thu 13:15: # ofmap stream: 62720
Thu 13:15: coeff vec size: 16
Thu 13:15: coeff stream bit width: 256
Thu 13:15: coeff stream chunk size: 1
Thu 13:16: Generating input files (VHDL, netlists, vendor specific IP cores)
Thu 14:57: Running back-end  build (15 phases)
Thu 14:57: (1/15) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Thu 14:57: (2/15) - Synthesize DFE Modules (VivadoSynth)
Thu 14:57: Executing Synthesis Strategy VIVADO_DEFAULT
Thu 15:28: (3/15) - Generate Resource Report (VivadoResourceUsage)
Thu 15:28: (4/15) - Generate Annotated Source Code (VivadoResourceAnnotation)
Thu 15:29: (5/15) - Analyse Resource Usage (VivadoResourceCounter)
Thu 15:29: 
Thu 15:29: About to start chip vendor Map/Place/Route toolflow. This will take some time.
Thu 15:29: For this compile, we estimate this process may take longer than 1 hour.
Thu 15:29: We recommend running in simulation to verify correctness before building hardware.
Thu 15:29: 
Thu 15:29: PRELIMINARY RESOURCE USAGE
Thu 15:29: FPGA: xcVU9P-FLGB2104-2-E
Thu 15:29: Logic utilization:      375388 / 3546720 (10.58%)
Thu 15:29:   LUTs:                 123068 / 1182240 (10.41%)
Thu 15:29:   Primary FFs:          252320 / 2364480 (10.67%)
Thu 15:29: DSP blocks:               1195 / 6840    (17.47%)
Thu 15:29: Block memory (BRAM18):    3366 / 4320    (77.92%)
Thu 15:29: Block memory (URAM):       195 / 960     (20.31%)
Thu 15:29: 
Thu 15:29: (6/15) - Analyse Power Usage (PreliminaryVivadoReportPower)
Thu 15:29: 
Thu 15:29: PRELIMINARY POWER REPORT
Thu 15:29: Total On-Chip Power (W) 11.27 (budget: 91.80) 
Thu 15:29: Dynamic Power (W)        8.55 
Thu 15:29: Device Static Power(W)   2.72 
Thu 15:29: 
Thu 15:29: (7/15) - Place DFE (VivadoImplementation)
Thu 15:29: Executing the following 10 Implementation Strategies in 4 threads:
Thu 15:29:  - VIVADO_DEFAULT
Thu 15:29:  - MAXELER1
Thu 15:29:  - MAXELER2
Thu 15:29:  - MAXELER3
Thu 15:29:  - MAXELER4
Thu 15:29:  - PERFORMANCE_EARLY_BLOCK_PLACEMENT
Thu 15:29:  - PERFORMANCE_EXPLORE
Thu 15:29:  - PERFORMANCE_EXTRA_TIMING_OPT
Thu 15:29:  - PERFORMANCE_NET_DELAY_HIGH
Thu 15:29:  - PERFORMANCE_REFINE_PLACEMENT
