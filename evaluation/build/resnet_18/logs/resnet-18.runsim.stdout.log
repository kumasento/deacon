BUILD_NAME_OPTION = _FREQ_300_DBG
Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:../../../src:../../../test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=resnet_18 MAXSOURCEDIRS=../../src:../../../src \
	maxJavaRun -v -m 8192 Resnet18Manager \
	DFEModel=MAIA maxFileName=Resnet18 target='DFE_SIM' enableMPCX=false \
	FREQ=300 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/resnet_18/data/data-resnet-18.txt 
]0; maxJavaRun: Resnet18Manager DFEModel=MAIA maxFileName=Resnet18 target=DFE_SIM enableMPCX=false FREQ=300 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/resnet_18/data/data-resnet-18.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:../../../src:../../../test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:../../../src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : resnet_18
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : resnet_18.Resnet18Manager
Class arguments     : DFEModel=MAIA maxFileName=Resnet18 target=DFE_SIM enableMPCX=false FREQ=300 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/resnet_18/data/data-resnet-18.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      ../../../src:
                      ../../../test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Sun 23:45: MaxCompiler version: 2021.1
Sun 23:45: Build "Resnet18" start time: Sun Dec 19 23:45:52 GMT 2021
Sun 23:45: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Sun 23:45: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/Resnet18_MAIA_DFE_SIM_FREQ_300_DBG
Sun 23:45: Detailed build log available in "_build.log"
Sun 23:45: 
Sun 23:45: ENGINE BUILD PARAMETERS
Sun 23:45: 	              Build name: Resnet18_MAIA_DFE_SIM_FREQ_300_DBG                                                       
Sun 23:45: 	             maxFileName: Resnet18                                                                                 
Sun 23:45: 	                  target: DFE_SIM                                                                                  
Sun 23:45: 	                DFEModel: MAIA                                                                                     
Sun 23:45: 	              enableMPCX: false                                                                                    
Sun 23:45: 	                bitWidth: 32                                                                                       
Sun 23:45: 	                     WBW: 32                                                                                       
Sun 23:45: 	                   DTYPE: fixed                                                                                    
Sun 23:45: 	           NUM_FRAC_BITS: 8                                                                                        
Sun 23:45: 	                      PF: 1                                                                                        
Sun 23:45: 	                      PC: 1                                                                                        
Sun 23:45: 	                      PK: 1                                                                                        
Sun 23:45: 	                       H: 1                                                                                        
Sun 23:45: 	                       W: 1                                                                                        
Sun 23:45: 	                       C: 1                                                                                        
Sun 23:45: 	                       F: 1                                                                                        
Sun 23:45: 	                       K: 1                                                                                        
Sun 23:45: 	                     PAD: 0                                                                                        
Sun 23:45: 	                       S: 1                                                                                        
Sun 23:45: 	                     SEQ: 0                                                                                        
Sun 23:45: 	                    FREQ: 300                                                                                      
Sun 23:45: 	                USE_DRAM: false                                                                                    
Sun 23:45: 	                 USE_BNN: false                                                                                    
Sun 23:45: 	            USE_WINOGRAD: false                                                                                    
Sun 23:45: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                    
Sun 23:45: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                        
Sun 23:45: 	                   DEBUG: true                                                                                     
Sun 23:45: 	           COEFF_ON_CHIP: false                                                                                    
Sun 23:45: 	              INIT_COEFF: false                                                                                    
Sun 23:45: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/build/resnet_18/data/data-resnet-18.txt
Sun 23:45: Generating kernel conv0 ...
Sun 23:45: Instantiating kernel "conv0"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 224, output height = 224, pad = 1
Sun 23:45: Counter H = 226 W = 226
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv0
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv0" ...
Sun 23:45: Line buffer shape 3 x 224, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 226 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv0" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth = 16384 addr_bits =    14
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Connecting to output: ofmap_1
Sun 23:45: Compiling kernel "conv0"
Sun 23:45: 
Sun 23:45: Generating kernel conv1 ...
Sun 23:45: Instantiating kernel "conv1"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 112, output height = 112, pad = 1
Sun 23:45: Counter H = 114 W = 114
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv1
Sun 23:45: Ifmap buffer configuration 524288 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv1" ...
Sun 23:45: Line buffer shape 3 x 112, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 114 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv1" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Compiling kernel "conv1"
Sun 23:45: 
Sun 23:45: Generating kernel shortcut1 ...
Sun 23:45: Instantiating kernel "shortcut1"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: Building pointwise convolution:
Sun 23:45: H = 112 W = 112 F = 64 C = 32 PF = 1 PC = 1
Sun 23:45: Seq = FILTER_MAJOR
Sun 23:45: Read for key = shortcut1
Sun 23:45: Ifmap buffer configuration 524288 x 1
Sun 23:45: loop = false
Sun 23:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Compiling kernel "shortcut1"
Sun 23:45: 
Sun 23:45: Generating kernel conv2 ...
Sun 23:45: Instantiating kernel "conv2"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 56, output height = 56, pad = 1
Sun 23:45: Counter H = 58 W = 58
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv2
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv2" ...
Sun 23:45: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 58 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv2" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 23:45: Connecting residual: shortcut1
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Connecting to output: ofmap_1
Sun 23:45: Compiling kernel "conv2"
Sun 23:45: 
Sun 23:45: Generating kernel conv3 ...
Sun 23:45: Instantiating kernel "conv3"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 56, output height = 56, pad = 1
Sun 23:45: Counter H = 58 W = 58
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv3
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv3" ...
Sun 23:45: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 58 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv3" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Compiling kernel "conv3"
Sun 23:45: 
Sun 23:45: Generating kernel conv4 ...
Sun 23:45: Instantiating kernel "conv4"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 56, output height = 56, pad = 1
Sun 23:45: Counter H = 58 W = 58
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv4
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv4" ...
Sun 23:45: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 58 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv4" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  4096 addr_bits =    12
Sun 23:45: Connecting residual: conv2_1
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Connecting to output: ofmap_1
Sun 23:45: Compiling kernel "conv4"
Sun 23:45: 
Sun 23:45: Generating kernel conv5 ...
Sun 23:45: Instantiating kernel "conv5"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 56, output height = 56, pad = 1
Sun 23:45: Counter H = 58 W = 58
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv5
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv5" ...
Sun 23:45: Line buffer shape 3 x 56, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 58 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv5" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Compiling kernel "conv5"
Sun 23:45: 
Sun 23:45: Generating kernel shortcut2 ...
Sun 23:45: Instantiating kernel "shortcut2"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: Building pointwise convolution:
Sun 23:45: H = 56 W = 56 F = 128 C = 64 PF = 1 PC = 1
Sun 23:45: Seq = FILTER_MAJOR
Sun 23:45: Read for key = shortcut2
Sun 23:45: Ifmap buffer configuration 262144 x 1
Sun 23:45: loop = false
Sun 23:45: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Compiling kernel "shortcut2"
Sun 23:45: 
Sun 23:45: Generating kernel conv6 ...
Sun 23:45: Instantiating kernel "conv6"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 28, output height = 28, pad = 1
Sun 23:45: Counter H = 30 W = 30
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv6
Sun 23:45: Ifmap buffer configuration 131072 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv6" ...
Sun 23:45: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 30 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv6" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Sun 23:45: Connecting residual: shortcut2
Sun 23:45: Connecting to output: ofmap
Sun 23:45: Connecting to output: ofmap_1
Sun 23:45: Compiling kernel "conv6"
Sun 23:45: 
Sun 23:45: Generating kernel conv7 ...
Sun 23:45: Instantiating kernel "conv7"
Sun 23:45: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: coeffOnChip = true
Sun 23:45: Input height = 28, output height = 28, pad = 1
Sun 23:45: Counter H = 30 W = 30
Sun 23:45: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:45: Read for key = conv7
Sun 23:45: Ifmap buffer configuration 131072 x 1
Sun 23:45: loop = false
Sun 23:45: Building line buffer for "conv7" ...
Sun 23:45: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Sun 23:45: Line buffer input vector size: 1, output vector size: 9.
Sun 23:45: Number of separated line buffers: 1
Sun 23:45: Initialising line buffer kernel with 3 x 30 x 1
Sun 23:45: Size of line buffer output: 3
Sun 23:45: Number of line buffer output chunks: 3
Sun 23:45: Connecting outputs from chunk (#000) ...
Sun 23:45: Connecting outputs from chunk (#001) ...
Sun 23:45: Connecting outputs from chunk (#002) ...
Sun 23:45: Building the CORE arithmetic unit for "conv7" ...
Sun 23:45: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:45: CORE ifmap vector size: 9
Sun 23:45: CORE coefficient vector size: 9
Sun 23:45: CORE ofmap vector size: 1
Sun 23:45: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "conv7"
Sun 23:46: 
Sun 23:46: Generating kernel conv8 ...
Sun 23:46: Instantiating kernel "conv8"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 28, output height = 28, pad = 1
Sun 23:46: Counter H = 30 W = 30
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv8
Sun 23:46: Ifmap buffer configuration 131072 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv8" ...
Sun 23:46: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 30 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv8" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 9
Sun 23:46: CORE ofmap vector size: 1
Sun 23:46: [ConvLayerOfmapBuffer] depth =  1024 addr_bits =    10
Sun 23:46: Connecting residual: conv6_1
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Connecting to output: ofmap_1
Sun 23:46: Compiling kernel "conv8"
Sun 23:46: 
Sun 23:46: Generating kernel conv9 ...
Sun 23:46: Instantiating kernel "conv9"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 28, output height = 28, pad = 1
Sun 23:46: Counter H = 30 W = 30
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv9
Sun 23:46: Ifmap buffer configuration 131072 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv9" ...
Sun 23:46: Line buffer shape 3 x 28, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 30 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv9" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 9
Sun 23:46: CORE ofmap vector size: 1
Sun 23:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "conv9"
Sun 23:46: 
Sun 23:46: Generating kernel shortcut3 ...
Sun 23:46: Instantiating kernel "shortcut3"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: Building pointwise convolution:
Sun 23:46: H = 28 W = 28 F = 256 C = 128 PF = 1 PC = 1
Sun 23:46: Seq = FILTER_MAJOR
Sun 23:46: Read for key = shortcut3
Sun 23:46: Ifmap buffer configuration 131072 x 1
Sun 23:46: loop = false
Sun 23:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "shortcut3"
Sun 23:46: 
Sun 23:46: Generating kernel conv10 ...
Sun 23:46: Instantiating kernel "conv10"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 14, output height = 14, pad = 1
Sun 23:46: Counter H = 16 W = 16
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv10
Sun 23:46: Ifmap buffer configuration 65536 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv10" ...
Sun 23:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 16 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv10" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 9
Sun 23:46: CORE ofmap vector size: 1
Sun 23:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Sun 23:46: Connecting residual: shortcut3
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Connecting to output: ofmap_1
Sun 23:46: Compiling kernel "conv10"
Sun 23:46: 
Sun 23:46: Generating kernel conv11 ...
Sun 23:46: Instantiating kernel "conv11"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 14, output height = 14, pad = 1
Sun 23:46: Counter H = 16 W = 16
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv11
Sun 23:46: Ifmap buffer configuration 65536 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv11" ...
Sun 23:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 16 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv11" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 9
Sun 23:46: CORE ofmap vector size: 1
Sun 23:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "conv11"
Sun 23:46: 
Sun 23:46: Generating kernel conv12 ...
Sun 23:46: Instantiating kernel "conv12"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 14, output height = 14, pad = 1
Sun 23:46: Counter H = 16 W = 16
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv12
Sun 23:46: Ifmap buffer configuration 65536 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv12" ...
Sun 23:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 16 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv12" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 9
Sun 23:46: CORE ofmap vector size: 1
Sun 23:46: [ConvLayerOfmapBuffer] depth =   256 addr_bits =     8
Sun 23:46: Connecting residual: conv10_1
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Connecting to output: ofmap_1
Sun 23:46: Compiling kernel "conv12"
Sun 23:46: 
Sun 23:46: Generating kernel conv13 ...
Sun 23:46: Instantiating kernel "conv13"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 14, output height = 14, pad = 1
Sun 23:46: Counter H = 16 W = 16
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv13
Sun 23:46: Ifmap buffer configuration 65536 x 1
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv13" ...
Sun 23:46: Line buffer shape 3 x 14, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 1, output vector size: 9.
Sun 23:46: Number of separated line buffers: 1
Sun 23:46: Initialising line buffer kernel with 3 x 16 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv13" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 9
Sun 23:46: CORE coefficient vector size: 36
Sun 23:46: CORE ofmap vector size: 4
Sun 23:46: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "conv13"
Sun 23:46: 
Sun 23:46: Generating kernel shortcut4 ...
Sun 23:46: Instantiating kernel "shortcut4"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: Building pointwise convolution:
Sun 23:46: H = 14 W = 14 F = 512 C = 256 PF = 4 PC = 1
Sun 23:46: Seq = FILTER_MAJOR
Sun 23:46: Read for key = shortcut4
Sun 23:46: Ifmap buffer configuration 65536 x 1
Sun 23:46: loop = false
Sun 23:46: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "shortcut4"
Sun 23:46: 
Sun 23:46: Generating kernel conv14 ...
Sun 23:46: Instantiating kernel "conv14"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 7, output height = 7, pad = 1
Sun 23:46: Counter H = 9 W = 9
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv14
Sun 23:46: Ifmap buffer configuration 16384 x 4
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv14" ...
Sun 23:46: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 4, output vector size: 36.
Sun 23:46: Number of separated line buffers: 4
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv14" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 36
Sun 23:46: CORE coefficient vector size: 144
Sun 23:46: CORE ofmap vector size: 4
Sun 23:46: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Sun 23:46: Connecting residual: shortcut4
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Connecting to output: ofmap_1
Sun 23:46: Compiling kernel "conv14"
Sun 23:46: 
Sun 23:46: Generating kernel conv15 ...
Sun 23:46: Instantiating kernel "conv15"
Sun 23:46: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: coeffOnChip = true
Sun 23:46: Input height = 7, output height = 7, pad = 1
Sun 23:46: Counter H = 9 W = 9
Sun 23:46: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:46: Read for key = conv15
Sun 23:46: Ifmap buffer configuration 16384 x 4
Sun 23:46: loop = false
Sun 23:46: Building line buffer for "conv15" ...
Sun 23:46: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Sun 23:46: Line buffer input vector size: 4, output vector size: 36.
Sun 23:46: Number of separated line buffers: 4
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:46: Size of line buffer output: 3
Sun 23:46: Number of line buffer output chunks: 3
Sun 23:46: Connecting outputs from chunk (#000) ...
Sun 23:46: Connecting outputs from chunk (#001) ...
Sun 23:46: Connecting outputs from chunk (#002) ...
Sun 23:46: Building the CORE arithmetic unit for "conv15" ...
Sun 23:46: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:46: CORE ifmap vector size: 36
Sun 23:46: CORE coefficient vector size: 144
Sun 23:46: CORE ofmap vector size: 4
Sun 23:46: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Sun 23:46: Connecting to output: ofmap
Sun 23:46: Compiling kernel "conv15"
Sun 23:47: 
Sun 23:47: Generating kernel conv16 ...
Sun 23:47: Instantiating kernel "conv16"
Sun 23:47: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:47: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:47: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:47: coeffOnChip = true
Sun 23:47: Input height = 7, output height = 7, pad = 1
Sun 23:47: Counter H = 9 W = 9
Sun 23:47: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:47: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Sun 23:47: Read for key = conv16
Sun 23:47: Ifmap buffer configuration 16384 x 4
Sun 23:47: loop = false
Sun 23:47: Building line buffer for "conv16" ...
Sun 23:47: Line buffer shape 3 x 7, produces 1 number of 3 x 3 tiles per cycle
Sun 23:47: Line buffer input vector size: 4, output vector size: 36.
Sun 23:47: Number of separated line buffers: 4
Sun 23:47: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:47: Size of line buffer output: 3
Sun 23:47: Number of line buffer output chunks: 3
Sun 23:47: Connecting outputs from chunk (#000) ...
Sun 23:47: Connecting outputs from chunk (#001) ...
Sun 23:47: Connecting outputs from chunk (#002) ...
Sun 23:47: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:47: Size of line buffer output: 3
Sun 23:47: Number of line buffer output chunks: 3
Sun 23:47: Connecting outputs from chunk (#000) ...
Sun 23:47: Connecting outputs from chunk (#001) ...
Sun 23:47: Connecting outputs from chunk (#002) ...
Sun 23:47: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:47: Size of line buffer output: 3
Sun 23:47: Number of line buffer output chunks: 3
Sun 23:47: Connecting outputs from chunk (#000) ...
Sun 23:47: Connecting outputs from chunk (#001) ...
Sun 23:47: Connecting outputs from chunk (#002) ...
Sun 23:47: Initialising line buffer kernel with 3 x 9 x 1
Sun 23:47: Size of line buffer output: 3
Sun 23:47: Number of line buffer output chunks: 3
Sun 23:47: Connecting outputs from chunk (#000) ...
Sun 23:47: Connecting outputs from chunk (#001) ...
Sun 23:47: Connecting outputs from chunk (#002) ...
Sun 23:47: Building the CORE arithmetic unit for "conv16" ...
Sun 23:47: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Sun 23:47: CORE ifmap vector size: 36
Sun 23:47: CORE coefficient vector size: 144
Sun 23:47: CORE ofmap vector size: 4
Sun 23:47: [ConvLayerOfmapBuffer] depth =    64 addr_bits =     6
Sun 23:47: Connecting residual: conv14_1
Sun 23:47: Connecting to output: ofmap
Sun 23:47: Compiling kernel "conv16"
Sun 23:47: 
Sun 23:47: Generating padding kernels for DRAM access
Sun 23:47: Instantiating kernel "ifmap_unpad"
Sun 23:47: Compiling kernel "ifmap_unpad"
Sun 23:47: 
Sun 23:47: Instantiating kernel "ofmap_pad"
Sun 23:47: Compiling kernel "ofmap_pad"
Sun 23:47: 
Sun 23:47: Setting up stream connections for conv0
Sun 23:47: Setting up stream connections for conv1
Sun 23:47: Setting up stream connections for shortcut1
Sun 23:47: Setting up stream connections for conv2
Sun 23:47: Setting up stream connections for conv3
Sun 23:47: Setting up stream connections for conv4
Sun 23:47: Setting up stream connections for conv5
Sun 23:47: Setting up stream connections for shortcut2
Sun 23:47: Setting up stream connections for conv6
Sun 23:47: Setting up stream connections for conv7
Sun 23:47: Setting up stream connections for conv8
Sun 23:47: Setting up stream connections for conv9
Sun 23:47: Setting up stream connections for shortcut3
Sun 23:47: Setting up stream connections for conv10
Sun 23:47: Setting up stream connections for conv11
Sun 23:47: Setting up stream connections for conv12
Sun 23:47: Setting up stream connections for conv13
Sun 23:47: Setting up stream connections for shortcut4
Sun 23:47: Setting up stream connections for conv14
Sun 23:47: Setting up stream connections for conv15
Sun 23:47: Setting up stream connections for conv16
Sun 23:47: DRAM will be used to build the design
Sun 23:47: Setup streams for kernel "conv0"
Sun 23:47: # cycles:       9806592
Sun 23:47: # ifmap stream: 150528
Sun 23:47: # coeff stream: 1728
Sun 23:47: # ofmap stream: 802816
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv1"
Sun 23:47: # cycles:       26615808
Sun 23:47: # ifmap stream: 401408
Sun 23:47: # coeff stream: 18432
Sun 23:47: # ofmap stream: 200704
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "shortcut1"
Sun 23:47: # cycles:       25690112
Sun 23:47: # ifmap stream: 401408
Sun 23:47: # coeff stream: 2048
Sun 23:47: # ofmap stream: 200704
Sun 23:47: coeff vec size: 1
Sun 23:47: coeff stream bit width: 8
Sun 23:47: coeff stream chunk size: 1
Sun 23:47: Setup streams for kernel "conv2"
Sun 23:47: # cycles:       13778944
Sun 23:47: # ifmap stream: 200704
Sun 23:47: # coeff stream: 36864
Sun 23:47: # ofmap stream: 200704
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv3"
Sun 23:47: # cycles:       13778944
Sun 23:47: # ifmap stream: 200704
Sun 23:47: # coeff stream: 36864
Sun 23:47: # ofmap stream: 200704
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv4"
Sun 23:47: # cycles:       13778944
Sun 23:47: # ifmap stream: 200704
Sun 23:47: # coeff stream: 36864
Sun 23:47: # ofmap stream: 200704
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv5"
Sun 23:47: # cycles:       27557888
Sun 23:47: # ifmap stream: 200704
Sun 23:47: # coeff stream: 73728
Sun 23:47: # ofmap stream: 100352
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "shortcut2"
Sun 23:47: # cycles:       25690112
Sun 23:47: # ifmap stream: 200704
Sun 23:47: # coeff stream: 8192
Sun 23:47: # ofmap stream: 100352
Sun 23:47: coeff vec size: 1
Sun 23:47: coeff stream bit width: 8
Sun 23:47: coeff stream chunk size: 1
Sun 23:47: Setup streams for kernel "conv6"
Sun 23:47: # cycles:       14745600
Sun 23:47: # ifmap stream: 100352
Sun 23:47: # coeff stream: 147456
Sun 23:47: # ofmap stream: 100352
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv7"
Sun 23:47: # cycles:       14745600
Sun 23:47: # ifmap stream: 100352
Sun 23:47: # coeff stream: 147456
Sun 23:47: # ofmap stream: 100352
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv8"
Sun 23:47: # cycles:       14745600
Sun 23:47: # ifmap stream: 100352
Sun 23:47: # coeff stream: 147456
Sun 23:47: # ofmap stream: 100352
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv9"
Sun 23:47: # cycles:       29491200
Sun 23:47: # ifmap stream: 100352
Sun 23:47: # coeff stream: 294912
Sun 23:47: # ofmap stream: 50176
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "shortcut3"
Sun 23:47: # cycles:       25690112
Sun 23:47: # ifmap stream: 100352
Sun 23:47: # coeff stream: 32768
Sun 23:47: # ofmap stream: 50176
Sun 23:47: coeff vec size: 1
Sun 23:47: coeff stream bit width: 8
Sun 23:47: coeff stream chunk size: 1
Sun 23:47: Setup streams for kernel "conv10"
Sun 23:47: # cycles:       16777216
Sun 23:47: # ifmap stream: 50176
Sun 23:47: # coeff stream: 589824
Sun 23:47: # ofmap stream: 50176
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv11"
Sun 23:47: # cycles:       16777216
Sun 23:47: # ifmap stream: 50176
Sun 23:47: # coeff stream: 589824
Sun 23:47: # ofmap stream: 50176
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv12"
Sun 23:47: # cycles:       16777216
Sun 23:47: # ifmap stream: 50176
Sun 23:47: # coeff stream: 589824
Sun 23:47: # ofmap stream: 50176
Sun 23:47: coeff vec size: 9
Sun 23:47: coeff stream bit width: 72
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv13"
Sun 23:47: # cycles:       8388608
Sun 23:47: # ifmap stream: 50176
Sun 23:47: # coeff stream: 1179648
Sun 23:47: # ofmap stream: 25088
Sun 23:47: coeff vec size: 36
Sun 23:47: coeff stream bit width: 288
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "shortcut4"
Sun 23:47: # cycles:       6422528
Sun 23:47: # ifmap stream: 50176
Sun 23:47: # coeff stream: 131072
Sun 23:47: # ofmap stream: 25088
Sun 23:47: coeff vec size: 4
Sun 23:47: coeff stream bit width: 32
Sun 23:47: coeff stream chunk size: 1
Sun 23:47: Setup streams for kernel "conv14"
Sun 23:47: # cycles:       1327104
Sun 23:47: # ifmap stream: 25088
Sun 23:47: # coeff stream: 2359296
Sun 23:47: # ofmap stream: 25088
Sun 23:47: coeff vec size: 144
Sun 23:47: coeff stream bit width: 1152
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv15"
Sun 23:47: # cycles:       1327104
Sun 23:47: # ifmap stream: 25088
Sun 23:47: # coeff stream: 2359296
Sun 23:47: # ofmap stream: 25088
Sun 23:47: coeff vec size: 144
Sun 23:47: coeff stream bit width: 1152
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Setup streams for kernel "conv16"
Sun 23:47: # cycles:       1327104
Sun 23:47: # ifmap stream: 25088
Sun 23:47: # coeff stream: 2359296
Sun 23:47: # ofmap stream: 25088
Sun 23:47: coeff vec size: 144
Sun 23:47: coeff stream bit width: 1152
Sun 23:47: coeff stream chunk size: 9
Sun 23:47: Running back-end simulation build (3 phases)
Sun 23:47: (1/3) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Sun 23:47: (2/3) - Compile Simulation Modules (SimCompilePass)
