BUILD_NAME_OPTION = _FREQ_350_DBG
Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=bottleneck_shortcut_imbalanced MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 16384 BottleneckShortcutImbalancedManager \
	DFEModel=MAIA maxFileName=BottleneckShortcutImbalanced target='DFE_SIM' enableMPCX=false \
	FREQ=350 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced/data/data-bottleneck-shortcut-imbalanced.txt 
]0; maxJavaRun: BottleneckShortcutImbalancedManager DFEModel=MAIA maxFileName=BottleneckShortcutImbalanced target=DFE_SIM enableMPCX=false FREQ=350 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced/data/data-bottleneck-shortcut-imbalanced.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : bottleneck_shortcut_imbalanced
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : bottleneck_shortcut_imbalanced.BottleneckShortcutImbalancedManager
Class arguments     : DFEModel=MAIA maxFileName=BottleneckShortcutImbalanced target=DFE_SIM enableMPCX=false FREQ=350 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced/data/data-bottleneck-shortcut-imbalanced.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 16384 MB
----------------------------------------------------------

Wed 19:18: MaxCompiler version: 2021.1
Wed 19:18: Build "BottleneckShortcutImbalanced" start time: Wed Dec 29 19:18:27 GMT 2021
Wed 19:18: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Wed 19:18: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG
Wed 19:18: Detailed build log available in "_build.log"
Wed 19:18: 
Wed 19:18: ENGINE BUILD PARAMETERS
Wed 19:18: 	              Build name: BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG                                                                                      
Wed 19:18: 	             maxFileName: BottleneckShortcutImbalanced                                                                                                                
Wed 19:18: 	                  target: DFE_SIM                                                                                                                                     
Wed 19:18: 	                DFEModel: MAIA                                                                                                                                        
Wed 19:18: 	              enableMPCX: false                                                                                                                                       
Wed 19:18: 	                bitWidth: 32                                                                                                                                          
Wed 19:18: 	                     WBW: 32                                                                                                                                          
Wed 19:18: 	                   DTYPE: fixed                                                                                                                                       
Wed 19:18: 	           NUM_FRAC_BITS: 8                                                                                                                                           
Wed 19:18: 	                      PF: 1                                                                                                                                           
Wed 19:18: 	                      PC: 1                                                                                                                                           
Wed 19:18: 	                      PK: 1                                                                                                                                           
Wed 19:18: 	                       H: 1                                                                                                                                           
Wed 19:18: 	                       W: 1                                                                                                                                           
Wed 19:18: 	                       C: 1                                                                                                                                           
Wed 19:18: 	                       F: 1                                                                                                                                           
Wed 19:18: 	                       K: 1                                                                                                                                           
Wed 19:18: 	                     PAD: 0                                                                                                                                           
Wed 19:18: 	                       S: 1                                                                                                                                           
Wed 19:18: 	                     SEQ: 0                                                                                                                                           
Wed 19:18: 	                    FREQ: 350                                                                                                                                         
Wed 19:18: 	                USE_DRAM: false                                                                                                                                       
Wed 19:18: 	                 USE_BNN: false                                                                                                                                       
Wed 19:18: 	            USE_WINOGRAD: false                                                                                                                                       
Wed 19:18: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                                       
Wed 19:18: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                                           
Wed 19:18: 	                   DEBUG: true                                                                                                                                        
Wed 19:18: 	           COEFF_ON_CHIP: false                                                                                                                                       
Wed 19:18: 	              INIT_COEFF: false                                                                                                                                       
Wed 19:18: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced/data/data-bottleneck-shortcut-imbalanced.txt
Wed 19:18: Generating kernel conv0 ...
Wed 19:18: Instantiating kernel "conv0"
Wed 19:18: T = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: coeffOnChip = true
Wed 19:18: Input height = 4, output height = 4, pad = 0
Wed 19:18: Counter H = 4 W = 4
Wed 19:18: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: Ifmap buffer configuration 32 x 2
Wed 19:18: loop = false
Wed 19:18: ROM created for conv0 of depth 4 and type {DFEVectorType: 2 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@568ff82
Wed 19:18: Building the CORE arithmetic unit for "conv0" ...
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: CORE ifmap vector size: 2
Wed 19:18: CORE coefficient vector size: 2
Wed 19:18: CORE ofmap vector size: 1
Wed 19:18: [ConvLayerOfmapBuffer] depth =     4 addr_bits =     2
Wed 19:18: Connecting to output: ofmap
Wed 19:18: Connecting to output: ofmap_1
Wed 19:18: Compiling kernel "conv0"
Wed 19:18: 
Wed 19:18: Generating kernel conv1 ...
Wed 19:18: Instantiating kernel "conv1"
Wed 19:18: T = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: coeffOnChip = true
Wed 19:18: Input height = 2, output height = 2, pad = 1
Wed 19:18: Counter H = 4 W = 4
Wed 19:18: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: Ifmap buffer configuration 32 x 1
Wed 19:18: loop = false
Wed 19:18: Building line buffer for "conv1" ...
Wed 19:18: Line buffer shape 3 x 2, produces 1 number of 3 x 3 tiles per cycle
Wed 19:18: Line buffer input vector size: 1, output vector size: 9.
Wed 19:18: Number of separated line buffers: 1
Wed 19:18: Initialising line buffer kernel with 3 x 4 x 1
Wed 19:18: Size of line buffer output: 3
Wed 19:18: Number of line buffer output chunks: 3
Wed 19:18: Connecting outputs from chunk (#000) ...
Wed 19:18: Connecting outputs from chunk (#001) ...
Wed 19:18: Connecting outputs from chunk (#002) ...
Wed 19:18: ROM created for conv1 of depth 4 and type {DFEVectorType: 9 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@2b62442c
Wed 19:18: Building the CORE arithmetic unit for "conv1" ...
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: CORE ifmap vector size: 9
Wed 19:18: CORE coefficient vector size: 9
Wed 19:18: CORE ofmap vector size: 1
Wed 19:18: [ConvLayerOfmapBuffer] depth =     4 addr_bits =     2
Wed 19:18: Ifmap buffer configuration 32 x 2
Wed 19:18: loop = false
Wed 19:18: Connecting to output: ofmap
Wed 19:18: Connecting to output: ofmap_1
Wed 19:18: Compiling kernel "conv1"
Wed 19:18: 
Wed 19:18: Generating kernel conv2 ...
Wed 19:18: Instantiating kernel "conv2"
Wed 19:18: T = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: coeffOnChip = true
Wed 19:18: Input height = 2, output height = 2, pad = 0
Wed 19:18: Counter H = 2 W = 2
Wed 19:18: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Wed 19:18: Ifmap buffer configuration 4 x 1
Wed 19:18: loop = false
Wed 19:18: ROM created for conv2 of depth 16 and type {DFEVectorType: 1 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@7b4acdc2
Wed 19:18: Building the CORE arithmetic unit for "conv2" ...
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: CORE ifmap vector size: 1
Wed 19:18: CORE coefficient vector size: 1
Wed 19:18: CORE ofmap vector size: 1
Wed 19:18: Ifmap buffer configuration 4 x 2
Wed 19:18: loop = false
Wed 19:18: ROM created for conv2_1 of depth 16 and type {DFEVectorType: 2 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@33364212
Wed 19:18: Building the CORE arithmetic unit for "conv2" ...
Wed 19:18: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Wed 19:18: CORE ifmap vector size: 2
Wed 19:18: CORE coefficient vector size: 2
Wed 19:18: CORE ofmap vector size: 1
Wed 19:18: [ConvLayerOfmapBuffer] depth =    32 addr_bits =     5
Wed 19:18: Connecting to output: ofmap
Wed 19:18: Compiling kernel "conv2"
Wed 19:18: 
Wed 19:18: Generating padding kernels for DRAM access
Wed 19:18: Instantiating kernel "ifmap_unpad"
Wed 19:18: Compiling kernel "ifmap_unpad"
Wed 19:18: 
Wed 19:18: Instantiating kernel "ofmap_pad"
Wed 19:18: Compiling kernel "ofmap_pad"
Wed 19:18: 
Wed 19:18: Setting up stream connections for conv0
Wed 19:18: Setting up stream connections for conv1
Wed 19:18: Connecting ifmap <== conv0: ofmap
Wed 19:18: Connecting ifmap_1 <== conv0: ofmap_1
Wed 19:18: Setting up stream connections for conv2
Wed 19:18: Connecting ifmap <== conv1: ofmap
Wed 19:18: Connecting ifmap_1 <== conv1: ofmap_1
Wed 19:18: DRAM will be used to build the design
Wed 19:18: Setup streams for kernel "conv0"
Wed 19:18: # cycles:       64
Wed 19:18: # ifmap stream: 64
Wed 19:18: # ofmap stream: 8
Wed 19:18: coeff vec size: 2
Wed 19:18: coeff stream bit width: 32
Wed 19:18: coeff stream chunk size: 1
Wed 19:18: Setup streams for kernel "conv1"
Wed 19:18: # cycles:       64
Wed 19:18: # ifmap stream: 8
Wed 19:18: # ofmap stream: 8
Wed 19:18: coeff vec size: 9
Wed 19:18: coeff stream bit width: 144
Wed 19:18: coeff stream chunk size: 9
Wed 19:18: Setup streams for kernel "conv2"
Wed 19:18: # cycles:       64
Wed 19:18: # ifmap stream: 8
Wed 19:18: # ofmap stream: 32
Wed 19:18: coeff vec size: 1
Wed 19:18: coeff stream bit width: 16
Wed 19:18: coeff stream chunk size: 1
Wed 19:18: Running back-end simulation build (3 phases)
Wed 19:18: (1/3) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Wed 19:18: (2/3) - Compile Simulation Modules (SimCompilePass)
Wed 19:18: (3/3) - Generate MaxFile (AddSimObjectToMaxFilePass)
Wed 19:18: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/BottleneckShortcutImbalanced.max (MD5Sum: 9828a4bacf0ddc6c533189675bd8d4b9)
Wed 19:18: Build completed: Wed Dec 29 19:18:49 GMT 2021 (took 22 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/BottleneckShortcutImbalanced.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/Maxfiles.h
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/BottleneckShortcutImbalanced.max BottleneckShortcutImbalanced_FREQ_350_DBG_sim.o
Processing maxfile for MAX5_LIMA_SIM from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/BottleneckShortcutImbalanced.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_9148490717771398280/cobject/max_6822590472388362443.c -o /tmp/sliccompile_9148490717771398280/cobject/max_6822590472388362443.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results/BottleneckShortcutImbalanced.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_4991931132203846927.o 
ld -r /tmp/sliccompile_9148490717771398280/cobject/max_6822590472388362443.c.o max_4991931132203846927.o -o BottleneckShortcutImbalanced_FREQ_350_DBG_sim.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced'
g++ ../../src/bottleneck_shortcut_imbalanced/BottleneckShortcutImbalancedCpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/BottleneckShortcutImbalanced_MAIA_DFE_SIM_FREQ_350_DBG/results -D__SIM__ -DDESIGN_NAME=BottleneckShortcutImbalanced -c -o BottleneckShortcutImbalanced_FREQ_350_DBG_simc.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -o BottleneckShortcutImbalanced_FREQ_350_DBG_sim BottleneckShortcutImbalanced_FREQ_350_DBG_sim.o BottleneckShortcutImbalanced_FREQ_350_DBG_simc.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
maxcompilersim -n rz3515p -cLIMA -d1 restart

Simulated system 'rz3515p' started:
    Board:                   MAX5C (default: 48GB RAM)
    RAM size for simulation: 51539607552 bytes.
    Temporary RAM file in    /tmp/. (Use option -k to preserve it.)
    Simulation log:          /homes/rz3515/.maxcompilersim/rz3515p-cccad5.log
    Daemon log:              /homes/rz3515/.maxcompilersim/rz3515p-cccad5_daemon.log

Simulated devices available:
    rz3515p0:rz3515p

To use simulated devices you need to set the environment variables
LD_PRELOAD and MAXELEROSDIR. As LD_PRELOAD must not contain spaces,
you might need to set LD_LIBRARY_PATH in addition (see the MaxCompiler
tutorial for details).  Also, ensure that you add the correct simulated
system name (namely "rz3515p") to your SLiC configuration. The following
examples assume there are no spaces in LD_PRELOAD or SLIC_CONF.
Example for BASH:
    export MAXELEROSDIR=$MAXCOMPILERDIR/lib/maxeleros-sim
    export LD_PRELOAD=$MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    export SLIC_CONF="$SLIC_CONF;use_simulation=rz3515p"
Example for CSH:
    setenv MAXELEROSDIR $MAXCOMPILERDIR/lib/maxeleros-sim
    setenv LD_PRELOAD $MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    setenv SLIC_CONF "$SLIC_CONF;use_simulation=rz3515p"

SLIC_CONF+="default_maxdebug_mode=MAX_DEBUG_ALWAYS;" SLIC_CONF+="use_simulation=rz3515p" LD_PRELOAD=/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib/libmaxeleros.so ./BottleneckShortcutImbalanced_FREQ_350_DBG_sim -n 2 -f /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced/data/data-bottleneck-shortcut-imbalanced.txt -g
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[0] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[0] =   2.000000 +  -4.000000 =  -2.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[0] =  -2.000000 +   2.000000 =   0.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[0] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[1] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[1] =  -1.000000 +   0.000000 =  -1.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[1] =  -1.000000 +  -1.000000 =  -2.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[1] =  -2.000000 +   0.000000 =  -2.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[2] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[2] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[2] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[2] =   3.000000 +   0.000000 =   3.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[3] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[3] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[3] =   3.000000 +  -1.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[3] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[4] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[4] =   2.000000 +   2.000000 =   4.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[4] =   4.000000 +  -4.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[4] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[5] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[5] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[5] =  -1.000000 +   2.000000 =   1.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[5] =   1.000000 +  -2.000000 =  -1.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[6] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[6] =   1.000000 +   0.000000 =   1.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[6] =   1.000000 +  -4.000000 =  -3.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[6] =  -3.000000 +  -2.000000 =  -5.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[7] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[7] =   1.000000 +  -1.000000 =   0.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[7] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[7] =   2.000000 +   4.000000 =   6.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[8] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[8] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[8] =   3.000000 +   1.000000 =   4.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[8] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[9] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[9] =  -1.000000 +   0.000000 =  -1.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[9] =  -1.000000 +   1.000000 =   0.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[9] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[10] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[10] =   2.000000 +  -4.000000 =  -2.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[10] =  -2.000000 +   2.000000 =   0.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[10] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[11] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[11] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[11] =   3.000000 +   1.000000 =   4.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[11] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[12] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[12] =   1.000000 +  -1.000000 =   0.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[12] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[12] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[13] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[13] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[13] =  -1.000000 +  -2.000000 =  -3.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[13] =  -3.000000 +   2.000000 =  -1.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[14] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[14] =   2.000000 +   2.000000 =   4.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[14] =   4.000000 +  -4.000000 =   0.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[15] =   1.000000 +  -1.000000 =   0.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[15] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[15] =  -2.000000 +   0.000000 =  -2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[0] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[0] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   3.000000 weight =  -1.000000
output[0] =   2.000000 +  -3.000000 =  -1.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =  -1.000000
output[0] =  -1.000000 +  -2.000000 =  -3.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   4.000000 weight =  -2.000000
output[0] =  -3.000000 +  -8.000000 = -11.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[0] = -11.000000 +   1.000000 = -10.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =  -5.000000 weight =   0.000000
output[0] = -10.000000 +   0.000000 = -10.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   6.000000 weight =   1.000000
output[0] = -10.000000 +   6.000000 =  -4.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   2.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[1] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   3.000000 weight =  -1.000000
output[1] =  -2.000000 +  -3.000000 =  -5.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =  -1.000000
output[1] =  -5.000000 +  -2.000000 =  -7.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   4.000000 weight =   0.000000
output[1] =  -7.000000 +   0.000000 =  -7.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -2.000000
output[1] =  -7.000000 +   2.000000 =  -5.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =  -5.000000 weight =  -1.000000
output[1] =  -5.000000 +   5.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   6.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =   1.000000
output[2] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =  -2.000000
output[2] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   3.000000 weight =   1.000000
output[2] =   4.000000 +   3.000000 =   7.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[2] =   7.000000 +  -2.000000 =   5.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   4.000000 weight =   0.000000
output[2] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -1.000000
output[2] =   5.000000 +   1.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =  -5.000000 weight =  -2.000000
output[2] =   6.000000 +  10.000000 =  16.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   6.000000 weight =  -1.000000
output[2] =  16.000000 +  -6.000000 =  10.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   1.000000
output[3] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   3.000000 weight =   2.000000
output[3] =  -2.000000 +   6.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =   1.000000
output[3] =   4.000000 +   2.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   4.000000 weight =   0.000000
output[3] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   0.000000
output[3] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =  -5.000000 weight =   0.000000
output[3] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   6.000000 weight =  -2.000000
output[3] =   6.000000 + -12.000000 =  -6.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[4] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[4] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   3.000000 weight =   2.000000
output[4] =   2.000000 +   6.000000 =   8.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   2.000000
output[4] =   8.000000 +   4.000000 =  12.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   4.000000 weight =   0.000000
output[4] =  12.000000 +   0.000000 =  12.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -2.000000
output[4] =  12.000000 +   2.000000 =  14.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =  -5.000000 weight =  -2.000000
output[4] =  14.000000 +  10.000000 =  24.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   6.000000 weight =   2.000000
output[4] =  24.000000 +  12.000000 =  36.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -2.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   3.000000 weight =  -2.000000
output[5] =   0.000000 +  -6.000000 =  -6.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =   2.000000
output[5] =  -6.000000 +   4.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   4.000000 weight =   1.000000
output[5] =  -2.000000 +   4.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[5] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =  -5.000000 weight =   0.000000
output[5] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   6.000000 weight =  -2.000000
output[5] =   2.000000 + -12.000000 = -10.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =   0.000000
output[6] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   0.000000
output[6] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   3.000000 weight =   0.000000
output[6] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[6] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   4.000000 weight =  -1.000000
output[6] =  -2.000000 +  -4.000000 =  -6.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -2.000000
output[6] =  -6.000000 +   2.000000 =  -4.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =  -5.000000 weight =   0.000000
output[6] =  -4.000000 +   0.000000 =  -4.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   6.000000 weight =  -2.000000
output[6] =  -4.000000 + -12.000000 = -16.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[7] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   0.000000
output[7] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   3.000000 weight =  -2.000000
output[7] =   0.000000 +  -6.000000 =  -6.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =   0.000000
output[7] =  -6.000000 +   0.000000 =  -6.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   4.000000 weight =   1.000000
output[7] =  -6.000000 +   4.000000 =  -2.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[7] =  -2.000000 +   1.000000 =  -1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =  -5.000000 weight =   1.000000
output[7] =  -1.000000 +  -5.000000 =  -6.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   6.000000 weight =   0.000000
output[7] =  -6.000000 +   0.000000 =  -6.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =   4.000000 weight =   1.000000
output[8] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[8] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =  -1.000000
output[8] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   4.000000 weight =  -1.000000
output[8] =   4.000000 +  -4.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -2.000000
output[8] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[8] =   4.000000 +   1.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   0.000000
output[8] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =  -2.000000 weight =   1.000000
output[8] =   5.000000 +  -2.000000 =   3.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =   4.000000 weight =   2.000000
output[9] =   0.000000 +   8.000000 =   8.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[9] =   8.000000 +   0.000000 =   8.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -1.000000
output[9] =   8.000000 +   0.000000 =   8.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   4.000000 weight =  -1.000000
output[9] =   8.000000 +  -4.000000 =   4.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[9] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -2.000000
output[9] =   4.000000 +   2.000000 =   6.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -1.000000
output[9] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =  -2.000000 weight =   0.000000
output[9] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =   4.000000 weight =   1.000000
output[10] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =  -2.000000
output[10] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[10] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   4.000000 weight =  -1.000000
output[10] =   4.000000 +  -4.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   0.000000
output[10] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -1.000000
output[10] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[10] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[10] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   4.000000 weight =   0.000000
output[11] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   1.000000
output[11] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   2.000000
output[11] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   4.000000 weight =   1.000000
output[11] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[11] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   0.000000
output[11] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[11] =   4.000000 +   0.000000 =   4.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -2.000000
output[11] =   4.000000 +   4.000000 =   8.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =   4.000000 weight =   0.000000
output[12] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[12] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[12] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   4.000000 weight =   2.000000
output[12] =   0.000000 +   8.000000 =   8.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[12] =   8.000000 +   0.000000 =   8.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -2.000000
output[12] =   8.000000 +   2.000000 =  10.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =  -2.000000
output[12] =  10.000000 +   0.000000 =  10.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =  -2.000000 weight =   2.000000
output[12] =  10.000000 +  -4.000000 =   6.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =   4.000000 weight =  -2.000000
output[13] =   0.000000 +  -8.000000 =  -8.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[13] =  -8.000000 +   0.000000 =  -8.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -2.000000
output[13] =  -8.000000 +   0.000000 =  -8.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   4.000000 weight =   2.000000
output[13] =  -8.000000 +   8.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   1.000000
output[13] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[13] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =   0.000000
output[13] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =  -2.000000 weight =  -2.000000
output[13] =  -2.000000 +   4.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =   4.000000 weight =   0.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   0.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   4.000000 weight =  -1.000000
output[14] =   0.000000 +  -4.000000 =  -4.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =  -1.000000
output[14] =  -4.000000 +   2.000000 =  -2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -2.000000
output[14] =  -2.000000 +   2.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -2.000000
output[14] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   4.000000 weight =  -1.000000
output[15] =   0.000000 +  -4.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   0.000000
output[15] =  -4.000000 +   0.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -2.000000
output[15] =  -4.000000 +   0.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   4.000000 weight =   0.000000
output[15] =  -4.000000 +   0.000000 =  -4.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[15] =  -4.000000 +  -2.000000 =  -6.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[15] =  -6.000000 +   1.000000 =  -5.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   1.000000
output[15] =  -5.000000 +   0.000000 =  -5.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[15] =  -5.000000 +   0.000000 =  -5.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =   2.000000
output[0] =   0.000000 +  -8.000000 =  -8.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   1.000000
output[0] =  -8.000000 +  36.000000 =  28.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   1.000000
output[1] =   0.000000 + -10.000000 = -10.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =   2.000000
output[2] =   0.000000 +  20.000000 =  20.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   1.000000
output[2] =  20.000000 + -16.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   2.000000
output[3] =   0.000000 + -12.000000 = -12.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[3] = -12.000000 +  -6.000000 = -18.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =  -1.000000
output[4] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =  -2.000000
output[4] =   4.000000 + -72.000000 = -68.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =  -2.000000
output[5] =   0.000000 +  20.000000 =  20.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =  -1.000000
output[6] =   0.000000 + -10.000000 = -10.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =  -2.000000
output[6] = -10.000000 +  32.000000 =  22.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =  -1.000000
output[7] =   0.000000 +   6.000000 =   6.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =  -2.000000
output[7] =   6.000000 +  12.000000 =  18.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =  -1.000000
output[8] =   0.000000 +   4.000000 =   4.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =  -1.000000
output[8] =   4.000000 + -36.000000 = -32.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[9] =   0.000000 +   0.000000 =   0.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =  -1.000000
output[9] =   0.000000 +  10.000000 =  10.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =  -1.000000
output[10] =   0.000000 + -10.000000 = -10.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =  -1.000000
output[10] = -10.000000 +  16.000000 =   6.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =  -1.000000
output[11] =   0.000000 +   6.000000 =   6.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =  -1.000000
output[11] =   6.000000 +   6.000000 =  12.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =   1.000000
output[12] =   0.000000 +  -4.000000 =  -4.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   1.000000
output[12] =  -4.000000 +  36.000000 =  32.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[13] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   1.000000
output[13] =   0.000000 + -10.000000 = -10.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =   1.000000
output[14] =   0.000000 +  10.000000 =  10.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   1.000000
output[14] =  10.000000 + -16.000000 =  -6.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[15] =   0.000000 +  -6.000000 =  -6.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[15] =  -6.000000 +  -6.000000 = -12.000000
f = 4 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =   2.000000
output[16] =   0.000000 +  -8.000000 =  -8.000000
f = 4 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   0.000000
output[16] =  -8.000000 +   0.000000 =  -8.000000
f = 4 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[17] =   0.000000 +   0.000000 =   0.000000
f = 4 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   0.000000
output[17] =   0.000000 +   0.000000 =   0.000000
f = 4 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =   2.000000
output[18] =   0.000000 +  20.000000 =  20.000000
f = 4 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   0.000000
output[18] =  20.000000 +   0.000000 =  20.000000
f = 4 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   2.000000
output[19] =   0.000000 + -12.000000 = -12.000000
f = 4 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   0.000000
output[19] = -12.000000 +   0.000000 = -12.000000
f = 5 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =  -2.000000
output[20] =   0.000000 +   8.000000 =   8.000000
f = 5 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   1.000000
output[20] =   8.000000 +  36.000000 =  44.000000
f = 5 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[21] =   0.000000 +   0.000000 =   0.000000
f = 5 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   1.000000
output[21] =   0.000000 + -10.000000 = -10.000000
f = 5 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =  -2.000000
output[22] =   0.000000 + -20.000000 = -20.000000
f = 5 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   1.000000
output[22] = -20.000000 + -16.000000 = -36.000000
f = 5 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =  -2.000000
output[23] =   0.000000 +  12.000000 =  12.000000
f = 5 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[23] =  12.000000 +  -6.000000 =   6.000000
f = 6 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =   1.000000
output[24] =   0.000000 +  -4.000000 =  -4.000000
f = 6 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   0.000000
output[24] =  -4.000000 +   0.000000 =  -4.000000
f = 6 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[25] =   0.000000 +   0.000000 =   0.000000
f = 6 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   0.000000
output[25] =   0.000000 +   0.000000 =   0.000000
f = 6 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =   1.000000
output[26] =   0.000000 +  10.000000 =  10.000000
f = 6 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   0.000000
output[26] =  10.000000 +   0.000000 =  10.000000
f = 6 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[27] =   0.000000 +  -6.000000 =  -6.000000
f = 6 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   0.000000
output[27] =  -6.000000 +   0.000000 =  -6.000000
f = 7 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -4.000000 weight =   1.000000
output[28] =   0.000000 +  -4.000000 =  -4.000000
f = 7 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  36.000000 weight =   0.000000
output[28] =  -4.000000 +   0.000000 =  -4.000000
f = 7 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[29] =   0.000000 +   0.000000 =   0.000000
f = 7 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input = -10.000000 weight =   0.000000
output[29] =   0.000000 +   0.000000 =   0.000000
f = 7 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  10.000000 weight =   1.000000
output[30] =   0.000000 +  10.000000 =  10.000000
f = 7 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input = -16.000000 weight =   0.000000
output[30] =  10.000000 +   0.000000 =  10.000000
f = 7 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   1.000000
output[31] =   0.000000 +  -6.000000 =  -6.000000
f = 7 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -6.000000 weight =   0.000000
output[31] =  -6.000000 +   0.000000 =  -6.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   2.000000
output[32] =   0.000000 +   6.000000 =   6.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[32] =   6.000000 +   6.000000 =  12.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =   2.000000
output[33] =   0.000000 +  12.000000 =  12.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[33] =  12.000000 +   2.000000 =  14.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   2.000000
output[34] =   0.000000 +   6.000000 =   6.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   1.000000
output[34] =   6.000000 +   4.000000 =  10.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =   2.000000
output[35] =   0.000000 +  16.000000 =  16.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   1.000000
output[35] =  16.000000 +  -5.000000 =  11.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -1.000000
output[36] =   0.000000 +  -3.000000 =  -3.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =  -2.000000
output[36] =  -3.000000 + -12.000000 = -15.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =  -1.000000
output[37] =   0.000000 +  -6.000000 =  -6.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[37] =  -6.000000 +  -4.000000 = -10.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -1.000000
output[38] =   0.000000 +  -3.000000 =  -3.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =  -2.000000
output[38] =  -3.000000 +  -8.000000 = -11.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =  -1.000000
output[39] =   0.000000 +  -8.000000 =  -8.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =  -2.000000
output[39] =  -8.000000 +  10.000000 =   2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -1.000000
output[40] =   0.000000 +  -3.000000 =  -3.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =  -1.000000
output[40] =  -3.000000 +  -6.000000 =  -9.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =  -1.000000
output[41] =   0.000000 +  -6.000000 =  -6.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[41] =  -6.000000 +  -2.000000 =  -8.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -1.000000
output[42] =   0.000000 +  -3.000000 =  -3.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =  -1.000000
output[42] =  -3.000000 +  -4.000000 =  -7.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =  -1.000000
output[43] =   0.000000 +  -8.000000 =  -8.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =  -1.000000
output[43] =  -8.000000 +   5.000000 =  -3.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[44] =   0.000000 +   3.000000 =   3.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[44] =   3.000000 +   6.000000 =   9.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[45] =   0.000000 +   6.000000 =   6.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[45] =   6.000000 +   2.000000 =   8.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[46] =   0.000000 +   3.000000 =   3.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   1.000000
output[46] =   3.000000 +   4.000000 =   7.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =   1.000000
output[47] =   0.000000 +   8.000000 =   8.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   1.000000
output[47] =   8.000000 +  -5.000000 =   3.000000
f = 4 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   2.000000
output[48] =   0.000000 +   6.000000 =   6.000000
f = 4 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   0.000000
output[48] =   6.000000 +   0.000000 =   6.000000
f = 4 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =   2.000000
output[49] =   0.000000 +  12.000000 =  12.000000
f = 4 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[49] =  12.000000 +   0.000000 =  12.000000
f = 4 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   2.000000
output[50] =   0.000000 +   6.000000 =   6.000000
f = 4 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   0.000000
output[50] =   6.000000 +   0.000000 =   6.000000
f = 4 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =   2.000000
output[51] =   0.000000 +  16.000000 =  16.000000
f = 4 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   0.000000
output[51] =  16.000000 +   0.000000 =  16.000000
f = 5 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -2.000000
output[52] =   0.000000 +  -6.000000 =  -6.000000
f = 5 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[52] =  -6.000000 +   6.000000 =   0.000000
f = 5 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =  -2.000000
output[53] =   0.000000 + -12.000000 = -12.000000
f = 5 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[53] = -12.000000 +   2.000000 = -10.000000
f = 5 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =  -2.000000
output[54] =   0.000000 +  -6.000000 =  -6.000000
f = 5 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   1.000000
output[54] =  -6.000000 +   4.000000 =  -2.000000
f = 5 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =  -2.000000
output[55] =   0.000000 + -16.000000 = -16.000000
f = 5 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   1.000000
output[55] = -16.000000 +  -5.000000 = -21.000000
f = 6 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[56] =   0.000000 +   3.000000 =   3.000000
f = 6 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   0.000000
output[56] =   3.000000 +   0.000000 =   3.000000
f = 6 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[57] =   0.000000 +   6.000000 =   6.000000
f = 6 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[57] =   6.000000 +   0.000000 =   6.000000
f = 6 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[58] =   0.000000 +   3.000000 =   3.000000
f = 6 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   0.000000
output[58] =   3.000000 +   0.000000 =   3.000000
f = 6 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =   1.000000
output[59] =   0.000000 +   8.000000 =   8.000000
f = 6 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   0.000000
output[59] =   8.000000 +   0.000000 =   8.000000
f = 7 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[60] =   0.000000 +   3.000000 =   3.000000
f = 7 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   6.000000 weight =   0.000000
output[60] =   3.000000 +   0.000000 =   3.000000
f = 7 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   6.000000 weight =   1.000000
output[61] =   0.000000 +   6.000000 =   6.000000
f = 7 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[61] =   6.000000 +   0.000000 =   6.000000
f = 7 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =   3.000000 weight =   1.000000
output[62] =   0.000000 +   3.000000 =   3.000000
f = 7 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   4.000000 weight =   0.000000
output[62] =   3.000000 +   0.000000 =   3.000000
f = 7 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =   8.000000 weight =   1.000000
output[63] =   0.000000 +   8.000000 =   8.000000
f = 7 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -5.000000 weight =   0.000000
output[63] =   8.000000 +   0.000000 =   8.000000
Shortcut:
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[0] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[0] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[0] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[0] =  -4.000000 +  -4.000000 =  -8.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[1] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[1] =   2.000000 +   2.000000 =   4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[2] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[2] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[2] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[2] =  -4.000000 +   2.000000 =  -2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[3] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[3] =   2.000000 +  -4.000000 =  -2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[4] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[4] =   4.000000 +  -2.000000 =   2.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[4] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[4] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[5] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[5] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[5] =  -2.000000 +   1.000000 =  -1.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[5] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[6] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[6] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[6] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[6] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[7] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[7] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[7] =   3.000000 +   1.000000 =   4.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[7] =   4.000000 +   0.000000 =   4.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[8] =   0.000000 +  -4.000000 =  -4.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[8] =  -4.000000 +   2.000000 =  -2.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[8] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[8] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[9] =   0.000000 +   2.000000 =   2.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[9] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[9] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[9] =   2.000000 +  -1.000000 =   1.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[10] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[10] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[10] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[10] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[11] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[11] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[11] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[11] =  -3.000000 +   2.000000 =  -1.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[12] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[12] =   2.000000 +   4.000000 =   6.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[12] =   6.000000 +  -2.000000 =   4.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[12] =   4.000000 +  -2.000000 =   2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[13] =   0.000000 +  -1.000000 =  -1.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[13] =  -1.000000 +   0.000000 =  -1.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[13] =  -1.000000 +   1.000000 =   0.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[13] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[14] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[14] =   1.000000 +   0.000000 =   1.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[14] =   1.000000 +  -2.000000 =  -1.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[14] =  -1.000000 +   1.000000 =   0.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[15] =   1.000000 +  -2.000000 =  -1.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =  -1.000000 +   1.000000 =   0.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[15] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[16] =   0.000000 +  -4.000000 =  -4.000000
f = 4 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[16] =  -4.000000 +  -2.000000 =  -6.000000
f = 4 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[16] =  -6.000000 +   2.000000 =  -4.000000
f = 4 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[16] =  -4.000000 +   4.000000 =   0.000000
f = 4 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[17] =   0.000000 +   2.000000 =   2.000000
f = 4 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[17] =   2.000000 +   0.000000 =   2.000000
f = 4 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[17] =   2.000000 +  -1.000000 =   1.000000
f = 4 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[17] =   1.000000 +  -2.000000 =  -1.000000
f = 4 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[18] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[18] =  -2.000000 +   0.000000 =  -2.000000
f = 4 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[18] =  -2.000000 +   2.000000 =   0.000000
f = 4 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[18] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[19] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[19] =  -2.000000 +   1.000000 =  -1.000000
f = 4 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[19] =  -1.000000 +  -1.000000 =  -2.000000
f = 4 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[19] =  -2.000000 +   4.000000 =   2.000000
f = 5 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[20] =   0.000000 +  -2.000000 =  -2.000000
f = 5 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[20] =  -2.000000 +   2.000000 =   0.000000
f = 5 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[20] =   0.000000 +   4.000000 =   4.000000
f = 5 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[20] =   4.000000 +   0.000000 =   4.000000
f = 5 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[21] =   0.000000 +   1.000000 =   1.000000
f = 5 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[21] =   1.000000 +   0.000000 =   1.000000
f = 5 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[21] =   1.000000 +  -2.000000 =  -1.000000
f = 5 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[21] =  -1.000000 +   0.000000 =  -1.000000
f = 5 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[22] =   0.000000 +  -1.000000 =  -1.000000
f = 5 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[22] =  -1.000000 +   0.000000 =  -1.000000
f = 5 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[22] =  -1.000000 +   4.000000 =   3.000000
f = 5 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[22] =   3.000000 +   0.000000 =   3.000000
f = 5 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[23] =   0.000000 +  -1.000000 =  -1.000000
f = 5 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[23] =  -1.000000 +  -1.000000 =  -2.000000
f = 5 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[23] =  -2.000000 +  -2.000000 =  -4.000000
f = 5 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[23] =  -4.000000 +   0.000000 =  -4.000000
f = 6 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[24] =   0.000000 +  -2.000000 =  -2.000000
f = 6 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[24] =  -2.000000 +  -4.000000 =  -6.000000
f = 6 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[24] =  -6.000000 +  -2.000000 =  -8.000000
f = 6 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[24] =  -8.000000 +  -4.000000 = -12.000000
f = 6 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[25] =   0.000000 +   1.000000 =   1.000000
f = 6 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[25] =   1.000000 +   0.000000 =   1.000000
f = 6 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[25] =   1.000000 +   1.000000 =   2.000000
f = 6 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[25] =   2.000000 +   2.000000 =   4.000000
f = 6 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[26] =   0.000000 +  -1.000000 =  -1.000000
f = 6 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[26] =  -1.000000 +   0.000000 =  -1.000000
f = 6 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[26] =  -1.000000 +  -2.000000 =  -3.000000
f = 6 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[26] =  -3.000000 +   2.000000 =  -1.000000
f = 6 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[27] =   0.000000 +  -1.000000 =  -1.000000
f = 6 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[27] =  -1.000000 +   2.000000 =   1.000000
f = 6 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[27] =   1.000000 +   1.000000 =   2.000000
f = 6 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[27] =   2.000000 +  -4.000000 =  -2.000000
f = 7 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[28] =   0.000000 +   2.000000 =   2.000000
f = 7 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[28] =   2.000000 +   0.000000 =   2.000000
f = 7 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[28] =   2.000000 +   2.000000 =   4.000000
f = 7 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[28] =   4.000000 +   4.000000 =   8.000000
f = 7 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[29] =   0.000000 +  -1.000000 =  -1.000000
f = 7 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[29] =  -1.000000 +   0.000000 =  -1.000000
f = 7 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[29] =  -1.000000 +  -1.000000 =  -2.000000
f = 7 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[29] =  -2.000000 +  -2.000000 =  -4.000000
f = 7 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[30] =   0.000000 +   1.000000 =   1.000000
f = 7 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[30] =   1.000000 +   0.000000 =   1.000000
f = 7 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[30] =   1.000000 +   2.000000 =   3.000000
f = 7 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[30] =   3.000000 +  -2.000000 =   1.000000
f = 7 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[31] =   0.000000 +   1.000000 =   1.000000
f = 7 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[31] =   1.000000 +   0.000000 =   1.000000
f = 7 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[31] =   1.000000 +  -1.000000 =   0.000000
f = 7 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[31] =   0.000000 +   4.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[32] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[32] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[32] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[32] =  -2.000000 +   0.000000 =  -2.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[33] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[33] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[33] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[33] =  -2.000000 +  -2.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[34] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[34] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -2.000000
output[34] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[34] =  -4.000000 +   0.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[35] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[35] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[35] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[35] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[36] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[36] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[36] =   3.000000 +  -1.000000 =   2.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[36] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[37] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[37] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[37] =  -2.000000 +  -1.000000 =  -3.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[37] =  -3.000000 +   0.000000 =  -3.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[38] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[38] =   4.000000 +  -2.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[38] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[38] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[39] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[39] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[39] =   3.000000 +  -1.000000 =   2.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[39] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[40] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[40] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[40] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[40] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[41] =   0.000000 +   2.000000 =   2.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[41] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[41] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[41] =   2.000000 +   1.000000 =   3.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[42] =   0.000000 +  -4.000000 =  -4.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[42] =  -4.000000 +   2.000000 =  -2.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   0.000000
output[42] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[42] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[43] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[43] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[43] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[43] =  -3.000000 +   0.000000 =  -3.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[44] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[44] =   1.000000 +  -2.000000 =  -1.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[44] =  -1.000000 +  -1.000000 =  -2.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[44] =  -2.000000 +   0.000000 =  -2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[45] =   0.000000 +  -1.000000 =  -1.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[45] =  -1.000000 +   0.000000 =  -1.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[45] =  -1.000000 +  -1.000000 =  -2.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[45] =  -2.000000 +  -1.000000 =  -3.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[46] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[46] =   2.000000 +   4.000000 =   6.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[46] =   6.000000 +  -2.000000 =   4.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[46] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[47] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[47] =   1.000000 +  -2.000000 =  -1.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[47] =  -1.000000 +  -1.000000 =  -2.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[47] =  -2.000000 +   0.000000 =  -2.000000
f = 4 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[48] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[48] =  -2.000000 +   1.000000 =  -1.000000
f = 4 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[48] =  -1.000000 +   1.000000 =   0.000000
f = 4 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[48] =   0.000000 +   0.000000 =   0.000000
f = 4 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[49] =   0.000000 +   2.000000 =   2.000000
f = 4 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[49] =   2.000000 +   0.000000 =   2.000000
f = 4 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[49] =   2.000000 +   1.000000 =   3.000000
f = 4 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[49] =   3.000000 +   2.000000 =   5.000000
f = 4 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[50] =   0.000000 +  -4.000000 =  -4.000000
f = 4 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[50] =  -4.000000 +  -2.000000 =  -6.000000
f = 4 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[50] =  -6.000000 +   2.000000 =  -4.000000
f = 4 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[50] =  -4.000000 +   0.000000 =  -4.000000
f = 4 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   2.000000
output[51] =   0.000000 +  -2.000000 =  -2.000000
f = 4 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[51] =  -2.000000 +   1.000000 =  -1.000000
f = 4 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[51] =  -1.000000 +   1.000000 =   0.000000
f = 4 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[51] =   0.000000 +   0.000000 =   0.000000
f = 5 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[52] =   0.000000 +  -1.000000 =  -1.000000
f = 5 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[52] =  -1.000000 +  -1.000000 =  -2.000000
f = 5 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[52] =  -2.000000 +   2.000000 =   0.000000
f = 5 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[52] =   0.000000 +   0.000000 =   0.000000
f = 5 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[53] =   0.000000 +   1.000000 =   1.000000
f = 5 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -1.000000
output[53] =   1.000000 +   0.000000 =   1.000000
f = 5 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[53] =   1.000000 +   2.000000 =   3.000000
f = 5 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[53] =   3.000000 +   0.000000 =   3.000000
f = 5 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[54] =   0.000000 +  -2.000000 =  -2.000000
f = 5 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[54] =  -2.000000 +   2.000000 =   0.000000
f = 5 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   2.000000
output[54] =   0.000000 +   4.000000 =   4.000000
f = 5 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[54] =   4.000000 +   0.000000 =   4.000000
f = 5 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[55] =   0.000000 +  -1.000000 =  -1.000000
f = 5 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[55] =  -1.000000 +  -1.000000 =  -2.000000
f = 5 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[55] =  -2.000000 +   2.000000 =   0.000000
f = 5 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[55] =   0.000000 +   0.000000 =   0.000000
f = 6 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[56] =   0.000000 +  -1.000000 =  -1.000000
f = 6 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[56] =  -1.000000 +   2.000000 =   1.000000
f = 6 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[56] =   1.000000 +  -1.000000 =   0.000000
f = 6 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[56] =   0.000000 +   0.000000 =   0.000000
f = 6 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[57] =   0.000000 +   1.000000 =   1.000000
f = 6 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[57] =   1.000000 +   0.000000 =   1.000000
f = 6 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[57] =   1.000000 +  -1.000000 =   0.000000
f = 6 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[57] =   0.000000 +  -2.000000 =  -2.000000
f = 6 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   1.000000
output[58] =   0.000000 +  -2.000000 =  -2.000000
f = 6 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   2.000000
output[58] =  -2.000000 +  -4.000000 =  -6.000000
f = 6 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[58] =  -6.000000 +  -2.000000 =  -8.000000
f = 6 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[58] =  -8.000000 +   0.000000 =  -8.000000
f = 6 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[59] =   0.000000 +  -1.000000 =  -1.000000
f = 6 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[59] =  -1.000000 +   2.000000 =   1.000000
f = 6 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[59] =   1.000000 +  -1.000000 =   0.000000
f = 6 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[59] =   0.000000 +   0.000000 =   0.000000
f = 7 c = 0 oh = 0 ow = 0 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[60] =   0.000000 +   1.000000 =   1.000000
f = 7 c = 1 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[60] =   1.000000 +   0.000000 =   1.000000
f = 7 c = 2 oh = 0 ow = 0 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[60] =   1.000000 +   1.000000 =   2.000000
f = 7 c = 3 oh = 0 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[60] =   2.000000 +   0.000000 =   2.000000
f = 7 c = 0 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[61] =   0.000000 +  -1.000000 =  -1.000000
f = 7 c = 1 oh = 0 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[61] =  -1.000000 +   0.000000 =  -1.000000
f = 7 c = 2 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[61] =  -1.000000 +   1.000000 =   0.000000
f = 7 c = 3 oh = 0 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   2.000000
output[61] =   0.000000 +   2.000000 =   2.000000
f = 7 c = 0 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[62] =   0.000000 +   2.000000 =   2.000000
f = 7 c = 1 oh = 1 ow = 0 kh = 0 kw = 0: input =  -2.000000 weight =   0.000000
output[62] =   2.000000 +   0.000000 =   2.000000
f = 7 c = 2 oh = 1 ow = 0 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[62] =   2.000000 +   2.000000 =   4.000000
f = 7 c = 3 oh = 1 ow = 0 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[62] =   4.000000 +   0.000000 =   4.000000
f = 7 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[63] =   0.000000 +   1.000000 =   1.000000
f = 7 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[63] =   1.000000 +   0.000000 =   1.000000
f = 7 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   1.000000
output[63] =   1.000000 +   1.000000 =   2.000000
f = 7 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   2.000000
output[63] =   2.000000 +   0.000000 =   2.000000
UNPADDING: 0 (192) nInputs 64
UNPADDING: 1 (192) nInputs 64
UNPADDING: 2 (192) nInputs 64
UNPADDING: 3 (192) nInputs 64
UNPADDING: 4 (192) nInputs 64
UNPADDING: 5 (192) nInputs 64
UNPADDING: 6 (192) nInputs 64
UNPADDING: 7 (192) nInputs 64
UNPADDING: 8 (192) nInputs 64
UNPADDING: 9 (192) nInputs 64
UNPADDING: 10 (192) nInputs 64
UNPADDING: 11 (192) nInputs 64
UNPADDING: 12 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < -2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv0][0/0/0/0] [padAndBufferize] At stream 0 = < -2 :: -2 >
[conv0][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 0, data = < 0 :: 0 >, en = 0
UNPADDING: 13 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv0][0/0/0/1] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 1, data = < 0 :: 0 >, en = 0
UNPADDING: 14 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv0][0/0/0/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 2, data = < 0 :: 0 >, en = 0
UNPADDING: 15 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv0][0/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 3, data = < 0 :: 0 >, en = 0
UNPADDING: 16 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv0][0/0/1/0] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 4, data = < 0 :: 0 >, en = 0
UNPADDING: 17 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv0][0/0/1/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 18 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv0][0/0/1/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 6, data = < 0 :: 0 >, en = 0
UNPADDING: 19 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv0][0/0/1/3] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 7, data = < 0 :: 0 >, en = 0
UNPADDING: 20 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv0][0/0/2/0] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 8, data = < 0 :: 0 >, en = 0
UNPADDING: 21 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < -2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv0][0/0/2/1] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 9, data = < 0 :: 0 >, en = 0
UNPADDING: 22 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv0][0/0/2/2] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 10, data = < 0 :: 0 >, en = 0
UNPADDING: 23 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv0][0/0/2/3] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 11, data = < 0 :: 0 >, en = 0
UNPADDING: 24 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv0][0/0/3/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 12, data = < 0 :: 0 >, en = 0
UNPADDING: 25 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < -2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv0][0/0/3/1] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 13, data = < 0 :: 0 >, en = 0
UNPADDING: 26 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv0][0/0/3/2] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 14, data = < 0 :: 0 >, en = 0
UNPADDING: 27 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv0][0/0/3/3] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 15, data = < 0 :: 0 >, en = 0
UNPADDING: 28 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv0][0/1/0/0] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 0, data = < -2 :: -2 >, en = 1
UNPADDING: 29 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv0][0/1/0/1] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 1, data = < -1 :: 0 >, en = 0
UNPADDING: 30 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/2] [bufferizeIfmap] At stream 0: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv0][0/1/0/2] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 2, data = < 1 :: 0 >, en = 1
UNPADDING: 31 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/3] [bufferizeIfmap] At stream 0: data = < -2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv0][0/1/0/3] [padAndBufferize] At stream 0 = < -2 :: 2 >
[conv0][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 3, data = < 0 :: 1 >, en = 0
UNPADDING: 32 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/0] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv0][0/1/1/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 4, data = < -1 :: 2 >, en = 0
UNPADDING: 33 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/1] [bufferizeIfmap] At stream 0: data = < 2 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv0][0/1/1/1] [padAndBufferize] At stream 0 = < 2 :: 1 >
[conv0][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 5, data = < -1 :: -1 >, en = 0
UNPADDING: 34 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/2] [bufferizeIfmap] At stream 0: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv0][0/1/1/2] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 6, data = < 1 :: 0 >, en = 0
UNPADDING: 35 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv0][0/1/1/3] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 7, data = < 2 :: 0 >, en = 0
UNPADDING: 36 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv0][0/1/2/0] [padAndBufferize] At stream 0 = < 2 :: -1 >
[conv0][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 8, data = < -1 :: 0 >, en = 1
UNPADDING: 37 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/1] [bufferizeIfmap] At stream 0: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv0][0/1/2/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 9, data = < -2 :: 0 >, en = 0
UNPADDING: 38 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/2] [bufferizeIfmap] At stream 0: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv0][0/1/2/2] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 10, data = < -1 :: 1 >, en = 1
UNPADDING: 39 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -2 >
[ConvLayerIfmapBuffer] output = < -1 :: -2 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/3] [bufferizeIfmap] At stream 0: data = < -1 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv0][0/1/2/3] [padAndBufferize] At stream 0 = < -1 :: -2 >
[conv0][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: -2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 11, data = < 1 :: 1 >, en = 0
UNPADDING: 40 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv0][0/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 12, data = < -1 :: 1 >, en = 0
UNPADDING: 41 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv0][0/1/3/1] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 13, data = < -2 :: 0 >, en = 0
UNPADDING: 42 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/2] [bufferizeIfmap] At stream 0: data = < 2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv0][0/1/3/2] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 14, data = < -2 :: -1 >, en = 0
UNPADDING: 43 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv0][0/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 15, data = < 1 :: 1 >, en = 0
UNPADDING: 44 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv0][1/0/0/0] [padAndBufferize] At stream 0 = < -2 :: -2 >
[conv0][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 16, data = < 2 :: 2 >, en = 0
conv1f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv1][0/0/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/0] [bufferizeIfmap] At stream 1: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 5 en = 1
[conv1][0/0/0/0] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 45 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv0][1/0/0/1] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 17, data = < 2 :: 0 >, en = 0
conv1f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv1][0/0/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/1] [bufferizeIfmap] At stream 1: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 5 en = 1
[conv1][0/0/0/1] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 46 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv0][1/0/0/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 18, data = < -1 :: -1 >, en = 0
conv1f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv1][0/0/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/2] [bufferizeIfmap] At stream 1: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 5 en = 1
[conv1][0/0/0/2] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 47 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv0][1/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 19, data = < -2 :: 2 >, en = 0
conv1f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv1][0/0/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/3] [bufferizeIfmap] At stream 1: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 6 en = 1
[conv1][0/0/0/3] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 0 :: 0 >, en = 0
UNPADDING: 48 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv0][1/0/1/0] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 20, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv1][0/0/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/0] [bufferizeIfmap] At stream 1: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 5 en = 1
[conv1][0/0/1/0] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 49 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv0][1/0/1/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 21, data = < 2 :: 1 >, en = 0
conv1f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv1][0/0/1/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/1] [bufferizeIfmap] At stream 1: data = < -2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv1][0/0/1/1] [padAndBufferize] At stream 1 = < 0 :: 0 >
[conv1][0/0/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < 0 :: 0 >, en = 0
UNPADDING: 50 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv0][1/0/1/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 22, data = < 2 :: 0 >, en = 0
conv1f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv1][0/0/1/2] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[conv1][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 5 en = 1
[conv1][0/0/1/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 51 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv0][1/0/1/3] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 23, data = < 0 :: -1 >, en = 0
UNPADDING: 52 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv0][1/0/2/0] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 24, data = < 2 :: -1 >, en = 0
UNPADDING: 53 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv0][1/0/2/1] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 25, data = < -1 :: -1 >, en = 0
UNPADDING: 54 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv0][1/0/2/2] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 26, data = < -1 :: 2 >, en = 0
UNPADDING: 55 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv0][1/0/2/3] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 27, data = < -1 :: -2 >, en = 0
UNPADDING: 56 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv0][1/0/3/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 28, data = < 0 :: 1 >, en = 0
UNPADDING: 57 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv0][1/0/3/1] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 29, data = < 0 :: -1 >, en = 0
UNPADDING: 58 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv0][1/0/3/2] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 30, data = < 2 :: 2 >, en = 0
UNPADDING: 59 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv0][1/0/3/3] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 31, data = < 0 :: 1 >, en = 0
UNPADDING: 60 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv0][1/1/0/0] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 16, data = < 2 :: 2 >, en = 1
UNPADDING: 61 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv0][1/1/0/1] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 17, data = < 2 :: 0 >, en = 0
UNPADDING: 62 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv0][1/1/0/2] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 18, data = < -1 :: -1 >, en = 1
conv1f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv1][0/0/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[conv1][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 6 en = 1
[conv1][0/0/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/0/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
UNPADDING: 63 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv0][1/1/0/3] [padAndBufferize] At stream 0 = < -2 :: 2 >
[conv0][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -2 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 19, data = < -2 :: 2 >, en = 0
UNPADDING: 64 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv0][1/1/1/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 20, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv1][0/0/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv1][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 5 en = 1
[conv1][0/0/2/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 65 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv0][1/1/1/1] [padAndBufferize] At stream 0 = < 2 :: 1 >
[conv0][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 21, data = < 2 :: 1 >, en = 0
conv1f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 3 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 3 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv1][0/0/2/1] [padAndBufferize] At stream 0 = < 3 >
Line buffer inputVec = < 3 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[conv1][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -3 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/1] [bufferizeIfmap] At stream 1: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 5 en = 1
[conv1][0/0/2/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 66 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv0][1/1/1/2] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 22, data = < 2 :: 0 >, en = 0
conv1f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv1][0/0/2/2] [padAndBufferize] At stream 0 = < 2 >
Line buffer inputVec = < 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[conv1][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: -3 :: -2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 5 en = 1
[conv1][0/0/2/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 67 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv0][1/1/1/3] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 23, data = < 0 :: -1 >, en = 0
UNPADDING: 68 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv0][1/1/2/0] [padAndBufferize] At stream 0 = < 2 :: -1 >
[conv0][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 24, data = < 2 :: -1 >, en = 1
UNPADDING: 69 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv0][1/1/2/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
[conv0][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 25, data = < -1 :: -1 >, en = 0
UNPADDING: 70 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv0][1/1/2/2] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 26, data = < -1 :: 2 >, en = 1
conv1f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv1][0/0/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[conv1][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: -3 :: -2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -7 >
[ConvLayerOfmapBuffer] input          = < -7 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 6 en = 1
[conv1][0/0/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/0/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
UNPADDING: 71 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -2 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv0][1/1/2/3] [padAndBufferize] At stream 0 = < -1 :: -2 >
[conv0][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -1 :: -2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 27, data = < -1 :: -2 >, en = 0
UNPADDING: 72 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv0][1/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 28, data = < 0 :: 1 >, en = 0
conv1f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv1][0/0/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[conv1][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 9 en = 1
[conv1][0/0/3/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/0/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 0
UNPADDING: 73 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv0][1/1/3/1] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 29, data = < 0 :: -1 >, en = 0
conv1f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv1][0/0/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[conv1][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -3 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 9 en = 1
[conv1][0/0/3/1] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/0/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 0
UNPADDING: 74 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv0][1/1/3/2] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 30, data = < 2 :: 2 >, en = 0
conv1f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv1][0/0/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[conv1][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 4 :: 0 :: 3 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 9 en = 1
[conv1][0/0/3/2] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/0/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 0
UNPADDING: 75 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv0][1/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 31, data = < 0 :: 1 >, en = 0
conv1f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv1][0/0/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: -2 :: 0 :: 6 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 10 en = 1
[conv1][0/0/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 10, data = < -1 :: 1 >, en = 0
UNPADDING: 76 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv0][0/0/0/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 0, data = < -2 :: -2 >, en = 0
conv1f = 0 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv1][0/1/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 5 en = 1
[conv1][0/1/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 77 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv0][0/0/0/1] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 1, data = < -1 :: 0 >, en = 0
conv1f = 0 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv1][0/1/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: -3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 5 en = 1
[conv1][0/1/0/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 78 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv0][0/0/0/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 2, data = < 1 :: 0 >, en = 0
conv1f = 0 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv1][0/1/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 5 en = 1
[conv1][0/1/0/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 79 (192) nInputs 64
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv0][0/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
[conv0][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 3, data = < 0 :: 1 >, en = 0
conv1f = 0 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv1][0/1/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -7 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 6 en = 1
[conv1][0/1/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
UNPADDING: 80 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv0][0/0/1/0] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 4, data = < -1 :: 2 >, en = 0
conv1f = 0 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv1][0/1/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 5 en = 1
[conv1][0/1/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 81 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv0][0/0/1/1] [padAndBufferize] At stream 0 = < 1 :: 2 >
[conv0][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 5, data = < -1 :: -1 >, en = 0
conv1f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 4 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/1] [bufferizeIfmap] At stream 0: data = < 4 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv1][0/1/1/1] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[conv1][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/1] [bufferizeIfmap] At stream 1: data = < 2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 5 en = 1
[conv1][0/1/1/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 82 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < 2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv0][0/0/1/2] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 6, data = < 1 :: 0 >, en = 0
conv1f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 >
[ConvLayerIfmapBuffer] output = < -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/2] [bufferizeIfmap] At stream 0: data = < -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv1][0/1/1/2] [padAndBufferize] At stream 0 = < -1 >
Line buffer inputVec = < -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[conv1][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/2] [bufferizeIfmap] At stream 1: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 5 en = 1
[conv1][0/1/1/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 83 (192) nInputs 64
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv0][0/0/1/3] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 7, data = < 2 :: 0 >, en = 0
conv1f = 0 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv1][0/1/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[conv1][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -7 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/3] [bufferizeIfmap] At stream 1: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 6 en = 1
[conv1][0/1/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
UNPADDING: 84 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < -2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv0][0/0/2/0] [padAndBufferize] At stream 0 = < -2 :: -2 >
[conv0][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 8, data = < -1 :: 0 >, en = 0
conv1f = 0 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv1][0/1/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv1][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/0] [bufferizeIfmap] At stream 1: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 5 en = 1
[conv1][0/1/2/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 85 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv0][0/0/2/1] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 9, data = < -2 :: 0 >, en = 0
conv1f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv1][0/1/2/1] [padAndBufferize] At stream 0 = < -5 >
Line buffer inputVec = < -5 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[conv1][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: -5 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -9 >
[ConvLayerOfmapBuffer] input          = < -9 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/1] [bufferizeIfmap] At stream 1: data = < 2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 5 en = 1
[conv1][0/1/2/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
UNPADDING: 86 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv0][0/0/2/2] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 10, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/2] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv1][0/1/2/2] [padAndBufferize] At stream 0 = < 6 >
Line buffer inputVec = < 6 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[conv1][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -8 :: 1 :: 0 :: 0 :: 6 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 5 en = 1
[conv1][0/1/2/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 1
UNPADDING: 87 (192) nInputs 64
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv0][0/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 11, data = < 1 :: 1 >, en = 0
conv1f = 0 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv1][0/1/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[conv1][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 5 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 7 >
[ConvLayerOfmapBuffer] input          = < 7 >
[ConvLayerOfmapBuffer] read           = < -7 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 6 en = 1
[conv1][0/1/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 1
UNPADDING: 88 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: -2 >
[ConvLayerIfmapBuffer] output = < 1 :: -2 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 1 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv0][0/0/3/0] [padAndBufferize] At stream 0 = < 1 :: -2 >
[conv0][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 1 :: -2 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -5 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 12, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv1][0/1/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[conv1][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -6 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 9 en = 1
[conv1][0/1/3/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/1/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 0
UNPADDING: 89 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv0][0/0/3/1] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 13, data = < -2 :: 0 >, en = 0
conv1f = 0 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv1][0/1/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[conv1][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: -4 :: 0 :: 0 :: 5 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 9 en = 1
[conv1][0/1/3/1] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/1/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 0
UNPADDING: 90 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv0][0/0/3/2] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 14, data = < -2 :: -1 >, en = 0
conv1f = 0 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv1][0/1/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[conv1][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 1 :: 0 :: 10 :: -6 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 9 en = 1
[conv1][0/1/3/2] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][0/1/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -1 :: 0 >, en = 1
UNPADDING: 91 (192) nInputs 64
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv0][0/0/3/3] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/0/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 15, data = < 1 :: 1 >, en = 0
conv1f = 0 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv1][0/1/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -12 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -12 >
[ConvLayerOfmapBuffer] input          = < -12 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 10 en = 1
[conv1][0/1/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 10, data = < -1 :: 1 >, en = 1
UNPADDING: 92 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv0][0/1/0/0] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 0, data = < -1 :: 1 >, en = 1
conv1f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv1][1/0/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 1 :: 0 :: 0 :: -12 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -11 >
[ConvLayerOfmapBuffer] input          = < -11 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 5 en = 0
[conv1][1/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 93 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/1] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv0][0/1/0/1] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 1, data = < -1 :: 0 >, en = 0
conv1f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv1][1/0/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 5 en = 0
[conv1][1/0/0/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 94 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv0][0/1/0/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 2, data = < 1 :: 0 >, en = 1
conv1f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv1][1/0/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 5 en = 0
[conv1][1/0/0/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 95 (192) nInputs 64
conv0f = 0 c = 1 h = 0 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 1 >
[ConvLayerIfmapBuffer] output = < 2 :: 1 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/3] [bufferizeIfmap] At stream 0: data = < 2 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv0][0/1/0/3] [padAndBufferize] At stream 0 = < 2 :: 1 >
[conv0][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 3, data = < 0 :: 0 >, en = 0
conv1f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv1][1/0/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 6 en = 0
[conv1][1/0/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 0
UNPADDING: 96 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/0] [bufferizeIfmap] At stream 0: data = < -2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv0][0/1/1/0] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 4, data = < -2 :: -1 >, en = 0
conv1f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv1][1/0/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < -6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 5 en = 0
[conv1][1/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 97 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv0][0/1/1/1] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 5, data = < 1 :: 2 >, en = 0
conv1f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/1] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv1][1/0/1/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv1][1/0/1/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 98 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/2] [bufferizeIfmap] At stream 0: data = < 2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv0][0/1/1/2] [padAndBufferize] At stream 0 = < 2 :: -1 >
[conv0][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 6, data = < 2 :: 2 >, en = 0
conv1f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/2] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv1][1/0/1/2] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[conv1][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 5 en = 0
[conv1][1/0/1/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
UNPADDING: 99 (192) nInputs 64
conv0f = 0 c = 1 h = 1 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/3] [bufferizeIfmap] At stream 0: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv0][0/1/1/3] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 7, data = < 2 :: 0 >, en = 0
conv1f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv1][1/0/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[conv1][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 6 en = 0
[conv1][1/0/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 0
UNPADDING: 100 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv0][0/1/2/0] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 8, data = < -2 :: -2 >, en = 1
conv1f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv1][1/0/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv1][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 5 en = 0
[conv1][1/0/2/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 0 c = 0 h = 0 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -4 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/0] [bufferizeIfmap] At stream 0: data = < -4 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -4 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -8 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/0] [bufferizeIfmap] At stream 1: data = < -2 :: -2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][0/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 101 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/1] [bufferizeIfmap] At stream 0: data = < -2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv0][0/1/2/1] [padAndBufferize] At stream 0 = < -2 :: 2 >
[conv0][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 9, data = < -1 :: 2 >, en = 0
conv1f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/1] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv1][1/0/2/1] [padAndBufferize] At stream 0 = < 3 >
Line buffer inputVec = < 3 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[conv1][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 6 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 3 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 5 en = 0
[conv1][1/0/2/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 0 c = 0 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][0/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 102 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv0][0/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 10, data = < -1 :: 1 >, en = 1
conv1f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/2] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv1][1/0/2/2] [padAndBufferize] At stream 0 = < 2 >
Line buffer inputVec = < 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[conv1][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 6 :: 4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerOfmapBuffer] input          = < 12 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 5 en = 0
[conv1][1/0/2/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 0 c = 0 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 10 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 10 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 10 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 20 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 20 >
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][0/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 20 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 20 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 103 (192) nInputs 64
conv0f = 0 c = 1 h = 2 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv0][0/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
[conv0][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 11, data = < 0 :: 1 >, en = 0
conv1f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv1][1/0/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[conv1][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -6 :: 4 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 6 en = 0
[conv1][1/0/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 0
conv2f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -6 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -12 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < -12 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][0/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < -12 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -12 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 104 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/0] [bufferizeIfmap] At stream 0: data = < -1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv0][0/1/3/0] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 12, data = < 1 :: -2 >, en = 0
conv1f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv1][1/0/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[conv1][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -4 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 10 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 9 en = 0
[conv1][1/0/3/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/0/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 0
conv2f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -4 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][1/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 4
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 105 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 :: -2 >
[ConvLayerIfmapBuffer] output = < 2 :: -2 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv0][0/1/3/1] [padAndBufferize] At stream 0 = < 2 :: -2 >
[conv0][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: -2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 13, data = < -1 :: 1 >, en = 0
conv1f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv1][1/0/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[conv1][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -3 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 3 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 10 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 9 en = 0
[conv1][1/0/3/1] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/0/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 0
conv2f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][1/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 5
[ConvLayerOfmapBuffer] actual output  = < 20 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 106 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/2] [bufferizeIfmap] At stream 0: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv0][0/1/3/2] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 14, data = < -1 :: 0 >, en = 0
conv1f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv1][1/0/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[conv1][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 10 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 9 en = 0
[conv1][1/0/3/2] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/0/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 0
conv2f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 10 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][1/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 6
[ConvLayerOfmapBuffer] actual output  = < -12 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 107 (192) nInputs 64
conv0f = 0 c = 1 h = 3 w = 3
ifmapEn = 1
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv0][0/1/3/3] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < 1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][0/1/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 15, data = < 0 :: -1 >, en = 0
conv1f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv1][1/0/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 10 en = 0
[conv1][1/0/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 26, data = < -1 :: 2 >, en = 0
conv2f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][1/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 7
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 4
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 108 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv0][1/0/0/0] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 16, data = < 1 :: 0 >, en = 0
conv1f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv1][1/1/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 5 en = 0
[conv1][1/1/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 2 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][2/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -4 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][2/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 8
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 5
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 109 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv0][1/0/0/1] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 17, data = < -1 :: 1 >, en = 0
conv1f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv1][1/1/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: -6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 3 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 5 en = 0
[conv1][1/1/0/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 2 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][2/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][2/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 9
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 6
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 110 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv0][1/0/0/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 18, data = < 1 :: 1 >, en = 0
conv1f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv1][1/1/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: -3 :: -4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -7 >
[ConvLayerOfmapBuffer] input          = < -7 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 5 en = 0
[conv1][1/1/0/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 2 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][2/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 10 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][2/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -12 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -12 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 10
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 7
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 111 (192) nInputs 64
conv0f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv0][1/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
[conv0][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 19, data = < 2 :: 1 >, en = 0
conv1f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv1][1/1/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 3 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 3 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 6 en = 0
[conv1][1/1/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 0
conv2f = 2 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][2/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][2/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 11
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 8
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 112 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv0][1/0/1/0] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 20, data = < -2 :: 0 >, en = 0
conv1f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv1][1/1/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 14 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 5 en = 0
[conv1][1/1/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 3 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][3/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][3/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 12
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 9
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 113 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv0][1/0/1/1] [padAndBufferize] At stream 0 = < 1 :: 2 >
[conv0][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 1 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 21, data = < 1 :: 0 >, en = 0
conv1f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/1] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv1][1/1/1/1] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[conv1][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 8 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 20 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 5 en = 0
[conv1][1/1/1/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 3 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][3/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][3/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 13
[ConvLayerOfmapBuffer] actual output  = < -12 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 10
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 114 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv0][1/0/1/2] [padAndBufferize] At stream 0 = < 2 :: 2 >
[conv0][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 22, data = < 2 :: -1 >, en = 0
conv1f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/2] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv1][1/1/1/2] [padAndBufferize] At stream 0 = < -1 >
Line buffer inputVec = < -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[conv1][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -8 :: -2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerOfmapBuffer] input          = < -10 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 5 en = 0
[conv1][1/1/1/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 3 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][3/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 10 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][3/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 11 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 14
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 11
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 115 (192) nInputs 64
conv0f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv0][1/0/1/3] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 23, data = < -1 :: 1 >, en = 0
conv1f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv1][1/1/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[conv1][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 14 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 6 en = 0
[conv1][1/1/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 0
conv2f = 3 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][3/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][3/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -7 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 15
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 12
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 116 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv0][1/0/2/0] [padAndBufferize] At stream 0 = < -2 :: -2 >
[conv0][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 24, data = < 2 :: 0 >, en = 0
conv1f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv1][1/1/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv1][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 20 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 5 en = 0
[conv1][1/1/2/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 4 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][4/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -4 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -8 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][4/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -14 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -14 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 16
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 13
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 117 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv0][1/0/2/1] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 25, data = < -2 :: 2 >, en = 0
conv1f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/1] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv1][1/1/2/1] [padAndBufferize] At stream 0 = < -5 >
Line buffer inputVec = < -5 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[conv1][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -8 :: 0 :: 0 :: -10 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: -5 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -18 >
[ConvLayerOfmapBuffer] input          = < -18 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 5 en = 0
[conv1][1/1/2/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 0
conv2f = 4 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][4/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][4/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 17
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 14
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 118 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv0][1/0/2/2] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 26, data = < 1 :: 0 >, en = 0
conv1f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/2] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv1][1/1/2/2] [padAndBufferize] At stream 0 = < 6 >
Line buffer inputVec = < 6 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[conv1][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 10 :: 12 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 24 >
[ConvLayerOfmapBuffer] input          = < 24 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 36 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 5 en = 0
[conv1][1/1/2/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 2 :: 2 >, en = 1
conv2f = 4 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][4/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 10 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 20 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 20 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][4/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 18 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 18 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 18
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 15
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 119 (192) nInputs 64
conv0f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv0][1/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 1 >
[conv0][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 27, data = < 0 :: 0 >, en = 0
conv1f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv1][1/1/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[conv1][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: -12 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 6 en = 0
[conv1][1/1/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < -1 :: -1 >, en = 1
conv2f = 4 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][4/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -6 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -12 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < -12 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][4/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -13 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -13 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 19
[ConvLayerOfmapBuffer] actual output  = < -14 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 120 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: -2 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv0][1/0/3/0] [padAndBufferize] At stream 0 = < 1 :: -2 >
[conv0][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: -2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 28, data = < -1 :: 0 >, en = 0
conv1f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv1][1/1/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[conv1][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 6 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 9 en = 0
[conv1][1/1/3/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/1/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 0
conv2f = 5 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][5/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -4 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 8 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][5/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 20
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 17
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 121 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv0][1/0/3/1] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 29, data = < 2 :: -2 >, en = 0
conv1f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv1][1/1/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[conv1][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: -8 :: 0 :: 0 :: 10 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: -5 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 36 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 9 en = 0
[conv1][1/1/3/1] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/1/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 0
conv2f = 5 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][5/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][5/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 21
[ConvLayerOfmapBuffer] actual output  = < 18 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 18
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 122 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv0][1/0/3/2] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 30, data = < -1 :: 2 >, en = 0
conv1f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv1][1/1/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[conv1][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: -4 :: 2 :: 0 :: 0 :: -12 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -14 >
[ConvLayerOfmapBuffer] input          = < -14 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -16 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 9 en = 0
[conv1][1/1/3/2] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv1][1/1/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: -1 >, en = 1
conv2f = 5 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][5/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 10 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -20 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -20 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][5/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -21 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -21 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 22
[ConvLayerOfmapBuffer] actual output  = < -13 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 19
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 123 (192) nInputs 64
conv0f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv0][1/0/3/3] [padAndBufferize] At stream 0 = < 0 :: -1 >
[conv0][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < 0 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/0/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 31, data = < -2 :: -1 >, en = 0
conv1f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv1][1/1/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 4 :: 1 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: -1 :: 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 10 en = 0
[conv1][1/1/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 26, data = < -1 :: 2 >, en = 1
conv2f = 5 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][5/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -6 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 12 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][5/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 10 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 23
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 20
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 124 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv0][1/1/0/0] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/0] [getIfmapByOfmapAddr] At stream 0: addr = 16, data = < 1 :: 0 >, en = 1
conv1f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv1][0/0/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 12 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerOfmapBuffer] input          = < 12 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 5 en = 1
[conv1][0/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
conv2f = 6 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][6/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][6/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -10 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 24
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 21
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 125 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv0][1/1/0/1] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/1] [getIfmapByOfmapAddr] At stream 0: addr = 17, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv1][0/0/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 10 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -5 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerOfmapBuffer] input          = < 10 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -16 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 5 en = 1
[conv1][0/0/0/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
conv2f = 6 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][6/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][6/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 25
[ConvLayerOfmapBuffer] actual output  = < -21 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 22
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 126 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 2
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv0][1/1/0/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
[conv0][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/2] [getIfmapByOfmapAddr] At stream 0: addr = 18, data = < 1 :: 1 >, en = 1
conv1f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv1][0/0/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: -5 :: -12 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -17 >
[ConvLayerOfmapBuffer] input          = < -17 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < -17 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/2] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 5 en = 1
[conv1][0/0/0/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
conv2f = 6 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][6/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 10 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][6/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 26
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 23
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 127 (192) nInputs 64
conv0f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 3
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: 1 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv0][1/1/0/3] [padAndBufferize] At stream 0 = < 2 :: 1 >
[conv0][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/0/3] [getIfmapByOfmapAddr] At stream 0: addr = 19, data = < 2 :: 1 >, en = 0
conv1f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv1][0/0/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -5 :: 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < -10 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/0/3] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 6 en = 1
[conv1][0/0/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/0/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
conv2f = 6 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][6/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][6/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 27
[ConvLayerOfmapBuffer] actual output  = < -10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 24
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 128 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv0][1/1/1/0] [padAndBufferize] At stream 0 = < -2 :: 0 >
[conv0][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/0] [getIfmapByOfmapAddr] At stream 0: addr = 20, data = < -2 :: 0 >, en = 0
conv1f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv1][0/0/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 6 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 5 en = 1
[conv1][0/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
conv2f = 7 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -4 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/0/0/0] [padAndBufferize] At stream 0 = < -4 >
[conv2][7/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/0/0/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][7/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 28
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 25
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 129 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv0][1/1/1/1] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/1] [getIfmapByOfmapAddr] At stream 0: addr = 21, data = < 1 :: 0 >, en = 0
conv1f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 4 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 4 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv1][0/0/1/1] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[conv1][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -17 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv1][0/0/1/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -2 :: -2 >, en = 0
conv2f = 7 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/0/0/1] [padAndBufferize] At stream 0 = < 0 >
[conv2][7/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][7/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 29
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 26
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 130 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 2
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv0][1/1/1/2] [padAndBufferize] At stream 0 = < 2 :: -1 >
[conv0][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/2] [getIfmapByOfmapAddr] At stream 0: addr = 22, data = < 2 :: -1 >, en = 0
conv1f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv1][0/0/1/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[conv1][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 5 en = 1
[conv1][0/0/1/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 7 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 10 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/0/1/0] [padAndBufferize] At stream 0 = < 10 >
[conv2][7/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 10 >
[Conv2DKernel] ifmap = < 10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 0 >
[conv2][7/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 11 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 30
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 27
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 131 (192) nInputs 64
conv0f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 3
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv0][1/1/1/3] [padAndBufferize] At stream 0 = < -1 :: 1 >
[conv0][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/1/3] [getIfmapByOfmapAddr] At stream 0: addr = 23, data = < -1 :: 1 >, en = 0
conv1f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv1][0/0/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[conv1][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -10 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/1/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 6 en = 1
[conv1][0/0/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/0/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
conv2f = 7 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/0/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][7/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][7/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 31
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 28
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 132 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 2 ow = 0
ofmap buffer addr = 4
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv0][1/1/2/0] [padAndBufferize] At stream 0 = < 2 :: 0 >
[conv0][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/0] [getIfmapByOfmapAddr] At stream 0: addr = 24, data = < 2 :: 0 >, en = 1
conv1f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv1][0/0/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 5 en = 1
[conv1][0/0/2/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 0 c = 1 h = 0 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 36 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 36 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 36 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 36 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 36 >
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/0] [bufferizeIfmap] At stream 1: data = < 2 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][0/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < 28 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < 20 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 29
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 133 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 1
ofmap buffer addr = 5
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv0][1/1/2/1] [padAndBufferize] At stream 0 = < -2 :: 2 >
[conv0][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -2 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/1] [getIfmapByOfmapAddr] At stream 0: addr = 25, data = < -2 :: 2 >, en = 0
conv1f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv1][0/0/2/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[conv1][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/1] [bufferizeIfmap] At stream 1: data = < -2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 5 en = 1
[conv1][0/0/2/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 0 c = 1 h = 0 w = 1
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -10 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/1] [bufferizeIfmap] At stream 0: data = < -10 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: -1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][0/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 30
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 134 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 2 ow = 2
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv0][1/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
[conv0][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/2] [getIfmapByOfmapAddr] At stream 0: addr = 26, data = < 1 :: 0 >, en = 1
conv1f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 4 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 4 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv1][0/0/2/2] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[conv1][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: -4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 36 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 5 en = 1
[conv1][0/0/2/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 0 c = 1 h = 1 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -16 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/0] [bufferizeIfmap] At stream 0: data = < -16 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -16 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -16 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -16 >
[ConvLayerIfmapBuffer] input = < 2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/0] [bufferizeIfmap] At stream 1: data = < 2 :: -1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][0/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -18 >
[ConvLayerOfmapBuffer] read           = < 20 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 31
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 14 0 (192) nInputs 64
UNPADDING: 135 (192) nInputs 64
conv0f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 2 ow = 3
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv0][1/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
[conv0][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/2/3] [getIfmapByOfmapAddr] At stream 0: addr = 27, data = < 0 :: 0 >, en = 0
conv1f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv1][0/0/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[conv1][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 8 :: 0 :: 0 :: 0 :: -4 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -10 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/2/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 6 en = 1
[conv1][0/0/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/0/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
conv2f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][0/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < -12 >
[ConvLayerOfmapBuffer] output         = < -20 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 20 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffa 1 (192) nInputs 64
UNPADDING: 136 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 0
ofmap buffer addr = 6
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/0] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv0][1/1/3/0] [padAndBufferize] At stream 0 = < -1 :: 0 >
[conv0][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/0] [getIfmapByOfmapAddr] At stream 0: addr = 28, data = < -1 :: 0 >, en = 0
conv1f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv1][0/0/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[conv1][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -16 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 9 en = 1
[conv1][0/0/3/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 0
conv2f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 36 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -72 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -72 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][1/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -74 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < -68 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 4
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 2 2 (192) nInputs 64
UNPADDING: 137 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 1
ofmap buffer addr = 7
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < 2 :: -2 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv0][1/1/3/1] [padAndBufferize] At stream 0 = < 2 :: -2 >
[conv0][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 2 :: -2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/1] [getIfmapByOfmapAddr] At stream 0: addr = 29, data = < 2 :: -2 >, en = 0
conv1f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv1][0/0/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: -8 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < -16 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 9 en = 1
[conv1][0/0/3/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 0
conv2f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -10 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 20 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 20 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][1/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 21 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 19 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 5
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffec 3 (192) nInputs 64
UNPADDING: 138 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 2
ofmap buffer addr = 8
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/2] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv0][1/1/3/2] [padAndBufferize] At stream 0 = < -1 :: 2 >
[conv0][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/2] [getIfmapByOfmapAddr] At stream 0: addr = 30, data = < -1 :: 2 >, en = 0
conv1f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv1][0/0/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[conv1][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 4 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -16 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 9 en = 1
[conv1][0/0/3/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/0/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 0
conv2f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -16 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 32 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 32 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][1/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 30 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < 22 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 6
[ConvLayerOfmapBuffer] actual output  = < -20 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffbc 4 (192) nInputs 64
UNPADDING: 139 (192) nInputs 64
conv0f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 3 ow = 3
ofmap buffer addr = 9
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/3] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv0][1/1/3/3] [padAndBufferize] At stream 0 = < -2 :: -1 >
[conv0][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -1 >
[Conv2DKernel] coeff = < -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[conv0][1/1/3/3] [getIfmapByOfmapAddr] At stream 0: addr = 31, data = < -2 :: -1 >, en = 0
conv1f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv1][0/0/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/0/3/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 10 en = 1
[conv1][0/0/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/0/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 10, data = < -1 :: 1 >, en = 0
conv2f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -6 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 12 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][1/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 13 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < 22 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 7
[ConvLayerOfmapBuffer] actual output  = < -68 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 4
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 13 5 (192) nInputs 64
UNPADDING: 140 (192) nInputs 64
conv1f = 0 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv1][0/1/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 5 en = 1
[conv1][0/1/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 2 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][2/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 36 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -36 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -36 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][2/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -34 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < -32 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 8
[ConvLayerOfmapBuffer] actual output  = < 19 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 5
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 16 6 (192) nInputs 64
UNPADDING: 141 (192) nInputs 64
conv1f = 0 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv1][0/1/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 5 en = 1
[conv1][0/1/0/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 2 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][2/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -10 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 10 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][2/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 9
[ConvLayerOfmapBuffer] actual output  = < 22 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 6
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 16 7 (192) nInputs 64
UNPADDING: 142 (192) nInputs 64
conv1f = 0 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv1][0/1/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: -4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/2] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 5 en = 1
[conv1][0/1/0/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 2 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][2/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -16 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 16 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 16 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][2/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 15 >
[ConvLayerOfmapBuffer] read           = < -12 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 10
[ConvLayerOfmapBuffer] actual output  = < 22 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 7
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffe0 8 (192) nInputs 64
UNPADDING: 143 (192) nInputs 64
conv1f = 0 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv1][0/1/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/0/3] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 6 en = 1
[conv1][0/1/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
conv2f = 2 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][2/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][2/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 11
[ConvLayerOfmapBuffer] actual output  = < -32 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 8
[ConvLayerOfmapBuffer] latency        = 3
PADDING: b 9 (192) nInputs 64
UNPADDING: 144 (192) nInputs 64
conv1f = 0 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv1][0/1/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 5 en = 1
[conv1][0/1/1/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 3 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][3/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 36 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 36 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 36 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][3/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < 32 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 34 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 12
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 9
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 3 10 (192) nInputs 64
UNPADDING: 145 (192) nInputs 64
conv1f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/1] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv1][0/1/1/1] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[conv1][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 5 en = 1
[conv1][0/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 3 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][3/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][3/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 13
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 10
[ConvLayerOfmapBuffer] latency        = 3
PADDING: b 11 (192) nInputs 64
UNPADDING: 146 (192) nInputs 64
conv1f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 >
[ConvLayerIfmapBuffer] output = < -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/2] [bufferizeIfmap] At stream 0: data = < -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv1][0/1/1/2] [padAndBufferize] At stream 0 = < -1 >
Line buffer inputVec = < -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[conv1][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/2] [bufferizeIfmap] At stream 1: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 5 en = 1
[conv1][0/1/1/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 3 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][3/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -16 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -16 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -16 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][3/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -17 >
[ConvLayerOfmapBuffer] read           = < 11 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 14
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 11
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 22 12 (192) nInputs 64
UNPADDING: 147 (192) nInputs 64
conv1f = 0 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv1][0/1/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[conv1][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/1/3] [bufferizeIfmap] At stream 1: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 6 en = 1
[conv1][0/1/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 0
conv2f = 3 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][3/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][3/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -7 >
[ConvLayerOfmapBuffer] read           = < -7 >
[ConvLayerOfmapBuffer] output         = < -14 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 15
[ConvLayerOfmapBuffer] actual output  = < 34 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 12
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff7 13 (192) nInputs 64
UNPADDING: 148 (192) nInputs 64
conv1f = 0 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv1][0/1/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv1][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/0] [bufferizeIfmap] At stream 1: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 5 en = 1
[conv1][0/1/2/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 4 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][4/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 36 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][4/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < -14 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 16
[ConvLayerOfmapBuffer] actual output  = < -9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 13
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffa 14 (192) nInputs 64
UNPADDING: 149 (192) nInputs 64
conv1f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv1][0/1/2/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv1][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/1] [bufferizeIfmap] At stream 1: data = < 2 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 5 en = 1
[conv1][0/1/2/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 0
conv2f = 4 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][4/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -10 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][4/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 17
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 14
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff2 15 (192) nInputs 64
UNPADDING: 150 (192) nInputs 64
conv1f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv1][0/1/2/2] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[conv1][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 4 :: 1 :: 0 :: 0 :: -2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 5 en = 1
[conv1][0/1/2/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 5, data = < -1 :: 1 >, en = 1
conv2f = 4 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][4/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -16 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][4/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 18 >
[ConvLayerOfmapBuffer] output         = < 18 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 18
[ConvLayerOfmapBuffer] actual output  = < -14 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 15
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff8 16 (192) nInputs 64
UNPADDING: 151 (192) nInputs 64
conv1f = 0 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv1][0/1/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[conv1][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/2/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 6 en = 1
[conv1][0/1/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][0/1/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 6, data = < 1 :: 0 >, en = 1
conv2f = 4 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][4/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][4/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < -13 >
[ConvLayerOfmapBuffer] output         = < -10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 19
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffff 17 (192) nInputs 64
UNPADDING: 152 (192) nInputs 64
conv1f = 0 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv1][0/1/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv1][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 9 en = 1
[conv1][0/1/3/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 0
conv2f = 5 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][5/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 36 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 36 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 36 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][5/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 40 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 48 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 20
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 17
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 12 18 (192) nInputs 64
UNPADDING: 153 (192) nInputs 64
conv1f = 0 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv1][0/1/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 9 en = 1
[conv1][0/1/3/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 0
conv2f = 5 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][5/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -10 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -10 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][5/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -12 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 21
[ConvLayerOfmapBuffer] actual output  = < 18 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 18
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff6 19 (192) nInputs 64
UNPADDING: 154 (192) nInputs 64
conv1f = 0 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv1][0/1/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv1][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 9 en = 1
[conv1][0/1/3/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][0/1/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 9, data = < -2 :: -2 >, en = 1
conv2f = 5 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][5/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -16 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -16 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -16 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][5/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < -12 >
[ConvLayerOfmapBuffer] read           = < -21 >
[ConvLayerOfmapBuffer] output         = < -33 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 22
[ConvLayerOfmapBuffer] actual output  = < -10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 19
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 30 20 (192) nInputs 64
UNPADDING: 155 (192) nInputs 64
conv1f = 0 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv1][0/1/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[conv1][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv1][0/1/3/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 10 en = 1
[conv1][0/1/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][0/1/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 10, data = < -1 :: 1 >, en = 1
conv2f = 5 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][5/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][5/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 10 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 23
[ConvLayerOfmapBuffer] actual output  = < 48 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 20
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff5 21 (192) nInputs 64
UNPADDING: 156 (192) nInputs 64
conv1f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv1][1/0/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 1 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 5 en = 0
[conv1][1/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 6 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][6/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 36 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][6/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -10 >
[ConvLayerOfmapBuffer] output         = < -16 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 24
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 21
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffdf 22 (192) nInputs 64
UNPADDING: 157 (192) nInputs 64
conv1f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv1][1/0/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 5 en = 0
[conv1][1/0/0/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 6 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][6/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -10 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][6/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 1 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 25
[ConvLayerOfmapBuffer] actual output  = < -33 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 22
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 2 23 (192) nInputs 64
UNPADDING: 158 (192) nInputs 64
conv1f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv1][1/0/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 5 en = 0
[conv1][1/0/0/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 6 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][6/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -16 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][6/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 26
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 23
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff0 24 (192) nInputs 64
UNPADDING: 159 (192) nInputs 64
conv1f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv1][1/0/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/0/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 6 en = 0
[conv1][1/0/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 0
conv2f = 6 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][6/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][6/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 27
[ConvLayerOfmapBuffer] actual output  = < -16 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 24
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 4 25 (192) nInputs 64
UNPADDING: 160 (192) nInputs 64
conv1f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv1][1/0/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 5 en = 0
[conv1][1/0/1/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 7 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < 36 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/1/0/0] [padAndBufferize] At stream 0 = < 36 >
[conv2][7/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 36 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 36 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: 2 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/1/0/0] [padAndBufferize] At stream 1 = < 2 :: 2 >
[conv2][7/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 2 :: 2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 28
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 25
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 9 26 (192) nInputs 64
UNPADDING: 161 (192) nInputs 64
conv1f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/1] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv1][1/0/1/1] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[conv1][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 8 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv1][1/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 7 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -10 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/1/0/1] [padAndBufferize] At stream 0 = < -10 >
[conv2][7/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -10 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -10 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/1/0/1] [padAndBufferize] At stream 1 = < -1 :: -1 >
[conv2][7/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: -1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 29
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 26
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff8 27 (192) nInputs 64
UNPADDING: 162 (192) nInputs 64
conv1f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv1][1/0/1/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[conv1][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 8 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 5 en = 0
[conv1][1/0/1/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 7 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -16 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/0] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/1/1/0] [padAndBufferize] At stream 0 = < -16 >
[conv2][7/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -16 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -16 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < 2 :: -1 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/1/1/0] [padAndBufferize] At stream 1 = < 2 :: -1 >
[conv2][7/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 :: -1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 11 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 30
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 27
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 4 28 (192) nInputs 64
UNPADDING: 163 (192) nInputs 64
conv1f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv1][1/0/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[conv1][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -8 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/1/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 6 en = 0
[conv1][1/0/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 0
conv2f = 7 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -6 >
[ConvLayerIfmapBuffer] output = < -6 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/1] [bufferizeIfmap] At stream 0: data = < -6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/1/1/1] [padAndBufferize] At stream 0 = < -6 >
[conv2][7/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < -1 :: 2 >
[ConvLayerIfmapBuffer] output = < -1 :: 2 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 2 >
[conv2][7/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -1 :: 2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 31
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 28
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffc 29 (192) nInputs 64
UNPADDING: 164 (192) nInputs 64
conv1f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv1][1/0/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 5 en = 0
[conv1][1/0/2/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 0 c = 0 h = 0 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 3 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 3 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 3 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][0/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < 20 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 29
[ConvLayerOfmapBuffer] latency        = 3
PADDING: b 30 (192) nInputs 64
UNPADDING: 165 (192) nInputs 64
conv1f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/1] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv1][1/0/2/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[conv1][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 5 en = 0
[conv1][1/0/2/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 0 c = 0 h = 0 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 6 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 12 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][0/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 12 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 30
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffe 31 (192) nInputs 64
UNPADDING: 166 (192) nInputs 64
conv1f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv1][1/0/2/2] [padAndBufferize] At stream 0 = < 4 >
Line buffer inputVec = < 4 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[conv1][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 8 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 5 en = 0
[conv1][1/0/2/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 0 c = 0 h = 1 w = 0
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 3 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 3 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 3 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/0] [bufferizeIfmap] At stream 1: data = < -2 :: -2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][0/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 6 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 31
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 167 (192) nInputs 64
conv1f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv1][1/0/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[conv1][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -8 :: 0 :: 0 :: 0 :: 8 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/2/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 6 en = 0
[conv1][1/0/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/0/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 0
conv2f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < 8 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 16 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 16 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][0/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 0 :: 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 16 >
[ConvLayerOfmapBuffer] read           = < -20 >
[ConvLayerOfmapBuffer] output         = < 16 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 168 (192) nInputs 64
conv1f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv1][1/0/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[conv1][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -8 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 9 en = 0
[conv1][1/0/3/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 0
conv2f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][1/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < -68 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 4
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 169 (192) nInputs 64
conv1f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv1][1/0/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 9 en = 0
[conv1][1/0/3/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 0
conv2f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][1/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 19 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 5
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 170 (192) nInputs 64
conv1f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv1][1/0/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[conv1][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 9 en = 0
[conv1][1/0/3/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/0/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 0
conv2f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][1/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 22 >
[ConvLayerOfmapBuffer] output         = < -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 6
[ConvLayerOfmapBuffer] actual output  = < 16 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 171 (192) nInputs 64
conv1f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv1][1/0/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[DotProd] vecC = < -4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/0/3/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 10 en = 0
[conv1][1/0/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/0/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 26, data = < 1 :: 0 >, en = 0
conv2f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < 8 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -8 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][1/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < 22 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 7
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 4
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 172 (192) nInputs 64
conv1f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv1][1/1/0/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 5 en = 0
[conv1][1/1/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/0/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 2 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][2/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][2/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -32 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 8
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 5
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 173 (192) nInputs 64
conv1f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv1][1/1/0/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 5 en = 0
[conv1][1/1/0/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/0/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 2 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][2/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][2/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 11 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 9
[ConvLayerOfmapBuffer] actual output  = < -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 6
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 174 (192) nInputs 64
conv1f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv1][1/1/0/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: -8 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 5 en = 0
[conv1][1/1/0/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/0/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 2 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][2/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][2/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < 3 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 10
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 7
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 175 (192) nInputs 64
conv1f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv1][1/1/0/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: -4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/0/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 6 en = 0
[conv1][1/1/0/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/0/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 0
conv2f = 2 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][2/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < 8 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -8 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][2/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 4
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: -1 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -11 >
[ConvLayerOfmapBuffer] read           = < 11 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 11
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 8
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 176 (192) nInputs 64
conv1f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv1][1/1/1/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 5 en = 0
[conv1][1/1/1/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/1/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 3 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][3/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][3/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 34 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 12
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 9
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 177 (192) nInputs 64
conv1f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/1] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv1][1/1/1/1] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[conv1][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 5 en = 0
[conv1][1/1/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/1/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 3 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][3/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][3/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -9 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 13
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 10
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 178 (192) nInputs 64
conv1f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv1][1/1/1/2] [padAndBufferize] At stream 0 = < -1 >
Line buffer inputVec = < -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[conv1][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -2 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 5 en = 0
[conv1][1/1/1/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/1/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 3 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][3/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][3/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 14
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 11
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 179 (192) nInputs 64
conv1f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv1][1/1/1/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[conv1][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/1/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 6 en = 0
[conv1][1/1/1/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/1/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 0
conv2f = 3 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][3/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < 8 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 8 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][3/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 6
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 7 >
[ConvLayerOfmapBuffer] read           = < -14 >
[ConvLayerOfmapBuffer] output         = < 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 15
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 12
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 180 (192) nInputs 64
conv1f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv1][1/1/2/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv1][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 5 en = 0
[conv1][1/1/2/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/2/0] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 4 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][4/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 3 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][4/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 16
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 13
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 181 (192) nInputs 64
conv1f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/1] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv1][1/1/2/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv1][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 5 en = 0
[conv1][1/1/2/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/2/1] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 0
conv2f = 4 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][4/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 6 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 12 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 12 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][4/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 14 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < 14 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 17
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 14
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 182 (192) nInputs 64
conv1f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 >
[ConvLayerIfmapBuffer] output = < -2 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/2] [bufferizeIfmap] At stream 0: data = < -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv1][1/1/2/2] [padAndBufferize] At stream 0 = < -2 >
Line buffer inputVec = < -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[conv1][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: -4 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 8 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 5 en = 0
[conv1][1/1/2/2] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/2/2] [getIfmapByOfmapAddr] At stream 1: addr = 21, data = < 1 :: 0 >, en = 1
conv2f = 4 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][4/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 3 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][4/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 18 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 18
[ConvLayerOfmapBuffer] actual output  = < 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 15
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 183 (192) nInputs 64
conv1f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv1][1/1/2/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[conv1][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 4 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/2/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 6 en = 0
[conv1][1/1/2/3] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv1][1/1/2/3] [getIfmapByOfmapAddr] At stream 1: addr = 22, data = < 1 :: 1 >, en = 1
conv2f = 4 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][4/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < 8 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 16 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < 2 >
[Conv2DKernel] ofmap = < 16 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][4/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 8
[DotProd] vecA = < -1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 2 :: 1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 15 >
[ConvLayerOfmapBuffer] read           = < -10 >
[ConvLayerOfmapBuffer] output         = < 15 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 19
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 184 (192) nInputs 64
conv1f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv1][1/1/3/0] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv1][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 9 en = 0
[conv1][1/1/3/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/3/0] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 0
conv2f = 5 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][5/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 3 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][5/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -8 >
[ConvLayerOfmapBuffer] read           = < 48 >
[ConvLayerOfmapBuffer] output         = < -8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 20
[ConvLayerOfmapBuffer] actual output  = < 14 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 17
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 185 (192) nInputs 64
conv1f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv1][1/1/3/1] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 9 en = 0
[conv1][1/1/3/1] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/3/1] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 0
conv2f = 5 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][5/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 6 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -12 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -12 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][5/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < -11 >
[ConvLayerOfmapBuffer] read           = < -11 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 21
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 18
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 186 (192) nInputs 64
conv1f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv1][1/1/3/2] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv1][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < 0 :: 2 :: 2 :: 0 :: 0 :: 4 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/2] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 9 en = 0
[conv1][1/1/3/2] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv1][1/1/3/2] [getIfmapByOfmapAddr] At stream 1: addr = 25, data = < 2 :: 0 >, en = 1
conv2f = 5 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][5/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 3 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][5/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -33 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 22
[ConvLayerOfmapBuffer] actual output  = < 15 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 19
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 187 (192) nInputs 64
conv1f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 >
[ConvLayerIfmapBuffer] output = < 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv1][1/1/3/3] [padAndBufferize] At stream 0 = < 0 >
Line buffer inputVec = < 0 >
Line buffer outputVec = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[conv1][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[DotProd] vecC = < -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 1 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv1][1/1/3/3] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 10 en = 0
[conv1][1/1/3/3] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv1][1/1/3/3] [getIfmapByOfmapAddr] At stream 1: addr = 26, data = < 1 :: 0 >, en = 1
conv2f = 5 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][5/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < 8 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -16 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -16 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][5/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 10
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -18 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < -18 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 23
[ConvLayerOfmapBuffer] actual output  = < -8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 20
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 188 (192) nInputs 64
conv2f = 6 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][6/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][6/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -16 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 24
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 21
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 189 (192) nInputs 64
conv2f = 6 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][6/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][6/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 7 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 25
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 22
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 190 (192) nInputs 64
conv2f = 6 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][6/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][6/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < -3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 26
[ConvLayerOfmapBuffer] actual output  = < -18 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 23
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 191 (192) nInputs 64
conv2f = 6 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][6/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < 8 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 8 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][6/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 12
[DotProd] vecA = < -1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 27
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 24
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 7 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/0/0/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][7/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/0/0/0] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][7/0/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 28
[ConvLayerOfmapBuffer] actual output  = < 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 25
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 7 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/0/0/1] [padAndBufferize] At stream 0 = < 6 >
[conv2][7/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/0/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/0/0/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][7/0/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 29
[ConvLayerOfmapBuffer] actual output  = < -3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 26
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 7 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 3 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/0] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/0/1/0] [padAndBufferize] At stream 0 = < 3 >
[conv2][7/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 3 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 3 >
[Conv2DKernel] ifmap = < 3 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/0] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/0/1/0] [padAndBufferize] At stream 1 = < -2 :: -2 >
[conv2][7/0/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < -2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -2 :: -2 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 11 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 30
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 27
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 7 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 8 >
[ConvLayerIfmapBuffer] output = < 8 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/1] [bufferizeIfmap] At stream 0: data = < 8 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/0/1/1] [padAndBufferize] At stream 0 = < 8 >
[conv2][7/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < 8 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 8 >
[Conv2DKernel] ifmap = < 8 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 8 >
[ConvLayerIfmapBuffer] input = < -1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: 1 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/0/1/1] [bufferizeIfmap] At stream 1: data = < -1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/0/1/1] [padAndBufferize] At stream 1 = < -1 :: 1 >
[conv2][7/0/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 14
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < -2 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 31
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 28
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 0 c = 1 h = 0 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 6 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 6 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv2][0/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][0/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 29
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 0 c = 1 h = 0 w = 1
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 2 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 2 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 1 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv2][0/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][0/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < 12 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 30
[ConvLayerOfmapBuffer] latency        = 3
conv2f = 0 c = 1 h = 1 w = 0
ifmapEn = 1
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 4 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/0] [bufferizeIfmap] At stream 0: data = < 4 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerIfmapBuffer] input = < 2 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/0] [bufferizeIfmap] At stream 1: data = < 2 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv2][0/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][0/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 6 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 31
[ConvLayerOfmapBuffer] latency        = 3
PADDING: a 32 (192) nInputs 64
conv2f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < -5 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -5 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -5 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv2][0/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv2][0/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][0/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: -2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -7 >
[ConvLayerOfmapBuffer] read           = < 16 >
[ConvLayerOfmapBuffer] output         = < 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: a 33 (192) nInputs 64
conv2f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 6 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -12 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -12 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][1/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][1/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -13 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < -13 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 4
[ConvLayerOfmapBuffer] actual output  = < 10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 6 34 (192) nInputs 64
conv2f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][1/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][1/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -5 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < -13 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 5
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 9 35 (192) nInputs 64
conv2f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 4 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -8 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < -8 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][1/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][1/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -10 >
[ConvLayerOfmapBuffer] read           = < -1 >
[ConvLayerOfmapBuffer] output         = < -11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 6
[ConvLayerOfmapBuffer] actual output  = < 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff3 36 (192) nInputs 64
conv2f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < -5 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 10 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < -2 >
[Conv2DKernel] ofmap = < 10 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][1/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][1/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][1/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 0 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 9 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 7
[ConvLayerOfmapBuffer] actual output  = < -13 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 4
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff3 37 (192) nInputs 64
conv2f = 2 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][2/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 6 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -6 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][2/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][2/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < -12 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 8
[ConvLayerOfmapBuffer] actual output  = < -13 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 5
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff5 38 (192) nInputs 64
conv2f = 2 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][2/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][2/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][2/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < -4 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 9
[ConvLayerOfmapBuffer] actual output  = < -11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 6
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 4 39 (192) nInputs 64
conv2f = 2 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][2/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 4 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < -4 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][2/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][2/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < -4 >
[ConvLayerOfmapBuffer] read           = < -5 >
[ConvLayerOfmapBuffer] output         = < -9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 10
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 7
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff4 40 (192) nInputs 64
conv2f = 2 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][2/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < -5 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 5 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < -1 >
[Conv2DKernel] ofmap = < 5 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][2/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][2/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][2/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 5
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: 1 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < -11 >
[ConvLayerOfmapBuffer] output         = < -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 11
[ConvLayerOfmapBuffer] actual output  = < -12 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 8
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffb 41 (192) nInputs 64
conv2f = 3 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][3/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][3/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][3/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < 5 >
[ConvLayerOfmapBuffer] read           = < 2 >
[ConvLayerOfmapBuffer] output         = < 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 12
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 9
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff7 42 (192) nInputs 64
conv2f = 3 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][3/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][3/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][3/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 0 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 13
[ConvLayerOfmapBuffer] actual output  = < -9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 10
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffa 43 (192) nInputs 64
conv2f = 3 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][3/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][3/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][3/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 14
[ConvLayerOfmapBuffer] actual output  = < -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 11
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 7 44 (192) nInputs 64
conv2f = 3 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][3/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < -5 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -5 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -5 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][3/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][3/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][3/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 7
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -1 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -6 >
[ConvLayerOfmapBuffer] read           = < 7 >
[ConvLayerOfmapBuffer] output         = < 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 15
[ConvLayerOfmapBuffer] actual output  = < 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 12
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 5 45 (192) nInputs 64
conv2f = 4 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][4/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][4/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][4/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 16
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 13
[ConvLayerOfmapBuffer] latency        = 3
PADDING: b 46 (192) nInputs 64
conv2f = 4 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][4/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][4/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][4/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 14 >
[ConvLayerOfmapBuffer] output         = < 17 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 17
[ConvLayerOfmapBuffer] actual output  = < 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 14
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 1 47 (192) nInputs 64
conv2f = 4 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][4/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][4/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][4/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 0 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 18
[ConvLayerOfmapBuffer] actual output  = < 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 15
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 6 48 (192) nInputs 64
conv2f = 4 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][4/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < -5 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][4/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][4/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][4/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 9
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 15 >
[ConvLayerOfmapBuffer] output         = < 16 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 19
[ConvLayerOfmapBuffer] actual output  = < 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 16
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 11 49 (192) nInputs 64
conv2f = 5 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][5/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 6 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 6 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][5/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][5/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < -8 >
[ConvLayerOfmapBuffer] output         = < 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 20
[ConvLayerOfmapBuffer] actual output  = < 17 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 17
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 2 50 (192) nInputs 64
conv2f = 5 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][5/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][5/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][5/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 4 >
[ConvLayerOfmapBuffer] read           = < -11 >
[ConvLayerOfmapBuffer] output         = < -7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 21
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 18
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 10 51 (192) nInputs 64
conv2f = 5 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][5/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 4 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 4 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][5/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][5/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 2 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 4 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 4 >
[ConvLayerOfmapBuffer] input          = < 8 >
[ConvLayerOfmapBuffer] read           = < -6 >
[ConvLayerOfmapBuffer] output         = < 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 22
[ConvLayerOfmapBuffer] actual output  = < 16 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 19
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 0 52 (192) nInputs 64
conv2f = 5 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][5/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < -5 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < -5 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 1 >
[Conv2DKernel] ofmap = < -5 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][5/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][5/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][5/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 11
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 2 :: 0 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < -18 >
[ConvLayerOfmapBuffer] output         = < -21 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 23
[ConvLayerOfmapBuffer] actual output  = < 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 20
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fff9 53 (192) nInputs 64
conv2f = 6 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][6/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][6/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][6/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 24
[ConvLayerOfmapBuffer] actual output  = < -7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 21
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 2 54 (192) nInputs 64
conv2f = 6 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][6/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][6/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][6/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -3 >
[ConvLayerOfmapBuffer] input          = < -3 >
[ConvLayerOfmapBuffer] read           = < 7 >
[ConvLayerOfmapBuffer] output         = < 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 25
[ConvLayerOfmapBuffer] actual output  = < 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 22
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ffeb 55 (192) nInputs 64
conv2f = 6 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][6/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][6/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][6/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -2 >
[ConvLayerOfmapBuffer] input          = < -2 >
[ConvLayerOfmapBuffer] read           = < -3 >
[ConvLayerOfmapBuffer] output         = < -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 26
[ConvLayerOfmapBuffer] actual output  = < -21 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 23
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 3 56 (192) nInputs 64
conv2f = 6 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][6/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < -5 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][6/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][6/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][6/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 13
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: -2 >
[Conv2DKernel] ofmap = < -1 >
[ConvLayerOfmapBuffer] input          = < -1 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 27
[ConvLayerOfmapBuffer] actual output  = < 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 24
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 4 57 (192) nInputs 64
conv2f = 7 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 6 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/1/0/0] [padAndBufferize] At stream 0 = < 6 >
[conv2][7/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 6 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv2][7/1/0/0] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][7/1/0/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 4 >
[ConvLayerOfmapBuffer] output         = < 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 28
[ConvLayerOfmapBuffer] actual output  = < 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 25
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fffb 58 (192) nInputs 64
conv2f = 7 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 2 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/1/0/1] [padAndBufferize] At stream 0 = < 2 >
[conv2][7/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 2 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/0/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv2][7/1/0/1] [padAndBufferize] At stream 1 = < 1 :: 1 >
[conv2][7/1/0/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < 1 :: 1 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 3 >
[ConvLayerOfmapBuffer] input          = < 3 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 29
[ConvLayerOfmapBuffer] actual output  = < -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 26
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 8 59 (192) nInputs 64
conv2f = 7 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < 4 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/0] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/1/1/0] [padAndBufferize] At stream 0 = < 4 >
[conv2][7/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 4 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 2 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/0] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv2][7/1/1/0] [padAndBufferize] At stream 1 = < 2 :: 0 >
[conv2][7/1/1/0] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 2 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 2 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 2 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 2 >
[ConvLayerOfmapBuffer] input          = < 2 >
[ConvLayerOfmapBuffer] read           = < 5 >
[ConvLayerOfmapBuffer] output         = < 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 30
[ConvLayerOfmapBuffer] actual output  = < 8 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 27
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 5 60 (192) nInputs 64
conv2f = 7 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -5 >
[ConvLayerIfmapBuffer] output = < -5 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/1] [bufferizeIfmap] At stream 0: data = < -5 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/1/1/1] [padAndBufferize] At stream 0 = < -5 >
[conv2][7/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < -5 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -5 >
[Conv2DKernel] coeff = < 0 >
[Conv2DKernel] ofmap = < 0 >
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv2][7/1/1/1] [bufferizeIfmap] At stream 1: data = < 1 :: 0 >, write addr (dfeFix(2, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv2][7/1/1/1] [padAndBufferize] At stream 1 = < 1 :: 0 >
[conv2][7/1/1/1] [initAndReadCoeff] stream 1: addr (dfeFix(4, 0, UNSIGNED)) = 15
[DotProd] vecA = < 1 >
[DotProd] vecB = < 1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 1 :: 0 >
[Conv2DKernel] coeff = < 1 :: 2 >
[Conv2DKernel] ofmap = < 1 >
[ConvLayerOfmapBuffer] input          = < 1 >
[ConvLayerOfmapBuffer] read           = < 9 >
[ConvLayerOfmapBuffer] output         = < 10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 31
[ConvLayerOfmapBuffer] actual output  = < 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 28
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 8 61 (192) nInputs 64
PADDING: 7 62 (192) nInputs 64
PADDING: a 63 (192) nInputs 64
PADDING: a 64 (192) nInputs 64
PADDING: a 65 (192) nInputs 64
PADDING: a 66 (192) nInputs 64
PADDING: a 67 (192) nInputs 64
PADDING: a 68 (192) nInputs 64
PADDING: a 69 (192) nInputs 64
PADDING: a 70 (192) nInputs 64
PADDING: a 71 (192) nInputs 64
PADDING: a 72 (192) nInputs 64
PADDING: a 73 (192) nInputs 64
PADDING: a 74 (192) nInputs 64
PADDING: a 75 (192) nInputs 64
PADDING: a 76 (192) nInputs 64
PADDING: a 77 (192) nInputs 64
PADDING: a 78 (192) nInputs 64
PADDING: a 79 (192) nInputs 64
PADDING: a 80 (192) nInputs 64
PADDING: a 81 (192) nInputs 64
PADDING: a 82 (192) nInputs 64
PADDING: a 83 (192) nInputs 64
PADDING: a 84 (192) nInputs 64
PADDING: a 85 (192) nInputs 64
PADDING: a 86 (192) nInputs 64
PADDING: a 87 (192) nInputs 64
PADDING: a 88 (192) nInputs 64
PADDING: a 89 (192) nInputs 64
PADDING: a 90 (192) nInputs 64
PADDING: a 91 (192) nInputs 64
PADDING: a 92 (192) nInputs 64
PADDING: a 93 (192) nInputs 64
PADDING: a 94 (192) nInputs 64
PADDING: a 95 (192) nInputs 64
PADDING: a 96 (192) nInputs 64
PADDING: a 97 (192) nInputs 64
PADDING: a 98 (192) nInputs 64
PADDING: a 99 (192) nInputs 64
PADDING: a 100 (192) nInputs 64
PADDING: a 101 (192) nInputs 64
PADDING: a 102 (192) nInputs 64
PADDING: a 103 (192) nInputs 64
PADDING: a 104 (192) nInputs 64
PADDING: a 105 (192) nInputs 64
PADDING: a 106 (192) nInputs 64
PADDING: a 107 (192) nInputs 64
PADDING: a 108 (192) nInputs 64
PADDING: a 109 (192) nInputs 64
PADDING: a 110 (192) nInputs 64
PADDING: a 111 (192) nInputs 64
PADDING: a 112 (192) nInputs 64
PADDING: a 113 (192) nInputs 64
PADDING: a 114 (192) nInputs 64
PADDING: a 115 (192) nInputs 64
PADDING: a 116 (192) nInputs 64
PADDING: a 117 (192) nInputs 64
PADDING: a 118 (192) nInputs 64
PADDING: a 119 (192) nInputs 64
PADDING: a 120 (192) nInputs 64
PADDING: a 121 (192) nInputs 64
PADDING: a 122 (192) nInputs 64
PADDING: a 123 (192) nInputs 64
PADDING: a 124 (192) nInputs 64
PADDING: a 125 (192) nInputs 64
PADDING: a 126 (192) nInputs 64
PADDING: a 127 (192) nInputs 64
PADDING: a 128 (192) nInputs 64
PADDING: a 129 (192) nInputs 64
PADDING: a 130 (192) nInputs 64
PADDING: a 131 (192) nInputs 64
PADDING: a 132 (192) nInputs 64
PADDING: a 133 (192) nInputs 64
PADDING: a 134 (192) nInputs 64
PADDING: a 135 (192) nInputs 64
PADDING: a 136 (192) nInputs 64
PADDING: a 137 (192) nInputs 64
PADDING: a 138 (192) nInputs 64
PADDING: a 139 (192) nInputs 64
PADDING: a 140 (192) nInputs 64
PADDING: a 141 (192) nInputs 64
PADDING: a 142 (192) nInputs 64
PADDING: a 143 (192) nInputs 64
PADDING: a 144 (192) nInputs 64
PADDING: a 145 (192) nInputs 64
PADDING: a 146 (192) nInputs 64
PADDING: a 147 (192) nInputs 64
PADDING: a 148 (192) nInputs 64
PADDING: a 149 (192) nInputs 64
PADDING: a 150 (192) nInputs 64
PADDING: a 151 (192) nInputs 64
PADDING: a 152 (192) nInputs 64
PADDING: a 153 (192) nInputs 64
PADDING: a 154 (192) nInputs 64
PADDING: a 155 (192) nInputs 64
PADDING: a 156 (192) nInputs 64
PADDING: a 157 (192) nInputs 64
PADDING: a 158 (192) nInputs 64
PADDING: a 159 (192) nInputs 64
PADDING: a 160 (192) nInputs 64
PADDING: a 161 (192) nInputs 64
PADDING: a 162 (192) nInputs 64
PADDING: a 163 (192) nInputs 64
PADDING: a 164 (192) nInputs 64
PADDING: a 165 (192) nInputs 64
PADDING: a 166 (192) nInputs 64
PADDING: a 167 (192) nInputs 64
PADDING: a 168 (192) nInputs 64
PADDING: a 169 (192) nInputs 64
PADDING: a 170 (192) nInputs 64
PADDING: a 171 (192) nInputs 64
PADDING: a 172 (192) nInputs 64
PADDING: a 173 (192) nInputs 64
PADDING: a 174 (192) nInputs 64
PADDING: a 175 (192) nInputs 64
PADDING: a 176 (192) nInputs 64
PADDING: a 177 (192) nInputs 64
PADDING: a 178 (192) nInputs 64
PADDING: a 179 (192) nInputs 64
PADDING: a 180 (192) nInputs 64
PADDING: a 181 (192) nInputs 64
PADDING: a 182 (192) nInputs 64
PADDING: a 183 (192) nInputs 64
PADDING: a 184 (192) nInputs 64
PADDING: a 185 (192) nInputs 64
PADDING: a 186 (192) nInputs 64
PADDING: a 187 (192) nInputs 64
PADDING: a 188 (192) nInputs 64
PADDING: a 189 (192) nInputs 64
PADDING: a 190 (192) nInputs 64
PADDING: a 191 (192) nInputs 64
make stopsim
make[1]: Entering directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced'
maxcompilersim -n rz3515p -cLIMA stop
Terminating MaxelerOS daemon (PID 446833)...
MaxelerOS daemon killed
Terminating simulated system (PID 446828)...
Simulated system killed
make[1]: Leaving directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/bottleneck_shortcut_imbalanced'
