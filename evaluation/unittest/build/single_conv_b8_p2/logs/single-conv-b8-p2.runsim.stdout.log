BUILD_NAME_OPTION = _FREQ_200_DBG
Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=single_conv_b8_p2 MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 SingleConvB8P2Manager \
	DFEModel=MAIA maxFileName=SingleConvB8P2 target='DFE_SIM' enableMPCX=false \
	FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2/data/data-single-conv-b8-p2.txt 
]0; maxJavaRun: SingleConvB8P2Manager DFEModel=MAIA maxFileName=SingleConvB8P2 target=DFE_SIM enableMPCX=false FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2/data/data-single-conv-b8-p2.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : single_conv_b8_p2
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : single_conv_b8_p2.SingleConvB8P2Manager
Class arguments     : DFEModel=MAIA maxFileName=SingleConvB8P2 target=DFE_SIM enableMPCX=false FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2/data/data-single-conv-b8-p2.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Fri 20:48: MaxCompiler version: 2021.1
Fri 20:48: Build "SingleConvB8P2" start time: Fri Dec 31 20:48:27 GMT 2021
Fri 20:48: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Fri 20:48: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG
Fri 20:48: Detailed build log available in "_build.log"
Fri 20:48: 
Fri 20:48: ENGINE BUILD PARAMETERS
Fri 20:48: 	              Build name: SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG                                                                          
Fri 20:48: 	             maxFileName: SingleConvB8P2                                                                                                    
Fri 20:48: 	                  target: DFE_SIM                                                                                                           
Fri 20:48: 	                DFEModel: MAIA                                                                                                              
Fri 20:48: 	              enableMPCX: false                                                                                                             
Fri 20:48: 	                bitWidth: 32                                                                                                                
Fri 20:48: 	                     WBW: 32                                                                                                                
Fri 20:48: 	                   DTYPE: fixed                                                                                                             
Fri 20:48: 	           NUM_FRAC_BITS: 8                                                                                                                 
Fri 20:48: 	                      PF: 1                                                                                                                 
Fri 20:48: 	                      PC: 1                                                                                                                 
Fri 20:48: 	                      PK: 1                                                                                                                 
Fri 20:48: 	                       H: 1                                                                                                                 
Fri 20:48: 	                       W: 1                                                                                                                 
Fri 20:48: 	                       C: 1                                                                                                                 
Fri 20:48: 	                       F: 1                                                                                                                 
Fri 20:48: 	                       K: 1                                                                                                                 
Fri 20:48: 	                     PAD: 0                                                                                                                 
Fri 20:48: 	                       S: 1                                                                                                                 
Fri 20:48: 	                     SEQ: 0                                                                                                                 
Fri 20:48: 	                    FREQ: 200                                                                                                               
Fri 20:48: 	                USE_DRAM: false                                                                                                             
Fri 20:48: 	                 USE_BNN: false                                                                                                             
Fri 20:48: 	            USE_WINOGRAD: false                                                                                                             
Fri 20:48: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                             
Fri 20:48: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                 
Fri 20:48: 	                   DEBUG: true                                                                                                              
Fri 20:48: 	           COEFF_ON_CHIP: false                                                                                                             
Fri 20:48: 	              INIT_COEFF: false                                                                                                             
Fri 20:48: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2/data/data-single-conv-b8-p2.txt
Fri 20:48: Generating kernel conv0 ...
Fri 20:48: Instantiating kernel "conv0"
Fri 20:48: T = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 20:48: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 20:48: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 20:48: coeffOnChip = true
Fri 20:48: Input height = 2, output height = 2, pad = 1
Fri 20:48: Counter H = 4 W = 4
Fri 20:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 20:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 20:48: Ifmap buffer configuration 32 x 2
Fri 20:48: loop = false
Fri 20:48: Building line buffer for "conv0" ...
Fri 20:48: Line buffer shape 3 x 2, produces 1 number of 3 x 3 tiles per cycle
Fri 20:48: Line buffer input vector size: 2, output vector size: 18.
Fri 20:48: Number of separated line buffers: 2
Fri 20:48: Initialising line buffer kernel with 3 x 4 x 1
Fri 20:48: Size of line buffer output: 3
Fri 20:48: Number of line buffer output chunks: 3
Fri 20:48: Connecting outputs from chunk (#000) ...
Fri 20:48: Connecting outputs from chunk (#001) ...
Fri 20:48: Connecting outputs from chunk (#002) ...
Fri 20:48: Initialising line buffer kernel with 3 x 4 x 1
Fri 20:48: Size of line buffer output: 3
Fri 20:48: Number of line buffer output chunks: 3
Fri 20:48: Connecting outputs from chunk (#000) ...
Fri 20:48: Connecting outputs from chunk (#001) ...
Fri 20:48: Connecting outputs from chunk (#002) ...
Fri 20:48: ROM created for conv0 of depth 4 and type {DFEVectorType: 36 x dfeFix(8, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@140c9f39
Fri 20:48: Building the CORE arithmetic unit for "conv0" ...
Fri 20:48: WT = dfeFix(8, 0, TWOSCOMPLEMENT)
Fri 20:48: CORE ifmap vector size: 18
Fri 20:48: CORE coefficient vector size: 36
Fri 20:48: CORE ofmap vector size: 2
Fri 20:48: Enabled DSP optimisation for MACC.
Fri 20:48: [ConvLayerOfmapBuffer] depth =     4 addr_bits =     2
Fri 20:48: Connecting to output: ofmap
Fri 20:48: Compiling kernel "conv0"
Fri 20:48: 
Fri 20:48: Generating padding kernels for DRAM access
Fri 20:48: Instantiating kernel "ifmap_unpad"
Fri 20:48: Compiling kernel "ifmap_unpad"
Fri 20:48: 
Fri 20:48: Instantiating kernel "ofmap_pad"
Fri 20:48: Compiling kernel "ofmap_pad"
Fri 20:48: 
Fri 20:48: Setting up stream connections for conv0
Fri 20:48: DRAM will be used to build the design
Fri 20:48: Setup streams for kernel "conv0"
Fri 20:48: # cycles:       64
Fri 20:48: # ifmap stream: 16
Fri 20:48: # ofmap stream: 16
Fri 20:48: coeff vec size: 36
Fri 20:48: coeff stream bit width: 288
Fri 20:48: coeff stream chunk size: 9
Fri 20:48: Running back-end simulation build (3 phases)
Fri 20:48: (1/3) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Fri 20:48: (2/3) - Compile Simulation Modules (SimCompilePass)
Fri 20:48: (3/3) - Generate MaxFile (AddSimObjectToMaxFilePass)
Fri 20:48: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleConvB8P2.max (MD5Sum: e784c0dea014fff588c6512360974881)
Fri 20:48: Build completed: Fri Dec 31 20:48:43 GMT 2021 (took 15 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleConvB8P2.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/Maxfiles.h
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleConvB8P2.max SingleConvB8P2_FREQ_200_DBG_sim.o
Processing maxfile for MAX5_LIMA_SIM from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleConvB8P2.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_6706834754993922076/cobject/max_8094315470274427412.c -o /tmp/sliccompile_6706834754993922076/cobject/max_8094315470274427412.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleConvB8P2.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_7871964411984103776.o 
ld -r /tmp/sliccompile_6706834754993922076/cobject/max_8094315470274427412.c.o max_7871964411984103776.o -o SingleConvB8P2_FREQ_200_DBG_sim.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2'
g++ ../../src/single_conv_b8_p2/SingleConvB8P2CpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleConvB8P2_MAIA_DFE_SIM_FREQ_200_DBG/results -D__SIM__ -DDESIGN_NAME=SingleConvB8P2 -c -o SingleConvB8P2_FREQ_200_DBG_simc.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -o SingleConvB8P2_FREQ_200_DBG_sim SingleConvB8P2_FREQ_200_DBG_sim.o SingleConvB8P2_FREQ_200_DBG_simc.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
maxcompilersim -n rz3515f -cLIMA -d1 restart

Simulated system 'rz3515f' started:
    Board:                   MAX5C (default: 48GB RAM)
    RAM size for simulation: 51539607552 bytes.
    Temporary RAM file in    /tmp/. (Use option -k to preserve it.)
    Simulation log:          /homes/rz3515/.maxcompilersim/rz3515f-cccad5.log
    Daemon log:              /homes/rz3515/.maxcompilersim/rz3515f-cccad5_daemon.log

Simulated devices available:
    rz3515f0:rz3515f

To use simulated devices you need to set the environment variables
LD_PRELOAD and MAXELEROSDIR. As LD_PRELOAD must not contain spaces,
you might need to set LD_LIBRARY_PATH in addition (see the MaxCompiler
tutorial for details).  Also, ensure that you add the correct simulated
system name (namely "rz3515f") to your SLiC configuration. The following
examples assume there are no spaces in LD_PRELOAD or SLIC_CONF.
Example for BASH:
    export MAXELEROSDIR=$MAXCOMPILERDIR/lib/maxeleros-sim
    export LD_PRELOAD=$MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    export SLIC_CONF="$SLIC_CONF;use_simulation=rz3515f"
Example for CSH:
    setenv MAXELEROSDIR $MAXCOMPILERDIR/lib/maxeleros-sim
    setenv LD_PRELOAD $MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    setenv SLIC_CONF "$SLIC_CONF;use_simulation=rz3515f"

SLIC_CONF+="default_maxdebug_mode=MAX_DEBUG_ALWAYS;" SLIC_CONF+="use_simulation=rz3515f" LD_PRELOAD=/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib/libmaxeleros.so ./SingleConvB8P2_FREQ_200_DBG_sim -n 2 -f /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2/data/data-single-conv-b8-p2.txt -g
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[0] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[0] =   2.000000 +   1.000000 =   3.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[0] =   3.000000 +   2.000000 =   5.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[0] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[0] =   5.000000 +   1.000000 =   6.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[0] =   6.000000 +   1.000000 =   7.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[0] =   7.000000 +  -1.000000 =   6.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   0.000000
output[0] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[0] =   6.000000 +   1.000000 =   7.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[0] =   7.000000 +   2.000000 =   9.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   1.000000
output[0] =   9.000000 +  -1.000000 =   8.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[0] =   8.000000 +  -1.000000 =   7.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[0] =   7.000000 +   1.000000 =   8.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -2.000000
output[0] =   8.000000 +   4.000000 =  12.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =   2.000000
output[0] =  12.000000 +  -4.000000 =   8.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[0] =   8.000000 +   1.000000 =   9.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[1] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[1] =   1.000000 +  -2.000000 =  -1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[1] =  -1.000000 +   0.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[1] =  -1.000000 +  -1.000000 =  -2.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[1] =  -2.000000 +   1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -1.000000
output[1] =  -1.000000 +  -1.000000 =  -2.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =  -1.000000
output[1] =  -2.000000 +  -2.000000 =  -4.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -2.000000
output[1] =  -4.000000 +   2.000000 =  -2.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[1] =  -2.000000 +   2.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   1.000000
output[1] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[1] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[1] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =   2.000000
output[1] =   3.000000 +  -4.000000 =  -1.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[1] =  -1.000000 +   2.000000 =   1.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[2] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   1.000000
output[2] =  -4.000000 +  -1.000000 =  -5.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[2] =  -5.000000 +  -1.000000 =  -6.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[2] =  -6.000000 +   0.000000 =  -6.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[2] =  -6.000000 +   2.000000 =  -4.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   2.000000
output[2] =  -4.000000 +  -2.000000 =  -6.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[2] =  -6.000000 +  -1.000000 =  -7.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[2] =  -7.000000 +  -2.000000 =  -9.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[2] =  -9.000000 +   1.000000 =  -8.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   0.000000
output[2] =  -8.000000 +   0.000000 =  -8.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[2] =  -8.000000 +   1.000000 =  -7.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[2] =  -7.000000 +  -1.000000 =  -8.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   0.000000
output[2] =  -8.000000 +   0.000000 =  -8.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =  -2.000000
output[2] =  -8.000000 +   4.000000 =  -4.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[2] =  -4.000000 +   2.000000 =  -2.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -2.000000
output[2] =  -2.000000 +  -2.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[3] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[3] =   2.000000 +  -2.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[3] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[3] =  -1.000000 +   2.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   1.000000
output[3] =   1.000000 +   1.000000 =   2.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[3] =   2.000000 +  -2.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =  -1.000000
output[3] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -2.000000
output[3] =   2.000000 +   2.000000 =   4.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[3] =   4.000000 +  -1.000000 =   3.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[3] =   3.000000 +   0.000000 =   3.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   0.000000
output[3] =   3.000000 +   0.000000 =   3.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[3] =   3.000000 +   0.000000 =   3.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[3] =   3.000000 +  -1.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -2.000000
output[4] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   0.000000
output[4] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[4] =   4.000000 +   2.000000 =   6.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =  -1.000000
output[4] =   6.000000 +   0.000000 =   6.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[4] =   6.000000 +   1.000000 =   7.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   2.000000
output[4] =   7.000000 +  -2.000000 =   5.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[4] =   5.000000 +   2.000000 =   7.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   2.000000
output[4] =   7.000000 +   4.000000 =  11.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -2.000000
output[4] =  11.000000 +   2.000000 =  13.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[4] =  13.000000 +   2.000000 =  15.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =  -1.000000
output[4] =  15.000000 +   1.000000 =  16.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[4] =  16.000000 +   1.000000 =  17.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   1.000000
output[4] =  17.000000 +  -1.000000 =  16.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -2.000000
output[4] =  16.000000 +   4.000000 =  20.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =   1.000000
output[4] =  20.000000 +  -2.000000 =  18.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[4] =  18.000000 +  -1.000000 =  17.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -2.000000
output[5] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[5] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[5] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   1.000000
output[5] =   1.000000 +   1.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =   2.000000
output[5] =   2.000000 +   4.000000 =   6.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[5] =   6.000000 +   1.000000 =   7.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -2.000000
output[5] =   7.000000 +   4.000000 =  11.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =   0.000000
output[5] =  11.000000 +   0.000000 =  11.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[5] =  11.000000 +  -1.000000 =  10.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -2.000000
output[5] =  10.000000 +   2.000000 =  12.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[5] =  12.000000 +  -2.000000 =  10.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =   2.000000
output[5] =  10.000000 +  -4.000000 =   6.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   1.000000
output[5] =   6.000000 +   1.000000 =   7.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[6] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   1.000000
output[6] =   4.000000 +  -1.000000 =   3.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -2.000000
output[6] =   3.000000 +  -2.000000 =   1.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   0.000000
output[6] =   1.000000 +   0.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[6] =   1.000000 +   1.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   0.000000
output[6] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[6] =   2.000000 +  -1.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =   2.000000
output[6] =   1.000000 +   4.000000 =   5.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[6] =   5.000000 +  -2.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =  -2.000000
output[6] =   3.000000 +   4.000000 =   7.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -2.000000
output[6] =   7.000000 +   2.000000 =   9.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[6] =   9.000000 +  -1.000000 =   8.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[6] =   8.000000 +   1.000000 =   9.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   0.000000
output[6] =   9.000000 +   0.000000 =   9.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[6] =   9.000000 +  -2.000000 =   7.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -2.000000
output[6] =   7.000000 +  -2.000000 =   5.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[7] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[7] =   2.000000 +   2.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[7] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[7] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[7] =   4.000000 +  -1.000000 =   3.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[7] =   3.000000 +   1.000000 =   4.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[7] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[7] =   4.000000 +  -2.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   0.000000
output[7] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[7] =   2.000000 +  -4.000000 =  -2.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[7] =  -2.000000 +   1.000000 =  -1.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -2.000000
output[7] =  -1.000000 +  -2.000000 =  -3.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[7] =  -3.000000 +   1.000000 =  -2.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =  -1.000000
output[7] =  -2.000000 +   2.000000 =   0.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =  -2.000000
output[7] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[7] =   4.000000 +   1.000000 =   5.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[8] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -2.000000
output[8] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -2.000000
output[8] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   2.000000
output[8] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[8] =  -2.000000 +   1.000000 =  -1.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   1.000000
output[8] =  -1.000000 +  -1.000000 =  -2.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[8] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   0.000000
output[8] =   0.000000 +   0.000000 =   0.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   1.000000
output[8] =   0.000000 +  -1.000000 =  -1.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =   0.000000
output[8] =  -1.000000 +   0.000000 =  -1.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   0.000000
output[8] =  -1.000000 +   0.000000 =  -1.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -2.000000
output[8] =  -1.000000 +  -2.000000 =  -3.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[8] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =   2.000000
output[8] =  -3.000000 +  -4.000000 =  -7.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =   0.000000
output[8] =  -7.000000 +   0.000000 =  -7.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[8] =  -7.000000 +   1.000000 =  -6.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   1.000000
output[9] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   1.000000
output[9] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -1.000000
output[9] =  -3.000000 +  -1.000000 =  -4.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =  -2.000000
output[9] =  -4.000000 +   0.000000 =  -4.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[9] =  -4.000000 +   1.000000 =  -3.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[9] =  -3.000000 +   1.000000 =  -2.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   1.000000
output[9] =  -2.000000 +   1.000000 =  -1.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =   2.000000
output[9] =  -1.000000 +   4.000000 =   3.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[9] =   3.000000 +   0.000000 =   3.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[9] =   3.000000 +  -2.000000 =   1.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =   0.000000
output[9] =   1.000000 +   0.000000 =   1.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[9] =   1.000000 +   0.000000 =   1.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[9] =   1.000000 +   1.000000 =   2.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[9] =   2.000000 +   0.000000 =   2.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =  -1.000000
output[9] =   2.000000 +   2.000000 =   4.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[9] =   4.000000 +   0.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   1.000000
output[10] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   1.000000
output[10] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[10] =  -3.000000 +   1.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -2.000000
output[10] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[10] =  -2.000000 +   1.000000 =  -1.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -2.000000
output[10] =  -1.000000 +   2.000000 =   1.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[10] =   1.000000 +  -1.000000 =   0.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =   1.000000
output[10] =   0.000000 +   2.000000 =   2.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   1.000000
output[10] =   2.000000 +  -1.000000 =   1.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   1.000000
output[10] =   1.000000 +  -2.000000 =  -1.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   1.000000
output[10] =  -1.000000 +  -1.000000 =  -2.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   0.000000
output[10] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[10] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   1.000000
output[10] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[10] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   2.000000
output[10] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[11] =   0.000000 +   4.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   1.000000
output[11] =   4.000000 +  -1.000000 =   3.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   1.000000
output[11] =   3.000000 +   1.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[11] =   4.000000 +   0.000000 =   4.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[11] =   4.000000 +  -1.000000 =   3.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[11] =   3.000000 +   1.000000 =   4.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -1.000000
output[11] =   4.000000 +  -1.000000 =   3.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[11] =   3.000000 +  -2.000000 =   1.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[11] =   1.000000 +   2.000000 =   3.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   1.000000
output[11] =   3.000000 +  -2.000000 =   1.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[11] =   1.000000 +   0.000000 =   1.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[11] =   1.000000 +   1.000000 =   2.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -2.000000
output[11] =   2.000000 +   2.000000 =   4.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[11] =   4.000000 +   4.000000 =   8.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =  -1.000000
output[11] =   8.000000 +   2.000000 =  10.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[11] =  10.000000 +   0.000000 =  10.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   2.000000
output[12] =   0.000000 +  -4.000000 =  -4.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   1.000000
output[12] =  -4.000000 +  -1.000000 =  -5.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[12] =  -5.000000 +   2.000000 =  -3.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   1.000000
output[12] =  -3.000000 +   0.000000 =  -3.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[12] =  -3.000000 +  -2.000000 =  -5.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[12] =  -5.000000 +   1.000000 =  -4.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[12] =  -4.000000 +  -1.000000 =  -5.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   0.000000
output[12] =  -5.000000 +   0.000000 =  -5.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[12] =  -5.000000 +   0.000000 =  -5.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[12] =  -5.000000 +   2.000000 =  -3.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =  -1.000000
output[12] =  -3.000000 +   1.000000 =  -2.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   2.000000
output[12] =  -2.000000 +   2.000000 =   0.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[12] =   0.000000 +  -2.000000 =  -2.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =   2.000000
output[12] =  -2.000000 +  -4.000000 =  -6.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =   0.000000
output[12] =  -6.000000 +   0.000000 =  -6.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[12] =  -6.000000 +  -1.000000 =  -7.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =  -1.000000
output[13] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[13] =   2.000000 +  -2.000000 =   0.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   1.000000
output[13] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[13] =   1.000000 +   0.000000 =   1.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[13] =   1.000000 +  -1.000000 =   0.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[13] =   0.000000 +  -2.000000 =  -2.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[13] =  -2.000000 +  -2.000000 =  -4.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =  -1.000000
output[13] =  -4.000000 +  -2.000000 =  -6.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[13] =  -6.000000 +   0.000000 =  -6.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   0.000000
output[13] =  -6.000000 +   0.000000 =  -6.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =  -2.000000
output[13] =  -6.000000 +   2.000000 =  -4.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[13] =  -4.000000 +  -1.000000 =  -5.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[13] =  -5.000000 +   1.000000 =  -4.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =   2.000000
output[13] =  -4.000000 +  -4.000000 =  -8.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =  -1.000000
output[13] =  -8.000000 +   2.000000 =  -6.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[13] =  -6.000000 +   0.000000 =  -6.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[14] =   0.000000 +   4.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -1.000000
output[14] =   4.000000 +   1.000000 =   5.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[14] =   5.000000 +   2.000000 =   7.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   1.000000
output[14] =   7.000000 +   0.000000 =   7.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[14] =   7.000000 +  -2.000000 =   5.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   0.000000
output[14] =   5.000000 +   0.000000 =   5.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[14] =   5.000000 +   2.000000 =   7.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[14] =   7.000000 +  -2.000000 =   5.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[14] =   5.000000 +  -2.000000 =   3.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =  -2.000000
output[14] =   3.000000 +   4.000000 =   7.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[14] =   7.000000 +   0.000000 =   7.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[14] =   7.000000 +  -1.000000 =   6.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   0.000000
output[14] =   6.000000 +   0.000000 =   6.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   1.000000
output[14] =   6.000000 +  -2.000000 =   4.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   2.000000
output[14] =   4.000000 +  -4.000000 =   0.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   2.000000
output[14] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[15] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[15] =   2.000000 +   2.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -1.000000
output[15] =   4.000000 +  -1.000000 =   3.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[15] =   3.000000 +   0.000000 =   3.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =   3.000000 +   1.000000 =   4.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[15] =   4.000000 +  -2.000000 =   2.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   1.000000
output[15] =   2.000000 +   1.000000 =   3.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =   2.000000
output[15] =   3.000000 +   4.000000 =   7.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[15] =   7.000000 +  -1.000000 =   6.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[15] =   6.000000 +  -4.000000 =   2.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[15] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[15] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =   2.000000 +   1.000000 =   3.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   0.000000
output[15] =   3.000000 +   0.000000 =   3.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =  -1.000000
output[15] =   3.000000 +   2.000000 =   5.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[15] =   5.000000 +   2.000000 =   7.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[16] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[16] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[16] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   0.000000
output[16] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[16] =   2.000000 +  -2.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[16] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =  -1.000000
output[16] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[16] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[16] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[16] =   1.000000 +   0.000000 =   1.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   1.000000
output[16] =   1.000000 +   1.000000 =   2.000000
f = 0 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[16] =   2.000000 +  -1.000000 =   1.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[16] =   1.000000 +  -1.000000 =   0.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -2.000000
output[16] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   2.000000
output[16] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[16] =  -2.000000 +   1.000000 =  -1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[17] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[17] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -2.000000
output[17] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[17] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   2.000000 weight =   1.000000
output[17] =   2.000000 +   2.000000 =   4.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[17] =   4.000000 +   1.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -1.000000
output[17] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =  -1.000000
output[17] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -2.000000
output[17] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[17] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   0.000000
output[17] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   1.000000
output[17] =   5.000000 +   1.000000 =   6.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[17] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[17] =   6.000000 +   0.000000 =   6.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =   2.000000
output[17] =   6.000000 +  -2.000000 =   4.000000
f = 0 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[17] =   4.000000 +   2.000000 =   6.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[18] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[18] =  -4.000000 +   0.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[18] =  -4.000000 +   0.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[18] =  -4.000000 +  -1.000000 =  -5.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   2.000000 weight =  -2.000000
output[18] =  -5.000000 +  -4.000000 =  -9.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   2.000000
output[18] =  -9.000000 +  -2.000000 = -11.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[18] = -11.000000 +   0.000000 = -11.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[18] = -11.000000 +   0.000000 = -11.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =  -1.000000
output[18] = -11.000000 +   0.000000 = -11.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   0.000000
output[18] = -11.000000 +   0.000000 = -11.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[18] = -11.000000 +  -1.000000 = -12.000000
f = 0 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[18] = -12.000000 +  -1.000000 = -13.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =   1.000000 weight =   0.000000
output[18] = -13.000000 +   0.000000 = -13.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =  -2.000000
output[18] = -13.000000 +   0.000000 = -13.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[18] = -13.000000 +   1.000000 = -12.000000
f = 0 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -2.000000
output[18] = -12.000000 +  -2.000000 = -14.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[19] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   2.000000
output[19] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[19] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[19] =   2.000000 +  -1.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[19] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[19] =   3.000000 +   2.000000 =   5.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   1.000000
output[19] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[19] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[19] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =  -1.000000
output[19] =   5.000000 +   0.000000 =   5.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -2.000000
output[19] =   5.000000 +  -2.000000 =   3.000000
f = 0 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[19] =   3.000000 +  -1.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =   0.000000
output[19] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   0.000000
output[19] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[19] =   2.000000 +   0.000000 =   2.000000
f = 0 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[19] =   2.000000 +  -1.000000 =   1.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -2.000000
output[20] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   0.000000
output[20] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[20] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[20] =   4.000000 +  -1.000000 =   3.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[20] =   3.000000 +  -2.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   2.000000
output[20] =   1.000000 +  -2.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[20] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   2.000000
output[20] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[20] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[20] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[20] =  -1.000000 +  -1.000000 =  -2.000000
f = 1 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[20] =  -2.000000 +   1.000000 =  -1.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[20] =  -1.000000 +   1.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -2.000000
output[20] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   1.000000
output[20] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[20] =  -1.000000 +  -1.000000 =  -2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[21] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[21] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -2.000000
output[21] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[21] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   2.000000 weight =   0.000000
output[21] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[21] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =   1.000000
output[21] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[21] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -1.000000
output[21] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[21] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   0.000000
output[21] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[21] =   3.000000 +  -1.000000 =   2.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -2.000000
output[21] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[21] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =   2.000000
output[21] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   1.000000
output[21] =  -2.000000 +   1.000000 =  -1.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[22] =   0.000000 +   4.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[22] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -2.000000
output[22] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   0.000000
output[22] =   4.000000 +   0.000000 =   4.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   2.000000 weight =  -1.000000
output[22] =   4.000000 +  -2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   0.000000
output[22] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[22] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   2.000000
output[22] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =   2.000000
output[22] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =  -2.000000
output[22] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -2.000000
output[22] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[22] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =   1.000000 weight =  -1.000000
output[22] =  -1.000000 +  -1.000000 =  -2.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   0.000000
output[22] =  -2.000000 +   0.000000 =  -2.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   1.000000
output[22] =  -2.000000 +  -1.000000 =  -3.000000
f = 1 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -2.000000
output[22] =  -3.000000 +  -2.000000 =  -5.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[23] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =  -2.000000
output[23] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[23] =   2.000000 +   0.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -2.000000
output[23] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[23] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[23] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[23] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[23] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   0.000000
output[23] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   2.000000
output[23] =   3.000000 +   0.000000 =   3.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -1.000000
output[23] =   3.000000 +  -1.000000 =   2.000000
f = 1 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -2.000000
output[23] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[23] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =  -1.000000
output[23] =  -1.000000 +   0.000000 =  -1.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -2.000000
output[23] =  -1.000000 +   2.000000 =   1.000000
f = 1 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[23] =   1.000000 +   1.000000 =   2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   1.000000
output[24] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -2.000000
output[24] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =  -2.000000
output[24] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   2.000000
output[24] =  -2.000000 +   2.000000 =   0.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[24] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =   1.000000
output[24] =  -2.000000 +  -1.000000 =  -3.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[24] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[24] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[24] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   0.000000
output[24] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[24] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -2.000000
output[24] =  -3.000000 +  -2.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[24] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   2.000000
output[24] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   0.000000
output[24] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[24] =  -5.000000 +   1.000000 =  -4.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   1.000000
output[25] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[25] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -1.000000
output[25] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -2.000000
output[25] =  -2.000000 +  -2.000000 =  -4.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   2.000000 weight =  -1.000000
output[25] =  -4.000000 +  -2.000000 =  -6.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[25] =  -6.000000 +   1.000000 =  -5.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =   1.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =   0.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -1.000000
output[25] =  -5.000000 +  -1.000000 =  -6.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[25] =  -6.000000 +   0.000000 =  -6.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =  -1.000000
output[25] =  -6.000000 +   1.000000 =  -5.000000
f = 2 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[25] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   1.000000
output[26] =   0.000000 +  -2.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[26] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   1.000000
output[26] =  -2.000000 +   0.000000 =  -2.000000
f = 2 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -2.000000
output[26] =  -2.000000 +  -2.000000 =  -4.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   2.000000 weight =  -1.000000
output[26] =  -4.000000 +  -2.000000 =  -6.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =  -2.000000
output[26] =  -6.000000 +   2.000000 =  -4.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[26] =  -4.000000 +   0.000000 =  -4.000000
f = 2 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   1.000000
output[26] =  -4.000000 +   0.000000 =  -4.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =   1.000000
output[26] =  -4.000000 +   0.000000 =  -4.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[26] =  -4.000000 +   0.000000 =  -4.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[26] =  -4.000000 +   1.000000 =  -3.000000
f = 2 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   0.000000
output[26] =  -3.000000 +   0.000000 =  -3.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =   1.000000 weight =  -2.000000
output[26] =  -3.000000 +  -2.000000 =  -5.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[26] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   0.000000
output[26] =  -5.000000 +   0.000000 =  -5.000000
f = 2 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   2.000000
output[26] =  -5.000000 +   2.000000 =  -3.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -2.000000
output[27] =   0.000000 +   4.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   1.000000
output[27] =   4.000000 +   0.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   1.000000
output[27] =   4.000000 +   0.000000 =   4.000000
f = 2 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[27] =   4.000000 +   1.000000 =   5.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =   1.000000
output[27] =   5.000000 +   2.000000 =   7.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -1.000000
output[27] =   7.000000 +   1.000000 =   8.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -1.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 2 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =  -2.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   1.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 2 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   1.000000
output[27] =   8.000000 +   1.000000 =   9.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -2.000000
output[27] =   9.000000 +  -2.000000 =   7.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =  -2.000000
output[27] =   7.000000 +   0.000000 =   7.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[27] =   7.000000 +   1.000000 =   8.000000
f = 2 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[27] =   8.000000 +   0.000000 =   8.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =   2.000000
output[28] =   0.000000 +  -4.000000 =  -4.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   1.000000
output[28] =  -4.000000 +   0.000000 =  -4.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[28] =  -4.000000 +   0.000000 =  -4.000000
f = 3 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   1.000000
output[28] =  -4.000000 +   1.000000 =  -3.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =   2.000000 weight =   2.000000
output[28] =  -3.000000 +   4.000000 =   1.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[28] =   1.000000 +   1.000000 =   2.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   0.000000 weight =  -1.000000
output[28] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[28] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[28] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[28] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[28] =   2.000000 +  -1.000000 =   1.000000
f = 3 c = 2 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   2.000000
output[28] =   1.000000 +   2.000000 =   3.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[28] =   3.000000 +   2.000000 =   5.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =   2.000000
output[28] =   5.000000 +   0.000000 =   5.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   0.000000
output[28] =   5.000000 +   0.000000 =   5.000000
f = 3 c = 3 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =  -1.000000
output[28] =   5.000000 +  -1.000000 =   4.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =  -1.000000
output[29] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[29] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =   1.000000
output[29] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[29] =   2.000000 +   2.000000 =   4.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =   2.000000 weight =   1.000000
output[29] =   4.000000 +   2.000000 =   6.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[29] =   6.000000 +  -2.000000 =   4.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   0.000000 weight =  -2.000000
output[29] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =  -1.000000
output[29] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   0.000000
output[29] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   0.000000
output[29] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[29] =   4.000000 +  -2.000000 =   2.000000
f = 3 c = 2 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[29] =   2.000000 +  -1.000000 =   1.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =  -1.000000
output[29] =   1.000000 +  -1.000000 =   0.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[29] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =  -1.000000
output[29] =   0.000000 +   1.000000 =   1.000000
f = 3 c = 3 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   0.000000
output[29] =   1.000000 +   0.000000 =   1.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[30] =   0.000000 +   4.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =  -1.000000
output[30] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[30] =   4.000000 +   0.000000 =   4.000000
f = 3 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   1.000000
output[30] =   4.000000 +   1.000000 =   5.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =   2.000000 weight =   2.000000
output[30] =   5.000000 +   4.000000 =   9.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   0.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 1: input =   0.000000 weight =   2.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =  -2.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[30] =   9.000000 +   0.000000 =   9.000000
f = 3 c = 2 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[30] =   9.000000 +  -1.000000 =   8.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 1: input =   1.000000 weight =   0.000000
output[30] =   8.000000 +   0.000000 =   8.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 0 kw = 2: input =   0.000000 weight =   1.000000
output[30] =   8.000000 +   0.000000 =   8.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =   2.000000
output[30] =   8.000000 +  -2.000000 =   6.000000
f = 3 c = 3 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =   2.000000
output[30] =   6.000000 +   2.000000 =   8.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[31] =   0.000000 +   2.000000 =   2.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =  -2.000000
output[31] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =  -1.000000
output[31] =   2.000000 +   0.000000 =   2.000000
f = 3 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[31] =   2.000000 +   2.000000 =   4.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =   2.000000 weight =  -1.000000
output[31] =   4.000000 +  -2.000000 =   2.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[31] =   2.000000 +  -2.000000 =   0.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   0.000000 weight =   1.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =   2.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 0: input =   0.000000 weight =   1.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   2.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 2 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   0.000000
output[31] =   0.000000 +   0.000000 =   0.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 0: input =   1.000000 weight =  -1.000000
output[31] =   0.000000 +  -1.000000 =  -1.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 0 kw = 1: input =   0.000000 weight =   0.000000
output[31] =  -1.000000 +   0.000000 =  -1.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =  -1.000000
output[31] =  -1.000000 +   1.000000 =   0.000000
f = 3 c = 3 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =   2.000000
output[31] =   0.000000 +   2.000000 =   2.000000
UNPADDING: 0 (384) nInputs 16
UNPADDING: 1 (384) nInputs 16
UNPADDING: 2 (384) nInputs 16
UNPADDING: 3 (384) nInputs 16
UNPADDING: 4 (384) nInputs 16
UNPADDING: 5 (384) nInputs 16
UNPADDING: 6 (384) nInputs 16
UNPADDING: 7 (384) nInputs 16
UNPADDING: 8 (384) nInputs 16
UNPADDING: 9 (384) nInputs 16
UNPADDING: 10 (384) nInputs 16
UNPADDING: 11 (384) nInputs 16
UNPADDING: 12 (384) nInputs 16
UNPADDING: 13 (384) nInputs 16
UNPADDING: 14 (384) nInputs 16
UNPADDING: 15 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv0][0/0/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 16 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv0][0/0/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 17 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv0][0/0/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 18 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv0][0/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 19 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv0][0/0/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 20 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < -2 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv0][0/0/1/1] [padAndBufferize] At stream 0 = < -2 :: -1 >
Line buffer inputVec = < -2 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[conv0][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
tmp         = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = -2
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 21 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv0][0/0/1/2] [padAndBufferize] At stream 0 = < -1 :: -1 >
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[conv0][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1048580 :: 1 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
tmp         = -1048579
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262142 :: -2 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
tmp         = 262140
acc  = -786439
accA = -3 acc >> 18 = -4 acc.slice() = 252
accB = -7
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -3 :: -7 >
[ConvLayerOfmapBuffer] input          = < -3 :: -7 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -3 :: -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 22 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv0][0/0/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[conv0][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1048580 :: -524290 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
tmp         = 524290
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: 262142 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
tmp         = 524285
acc  = 1048575
accA = 4 acc >> 18 = 3 acc.slice() = 3
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 4 :: -1 >
[ConvLayerOfmapBuffer] input          = < 4 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 4 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 23 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv0][0/0/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv0][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = 524290
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = 262143
acc  = 786433
accA = 3 acc >> 18 = 3 acc.slice() = 3
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 3 :: 1 >
[ConvLayerOfmapBuffer] input          = < 3 :: 1 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 3 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 24 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv0][0/0/2/1] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[conv0][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 524288 :: 0 :: 0 :: -1 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 >
tmp         = 524287
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 262142 :: 0 :: 0 :: 2 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
tmp         = 262144
acc  = 786431
accA = 3 acc >> 18 = 2 acc.slice() = 2
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 3 :: -1 >
[ConvLayerOfmapBuffer] input          = < 3 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 3 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 :: -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 25 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 0 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv0][0/0/2/2] [padAndBufferize] At stream 0 = < 0 :: 2 >
Line buffer inputVec = < 0 :: 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[conv0][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 524292 :: 262144 :: 0 :: 524290 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 >
tmp         = 1310726
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262145 :: 262142 :: 0 :: -262142 :: 4 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
tmp         = 262149
acc  = 1572875
accA = 6 acc >> 18 = 6 acc.slice() = 6
accB = 11
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 6 :: 11 >
[ConvLayerOfmapBuffer] input          = < 6 :: 11 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 6 :: 11 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 26 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv0][0/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[conv0][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262146 :: 0 :: -524290 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 >
tmp         = -262144
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262144 :: 262145 :: 0 :: -262143 :: -524284 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
tmp         = -786426
acc  = -1048570
accA = -4 acc >> 18 = -4 acc.slice() = 252
accB = 6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -4 :: 6 >
[ConvLayerOfmapBuffer] input          = < -4 :: 6 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -4 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 3 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 27 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv0][0/0/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[conv0][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262144 :: 0 :: 0 :: -524286 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
tmp         = -786430
acc  = -786430
accA = -3 acc >> 18 = -3 acc.slice() = 253
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -3 :: 2 >
[ConvLayerOfmapBuffer] input          = < -3 :: 2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -3 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 28 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv0][0/0/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[conv0][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: -524290 :: 0 :: 0 :: -262144 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -786434
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: -524288 :: 0 :: 0 :: -262142 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -786430
acc  = -1572864
accA = -6 acc >> 18 = -6 acc.slice() = 250
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -6 :: 0 >
[ConvLayerOfmapBuffer] input          = < -6 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -6 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 :: 11 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 29 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv0][0/0/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[conv0][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: -1048572 :: -262145 :: 0 :: -262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1572863
[DotProd] vecA = < 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 524289 :: -524288 :: 0 :: -262145 :: -524284 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
tmp         = -786428
acc  = -2359291
accA = -9 acc >> 18 = -9 acc.slice() = 247
accB = 5
[Conv2DKernel] ifmap = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -9 :: 5 >
[ConvLayerOfmapBuffer] input          = < -9 :: 5 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -9 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 30 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv0][0/0/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 524290 :: -524286 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 4
[DotProd] vecA = < -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < -262145 :: 524289 :: 0 :: 262144 :: -524290 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
tmp         = -2
acc  = 2
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 2
[Conv2DKernel] ifmap = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 2 >
[ConvLayerOfmapBuffer] input          = < 0 :: 2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 31 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv0][0/1/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 1 :: 0 :: 0 :: -4 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -3
acc  = -3
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -3
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: -3 >
[ConvLayerOfmapBuffer] input          = < 0 :: -3 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 6 :: 8 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 32 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv0][0/1/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -2
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: -524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524288
acc  = -524290
accA = -2 acc >> 18 = -3 acc.slice() = 253
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -2 :: -2 >
[ConvLayerOfmapBuffer] input          = < -2 :: -2 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 4 :: 9 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -9 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 33 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv0][0/1/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: -262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262142
[DotProd] vecA = < 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: -1 :: -1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1048577
acc  = -1310719
accA = -5 acc >> 18 = -5 acc.slice() = 251
accB = 1
[Conv2DKernel] ifmap = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -5 :: 1 >
[ConvLayerOfmapBuffer] input          = < -5 :: 1 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 1 :: 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 34 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv0][0/1/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -3
acc  = -3
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -3
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: -3 >
[ConvLayerOfmapBuffer] input          = < 0 :: -3 >
[ConvLayerOfmapBuffer] read           = < -4 :: 6 >
[ConvLayerOfmapBuffer] output         = < -4 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 6 :: 8 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 35 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv0][0/1/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -2
acc  = -2
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: -2 >
[ConvLayerOfmapBuffer] input          = < 0 :: -2 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 6 :: 9 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 :: 9 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 36 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/1] [bufferizeIfmap] At stream 0: data = < -1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv0][0/1/1/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[conv0][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262143 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = -262143
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 6 :: 11 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 37 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: -2 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/2] [bufferizeIfmap] At stream 0: data = < -2 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv0][0/1/1/2] [padAndBufferize] At stream 0 = < -2 :: -2 >
Line buffer inputVec = < -2 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[conv0][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262143 :: 524286 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524289 :: -524286 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
tmp         = -1048575
acc  = -786432
accA = -3 acc >> 18 = -3 acc.slice() = 253
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -3 :: 0 >
[ConvLayerOfmapBuffer] input          = < -3 :: 0 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 3 :: 11 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 38 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv0][0/1/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[conv0][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524286 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
tmp         = -524286
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524290 :: -1048578 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
tmp         = -1572868
acc  = -2097154
accA = -8 acc >> 18 = -9 acc.slice() = 247
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -8 :: -2 >
[ConvLayerOfmapBuffer] input          = < -8 :: -2 >
[ConvLayerOfmapBuffer] read           = < -4 :: 6 >
[ConvLayerOfmapBuffer] output         = < -12 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 6 :: 9 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 39 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv0][0/1/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv0][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1048580 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = -1048580
acc  = -1048580
accA = -4 acc >> 18 = -5 acc.slice() = 251
accB = -4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -4 :: -4 >
[ConvLayerOfmapBuffer] input          = < -4 :: -4 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 2 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 6 :: 11 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 40 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -1 :: -2 >
[ConvLayerIfmapBuffer] output = < -1 :: -2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/1] [bufferizeIfmap] At stream 0: data = < -1 :: -2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv0][0/1/2/1] [padAndBufferize] At stream 0 = < -1 :: -2 >
Line buffer inputVec = < -1 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[conv0][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 262145 :: 0 :: 0 :: 262143 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 >
tmp         = 524288
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 :: -524286 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
tmp         = 4
acc  = 524292
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 4 >
[ConvLayerOfmapBuffer] input          = < 2 :: 4 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 8 :: 15 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: 11 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 41 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv0][0/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[conv0][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262146 :: 524290 :: 0 :: -262143 :: -262143 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 >
tmp         = 262150
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262143 :: 1048580 :: 0 :: -1048578 :: 262143 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
tmp         = 524288
acc  = 786438
accA = 3 acc >> 18 = 3 acc.slice() = 3
accB = 6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 3 :: 6 >
[ConvLayerOfmapBuffer] input          = < 3 :: 6 >
[ConvLayerOfmapBuffer] read           = < 6 :: 11 >
[ConvLayerOfmapBuffer] output         = < 9 :: 17 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -12 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 42 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv0][0/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[conv0][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 524289 :: 524292 :: 0 :: 0 :: 262143 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 >
tmp         = 1310724
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 2 :: 524286 :: 0 :: -1048580 :: 524289 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
tmp         = -3
acc  = 1310721
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 5 :: 1 >
[ConvLayerOfmapBuffer] input          = < 5 :: 1 >
[ConvLayerOfmapBuffer] read           = < -4 :: 6 >
[ConvLayerOfmapBuffer] output         = < 1 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 :: 7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 1109 0 (384) nInputs 16
UNPADDING: 43 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv0][0/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 1048578 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 1048578
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 4 :: 0 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 524294
acc  = 1572872
accA = 6 acc >> 18 = 6 acc.slice() = 6
accB = 8
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 6 :: 8 >
[ConvLayerOfmapBuffer] input          = < 6 :: 8 >
[ConvLayerOfmapBuffer] read           = < -9 :: 5 >
[ConvLayerOfmapBuffer] output         = < -3 :: 13 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 8 :: 15 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 701 1 (384) nInputs 16
UNPADDING: 44 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv0][0/1/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv0][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 2 :: 0 :: 0 :: 262145 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
tmp         = 262147
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 524288 :: 0 :: 0 :: 1048580 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
tmp         = 1572868
acc  = 1835015
accA = 7 acc >> 18 = 7 acc.slice() = 7
accB = 7
[Conv2DKernel] ifmap = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 7 :: 7 >
[ConvLayerOfmapBuffer] input          = < 7 :: 7 >
[ConvLayerOfmapBuffer] read           = < -9 :: 5 >
[ConvLayerOfmapBuffer] output         = < -2 :: 12 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 9 :: 17 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 45 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv0][0/1/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[conv0][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 262142 :: 4 :: 0 :: 262146 :: -262145 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
tmp         = 262147
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 1 :: 1048576 :: 0 :: 524286 :: -524290 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
tmp         = 1048573
acc  = 1310720
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 0
[Conv2DKernel] ifmap = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 5 :: 0 >
[ConvLayerOfmapBuffer] input          = < 5 :: 0 >
[ConvLayerOfmapBuffer] read           = < -9 :: 5 >
[ConvLayerOfmapBuffer] output         = < -4 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 1 :: 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 46 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv0][0/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 524284 :: 0 :: 524289 :: -262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 786427
[DotProd] vecA = < -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 1 :: 2 :: 0 :: 4 :: -262143 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262136
acc  = 524291
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 3
[Conv2DKernel] ifmap = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 3 >
[ConvLayerOfmapBuffer] input          = < 2 :: 3 >
[ConvLayerOfmapBuffer] read           = < 0 :: 2 >
[ConvLayerOfmapBuffer] output         = < 2 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 :: 13 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 5fc 2 (384) nInputs 16
UNPADDING: 47 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv0][1/0/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 1048578 :: 0 :: 0 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1310721
[DotProd] vecA = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < -524286 :: 0 :: 0 :: -262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -786429
acc  = 524292
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 4
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 4 >
[ConvLayerOfmapBuffer] input          = < 2 :: 4 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 2 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 :: 12 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 502 3 (384) nInputs 16
UNPADDING: 48 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv0][1/0/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: -262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262143
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1048576
acc  = 786433
accA = 3 acc >> 18 = 3 acc.slice() = 3
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 3 :: 1 >
[ConvLayerOfmapBuffer] input          = < 3 :: 1 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 3 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 49 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv0][1/0/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: -262142 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1
[DotProd] vecA = < 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 524284 :: -524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -4
acc  = -3
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -3
[Conv2DKernel] ifmap = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: -3 >
[ConvLayerOfmapBuffer] input          = < 0 :: -3 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 0 :: -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 50 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv0][1/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 524289 :: 262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 786431
[DotProd] vecA = < -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < -524286 :: -262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -786428
acc  = 3
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 3
[Conv2DKernel] ifmap = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 3 >
[ConvLayerOfmapBuffer] input          = < 0 :: 3 >
[ConvLayerOfmapBuffer] read           = < 1 :: 7 >
[ConvLayerOfmapBuffer] output         = < 0 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 51 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv0][1/0/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < -524289 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524289
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262143
acc  = -262146
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -2
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: -2 >
[ConvLayerOfmapBuffer] input          = < -1 :: -2 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < -1 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 52 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -1 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv0][1/0/1/1] [padAndBufferize] At stream 0 = < -2 :: -1 >
Line buffer inputVec = < -2 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[conv0][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1048578 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
tmp         = -1048578
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = 0
acc  = -1048578
accA = -4 acc >> 18 = -5 acc.slice() = 251
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: -2 >
[ConvLayerOfmapBuffer] input          = < -4 :: -2 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < -4 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 53 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv0][1/0/1/2] [padAndBufferize] At stream 0 = < -1 :: -1 >
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[conv0][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1048572 :: -524289 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
tmp         = 524283
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524287 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
tmp         = -524287
acc  = -4
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: -4 >
[ConvLayerOfmapBuffer] input          = < 0 :: -4 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 0 :: -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 54 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv0][1/0/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[conv0][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524286 :: 524286 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
tmp         = 1048572
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262142 :: -524287 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
tmp         = -786429
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < 1 :: 7 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 55 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv0][1/0/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv0][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262142 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = -262142
acc  = 1
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 1 >
[ConvLayerOfmapBuffer] input          = < 0 :: 1 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 0 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 56 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv0][1/0/2/1] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[conv0][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1048574 :: 0 :: 0 :: 524289 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 >
tmp         = 1572863
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -262143 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
tmp         = -262143
acc  = 1310720
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 5 :: 0 >
[ConvLayerOfmapBuffer] input          = < 5 :: 0 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 5 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 57 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 2 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv0][1/0/2/2] [padAndBufferize] At stream 0 = < 0 :: 2 >
Line buffer inputVec = < 0 :: 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[conv0][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -524292 :: 524287 :: 0 :: -524286 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 >
tmp         = -524291
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262142 :: -262143 :: 0 :: 524287 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
tmp         = 524286
acc  = -5
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -5
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: -5 >
[ConvLayerOfmapBuffer] input          = < 0 :: -5 >
[ConvLayerOfmapBuffer] read           = < 9 :: 17 >
[ConvLayerOfmapBuffer] output         = < 0 :: -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 58 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv0][1/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[conv0][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -524286 :: -262146 :: 0 :: -262143 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 >
tmp         = -1048575
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 262143 :: 262142 :: 0 :: 262142 :: 1048574 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
tmp         = 1835001
acc  = 786426
accA = 3 acc >> 18 = 2 acc.slice() = 2
accB = -6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 3 :: -6 >
[ConvLayerOfmapBuffer] input          = < 3 :: -6 >
[ConvLayerOfmapBuffer] read           = < 1 :: 7 >
[ConvLayerOfmapBuffer] output         = < 3 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 59 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv0][1/0/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[conv0][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262143
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 262143 :: 0 :: 0 :: 524284 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
tmp         = 786427
acc  = 524284
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: -4 >
[ConvLayerOfmapBuffer] input          = < 2 :: -4 >
[ConvLayerOfmapBuffer] read           = < -4 :: 5 >
[ConvLayerOfmapBuffer] output         = < 2 :: -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 5 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 60 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv0][1/0/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[conv0][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: -524286 :: 0 :: 0 :: -524287 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -1048573
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 524288 :: 0 :: 0 :: 262143 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = 786431
acc  = -262142
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: 2 >
[ConvLayerOfmapBuffer] input          = < -1 :: 2 >
[ConvLayerOfmapBuffer] read           = < -4 :: 5 >
[ConvLayerOfmapBuffer] output         = < -1 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 :: -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 61 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv0][1/0/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[conv0][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: -524284 :: -262143 :: 0 :: 262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524281
[DotProd] vecA = < 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 262142 :: 524288 :: 0 :: -262142 :: 524286 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
tmp         = 1048574
acc  = 524293
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 5
[Conv2DKernel] ifmap = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 5 >
[ConvLayerOfmapBuffer] input          = < 2 :: 5 >
[ConvLayerOfmapBuffer] read           = < -4 :: 5 >
[ConvLayerOfmapBuffer] output         = < 2 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 62 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv0][1/0/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 1048578 :: -262142 :: 0 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1048579
[DotProd] vecA = < -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < -262143 :: 262142 :: 0 :: -262143 :: -524284 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
tmp         = -786428
acc  = 262151
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 7
[Conv2DKernel] ifmap = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: 7 >
[ConvLayerOfmapBuffer] input          = < 1 :: 7 >
[ConvLayerOfmapBuffer] read           = < 2 :: 5 >
[ConvLayerOfmapBuffer] output         = < 1 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 2 :: -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 63 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv0][1/1/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 524287 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 524287
[DotProd] vecA = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 524289 :: 0 :: 0 :: -524290 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1
acc  = 524286
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -2
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 2 :: -2 >
[ConvLayerOfmapBuffer] input          = < 2 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 2 :: -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 64 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv0][1/1/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262142
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 262145 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262145
acc  = 524287
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 2 :: -1 >
[ConvLayerOfmapBuffer] input          = < 2 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 2 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 65 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv0][1/1/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 262146 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262146
[DotProd] vecA = < 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: -524288 :: 524290 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 2
acc  = 262148
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 4
[Conv2DKernel] ifmap = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: 4 >
[ConvLayerOfmapBuffer] input          = < 1 :: 4 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 66 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv0][1/1/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < -524287 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524287
[DotProd] vecA = < 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < -524289 :: -1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1572865
acc  = -2097152
accA = -8 acc >> 18 = -8 acc.slice() = 248
accB = 0
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -8 :: 0 >
[ConvLayerOfmapBuffer] input          = < -8 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: -6 >
[ConvLayerOfmapBuffer] output         = < -5 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 :: -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 67 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv0][1/1/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < -1048578 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1048578
acc  = -1048578
accA = -4 acc >> 18 = -5 acc.slice() = 251
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -4 :: -2 >
[ConvLayerOfmapBuffer] input          = < -4 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < -4 :: -7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 68 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv0][1/1/1/1] [padAndBufferize] At stream 0 = < -1 :: -1 >
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[conv0][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524286 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = 524286
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262143 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
tmp         = -262143
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 1 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 69 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: -2 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv0][1/1/1/2] [padAndBufferize] At stream 0 = < -2 :: -2 >
Line buffer inputVec = < -2 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[conv0][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1048572 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
tmp         = 1048573
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524286 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
tmp         = -524286
acc  = 524287
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 2 :: -1 >
[ConvLayerOfmapBuffer] input          = < 2 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 2 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -5 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 70 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv0][1/1/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[conv0][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 2 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
tmp         = 4
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262145 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
tmp         = 262145
acc  = 262149
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 5
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: 5 >
[ConvLayerOfmapBuffer] input          = < 1 :: 5 >
[ConvLayerOfmapBuffer] read           = < 3 :: -6 >
[ConvLayerOfmapBuffer] output         = < 4 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -4 :: -7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 71 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv0][1/1/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[conv0][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = 4
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = 524290
acc  = 524294
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 6 >
[ConvLayerOfmapBuffer] input          = < 2 :: 6 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < 2 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 72 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -1 :: -2 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv0][1/1/2/1] [padAndBufferize] At stream 0 = < -1 :: -2 >
Line buffer inputVec = < -1 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[conv0][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 524286 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 >
tmp         = 524287
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -524290 :: 0 :: 0 :: -524286 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
tmp         = -1048576
acc  = -524289
accA = -2 acc >> 18 = -3 acc.slice() = 253
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -2 :: -1 >
[ConvLayerOfmapBuffer] input          = < -2 :: -1 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < -2 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 73 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv0][1/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[conv0][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -262144 :: 2 :: 0 :: 1 :: -524286 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 >
tmp         = -786427
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -2 :: -1048580 :: 0 :: 0 :: 262143 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
tmp         = -786439
acc  = -1572866
accA = -6 acc >> 18 = -7 acc.slice() = 249
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -6 :: -2 >
[ConvLayerOfmapBuffer] input          = < -6 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: -5 >
[ConvLayerOfmapBuffer] output         = < -6 :: -7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 74 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv0][1/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[conv0][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -524288 :: 0 :: 2 :: -1 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 >
tmp         = -524287
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 262145 :: -4 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
tmp         = 786431
acc  = 262144
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: 0 >
[ConvLayerOfmapBuffer] input          = < 1 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: -6 >
[ConvLayerOfmapBuffer] output         = < 4 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 2 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: f9fa 4 (384) nInputs 16
UNPADDING: 75 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv0][1/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -2
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 524290 :: 0 :: 0 :: -262145 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 262145
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < 2 :: 5 >
[ConvLayerOfmapBuffer] output         = < 3 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -2 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fa04 5 (384) nInputs 16
UNPADDING: 76 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv0][1/1/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[conv0][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: -262142 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
tmp         = -262141
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: -262145 :: 0 :: 0 :: -1048580 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
tmp         = -1310725
acc  = -1572866
accA = -6 acc >> 18 = -7 acc.slice() = 249
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -6 :: -2 >
[ConvLayerOfmapBuffer] input          = < -6 :: -2 >
[ConvLayerOfmapBuffer] read           = < 2 :: 5 >
[ConvLayerOfmapBuffer] output         = < -4 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -6 :: -7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 77 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv0][1/1/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[conv0][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: -262146 :: -524284 :: 0 :: -262144 :: -1 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
tmp         = -1048575
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 524288 :: -524290 :: 0 :: -4 :: 524290 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
tmp         = 524284
acc  = -524291
accA = -2 acc >> 18 = -3 acc.slice() = 253
accB = -3
[Conv2DKernel] ifmap = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -2 :: -3 >
[ConvLayerOfmapBuffer] input          = < -2 :: -3 >
[ConvLayerOfmapBuffer] read           = < 2 :: 5 >
[ConvLayerOfmapBuffer] output         = < 0 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 4 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 78 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv0][1/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 524287 :: -524292 :: 0 :: 0 :: 262144 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262139
[DotProd] vecA = < -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 524289 :: 1048576 :: 0 :: 524290 :: 2 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 2097157
acc  = 2359296
accA = 9 acc >> 18 = 9 acc.slice() = 9
accB = 0
[Conv2DKernel] ifmap = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 9 :: 0 >
[ConvLayerOfmapBuffer] input          = < 9 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: 7 >
[ConvLayerOfmapBuffer] output         = < 10 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 3 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 200 6 (384) nInputs 16
UNPADDING: 79 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 1
[conv0][0/0/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 524290 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 524290
[DotProd] vecA = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < -524290 :: 0 :: 0 :: 262144 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262146
acc  = 262144
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 0
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 1 :: 0 >
[ConvLayerOfmapBuffer] input          = < 1 :: 0 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 1 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 70a 7 (384) nInputs 16
UNPADDING: 80 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 1
[conv0][0/0/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: -262145 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262145
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: -1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1048576
acc  = -1310721
accA = -5 acc >> 18 = -6 acc.slice() = 250
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -5 :: -1 >
[ConvLayerOfmapBuffer] input          = < -5 :: -1 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < -5 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 81 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 1
[conv0][0/0/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: -524286 :: 262145 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262141
[DotProd] vecA = < 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 1048578 :: 524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1572866
acc  = 1310725
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 5
[Conv2DKernel] ifmap = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 5 :: 5 >
[ConvLayerOfmapBuffer] input          = < 5 :: 5 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 5 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 10 :: 7 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 82 (384) nInputs 16
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 1
[conv0][0/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 262145 :: 524286 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 786431
[DotProd] vecA = < -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < -524290 :: -524289 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1048579
acc  = -262148
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -4
[Conv2DKernel] ifmap = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -1 :: -4 >
[ConvLayerOfmapBuffer] input          = < -1 :: -4 >
[ConvLayerOfmapBuffer] read           = < 4 :: -6 >
[ConvLayerOfmapBuffer] output         = < -1 :: -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 83 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 1
[conv0][0/0/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < -262145 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262145
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 262145 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262145
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -5 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 84 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < -2 :: 2 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < -2 :: 2 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 1
[conv0][0/0/1/1] [padAndBufferize] At stream 0 = < -2 :: 2 >
Line buffer inputVec = < -2 :: 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[conv0][0/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
tmp         = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
tmp         = 4
acc  = 6
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 6 >
[ConvLayerOfmapBuffer] input          = < 0 :: 6 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 0 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 85 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: -1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < 0 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 1
[conv0][0/0/1/2] [padAndBufferize] At stream 0 = < 0 :: -1 >
Line buffer inputVec = < 0 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[conv0][0/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1048580 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
tmp         = -1048580
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524284 :: -2 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
tmp         = -524286
acc  = -1572866
accA = -6 acc >> 18 = -7 acc.slice() = 249
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -6 :: -2 >
[ConvLayerOfmapBuffer] input          = < -6 :: -2 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < -6 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -1 :: -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 86 (384) nInputs 16
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 1
[conv0][0/0/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[conv0][0/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1048580 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = 1048580
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524286 :: 262142 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
tmp         = -262144
acc  = 786436
accA = 3 acc >> 18 = 3 acc.slice() = 3
accB = 4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 3 :: 4 >
[ConvLayerOfmapBuffer] input          = < 3 :: 4 >
[ConvLayerOfmapBuffer] read           = < 4 :: -6 >
[ConvLayerOfmapBuffer] output         = < 3 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 87 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 1
[conv0][0/0/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv0][0/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = 262143
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 88 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 1
[conv0][0/0/2/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[conv0][0/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 524288 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
tmp         = 524288
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -524284 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
tmp         = -524284
acc  = 4
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 0 :: 4 >
[ConvLayerOfmapBuffer] input          = < 0 :: 4 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 0 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 89 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 0 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[conv0][0/0/2/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
Line buffer inputVec = < 1 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[conv0][0/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 524292 :: 0 :: 0 :: 0 :: -1 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 >
tmp         = 524291
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -524290 :: 262142 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
tmp         = -262148
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < -6 :: -7 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 90 (384) nInputs 16
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[conv0][0/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 >
tmp         = 524290
[DotProd] vecA = < 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 524288 :: 262145 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 786433
acc  = 1310723
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 3
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 5 :: 3 >
[ConvLayerOfmapBuffer] input          = < 5 :: 3 >
[ConvLayerOfmapBuffer] read           = < 4 :: -6 >
[ConvLayerOfmapBuffer] output         = < 5 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 91 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 1
[conv0][0/0/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524290 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -524290
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262144 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262144
acc  = -786434
accA = -3 acc >> 18 = -4 acc.slice() = 252
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -3 :: -2 >
[ConvLayerOfmapBuffer] input          = < -3 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 2 >
[ConvLayerOfmapBuffer] output         = < -3 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 92 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 1
[conv0][0/0/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: 0 :: -524290 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524290
[DotProd] vecA = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: 0 :: 1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1048576
acc  = 524286
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 2 :: -2 >
[ConvLayerOfmapBuffer] input          = < 2 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 2 >
[ConvLayerOfmapBuffer] output         = < 2 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 93 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[conv0][0/0/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 0 :: -1048572 :: 0 :: 0 :: 0 :: -262144 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -1310716
[DotProd] vecA = < 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 0 :: -1048578 :: -524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1572866
acc  = -2883582
accA = -11 acc >> 18 = -11 acc.slice() = 245
accB = 2
[Conv2DKernel] ifmap = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < -11 :: 2 >
[ConvLayerOfmapBuffer] input          = < -11 :: 2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 2 >
[ConvLayerOfmapBuffer] output         = < -11 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 5 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 94 (384) nInputs 16
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[conv0][0/0/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 0
[DotProd] vecA = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
[DotProd] vecC = < 524290 :: 0 :: 0 :: 0 :: -262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
coeffChunkB = < -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 >
coeffChunk  = < -262145 :: 524286 :: 262145 :: 0 :: -262146 :: -262144 :: -524290 :: 524290 :: -1 >
ifmapChunk  = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262144
[DotProd] vecA = < 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
[DotProd] vecC = < 524290 :: 524289 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
coeffChunkB = < 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
coeffChunk  = < 262145 :: -524289 :: 524288 :: 262144 :: -262145 :: -262142 :: -262143 :: -262142 :: 2 >
ifmapChunk  = < 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1048579
acc  = 1310723
accA = 5 acc >> 18 = 5 acc.slice() = 5
accB = 3
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 :: -1 :: -2 :: 1 :: 0 :: -2 :: 0 :: -2 :: 2 :: -1 :: 1 :: -1 :: 0 :: 0 :: -1 :: 2 :: 1 :: 2 :: 2 >
[Conv2DKernel] ofmap = < 5 :: 3 >
[ConvLayerOfmapBuffer] input          = < 5 :: 3 >
[ConvLayerOfmapBuffer] read           = < 10 :: 7 >
[ConvLayerOfmapBuffer] output         = < 5 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -3 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 95 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 1
[conv0][0/1/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -524289 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524289
[DotProd] vecA = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1
acc  = -524288
accA = -2 acc >> 18 = -2 acc.slice() = 254
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -2 :: 0 >
[ConvLayerOfmapBuffer] input          = < -2 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < -1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 96 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 1
[conv0][0/1/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -11 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 97 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 1
[conv0][0/1/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = -2
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: -2 >
[ConvLayerOfmapBuffer] input          = < 0 :: -2 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 1 :: -3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 5 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 98 (384) nInputs 16
conv0f = 0 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 1
[conv0][0/1/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: -262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262142
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = -262142
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 2
[Conv2DKernel] ifmap = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -1 :: 2 >
[ConvLayerOfmapBuffer] input          = < -1 :: 2 >
[ConvLayerOfmapBuffer] read           = < 5 :: 3 >
[ConvLayerOfmapBuffer] output         = < 4 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 99 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 1
[conv0][0/1/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 100 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/1] [bufferizeIfmap] At stream 0: data = < 0 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 1
[conv0][0/1/1/1] [padAndBufferize] At stream 0 = < 0 :: 1 >
Line buffer inputVec = < 0 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[conv0][0/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
tmp         = 262143
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 2 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 101 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 1
[conv0][0/1/1/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[conv0][0/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524289 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
tmp         = 524289
acc  = 524289
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 1 >
[ConvLayerOfmapBuffer] input          = < 2 :: 1 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 3 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 4 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 102 (384) nInputs 16
conv0f = 0 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 1
[conv0][0/1/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][0/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 524290
acc  = 524290
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 2 >
[ConvLayerOfmapBuffer] input          = < 2 :: 2 >
[ConvLayerOfmapBuffer] read           = < 5 :: 3 >
[ConvLayerOfmapBuffer] output         = < 7 :: 5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 103 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 1
[conv0][0/1/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < 1 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 104 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: -1 >
[ConvLayerIfmapBuffer] output = < 1 :: -1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: -1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 1
[conv0][0/1/2/1] [padAndBufferize] At stream 0 = < 1 :: -1 >
Line buffer inputVec = < 1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[conv0][0/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262143 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
tmp         = -262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -524290 :: 0 :: 0 :: -262143 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
tmp         = -786433
acc  = -1048576
accA = -4 acc >> 18 = -4 acc.slice() = 252
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -4 :: 0 >
[ConvLayerOfmapBuffer] input          = < -4 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < -3 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 105 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 1
[conv0][0/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[conv0][0/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: -262143 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -262143 :: 0 :: 0 :: -524289 :: 262143 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
tmp         = -524289
acc  = -524289
accA = -2 acc >> 18 = -3 acc.slice() = 253
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -2 :: -1 >
[ConvLayerOfmapBuffer] input          = < -2 :: -1 >
[ConvLayerOfmapBuffer] read           = < 1 :: -1 >
[ConvLayerOfmapBuffer] output         = < -1 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 7 :: 5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 106 (384) nInputs 16
conv0f = 0 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 1
[conv0][0/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[conv0][0/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: -524290 :: 524289 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
tmp         = -3
acc  = 262140
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -4 >
[ConvLayerOfmapBuffer] input          = < 1 :: -4 >
[ConvLayerOfmapBuffer] read           = < 5 :: 3 >
[ConvLayerOfmapBuffer] output         = < 6 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 1 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: feff 8 (384) nInputs 16
UNPADDING: 107 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 1
[conv0][0/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][0/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = 524290
acc  = 524290
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 2 >
[ConvLayerOfmapBuffer] input          = < 2 :: 2 >
[ConvLayerOfmapBuffer] read           = < -11 :: 2 >
[ConvLayerOfmapBuffer] output         = < -9 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -3 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: ff06 9 (384) nInputs 16
UNPADDING: 108 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 1
[conv0][0/1/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[conv0][0/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -262145 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -262145
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: -524288 :: 0 :: 0 :: 524290 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
tmp         = 2
acc  = -262143
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -1 :: 1 >
[ConvLayerOfmapBuffer] input          = < -1 :: 1 >
[ConvLayerOfmapBuffer] read           = < -11 :: 2 >
[ConvLayerOfmapBuffer] output         = < -12 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 109 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 1
[conv0][0/1/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[conv0][0/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -262146 :: -262145 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 >
tmp         = -524291
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < 0 :: -1 :: 0 :: 0 :: 262143 :: -524290 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
tmp         = -262148
acc  = -786439
accA = -3 acc >> 18 = -4 acc.slice() = 252
accB = -7
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -3 :: -7 >
[ConvLayerOfmapBuffer] input          = < -3 :: -7 >
[ConvLayerOfmapBuffer] read           = < -11 :: 2 >
[ConvLayerOfmapBuffer] output         = < -14 :: -5 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 110 (384) nInputs 16
conv0f = 0 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 1
[conv0][0/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[conv0][0/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 1
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -524289 :: -262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 >
coeffChunkB = < 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 >
coeffChunk  = < 0 :: -262142 :: -2 :: -524289 :: -262146 :: -262145 :: 0 :: 262143 :: -262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -786435
[DotProd] vecA = < 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
[DotProd] vecC = < -1 :: 0 :: 0 :: 2 :: -262143 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 >
coeffChunkB = < -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
coeffChunk  = < -1 :: -1 :: -524288 :: -2 :: -262143 :: -524290 :: 524290 :: 524289 :: 262143 >
ifmapChunk  = < 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262142
acc  = -1048577
accA = -4 acc >> 18 = -5 acc.slice() = 251
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 :: -1 :: -1 :: 0 :: 1 :: -1 :: 0 :: 0 :: -2 :: 0 :: -1 :: -2 :: 2 :: 2 :: 1 :: 0 :: 2 :: -2 :: -1 :: -2 :: -1 :: 0 :: -1 :: 1 :: -1 :: -1 :: 0 :: -2 :: 1 :: -2 :: 2 :: 1 :: -1 >
[Conv2DKernel] ofmap = < -4 :: -1 >
[ConvLayerOfmapBuffer] input          = < -4 :: -1 >
[ConvLayerOfmapBuffer] read           = < 5 :: 3 >
[ConvLayerOfmapBuffer] output         = < 1 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -9 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: fbf2 10 (384) nInputs 16
UNPADDING: 111 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[conv0][1/0/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262143
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -12 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 201 11 (384) nInputs 16
UNPADDING: 112 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[conv0][1/0/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262143
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 524288
acc  = 786431
accA = 3 acc >> 18 = 2 acc.slice() = 2
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 3 :: -1 >
[ConvLayerOfmapBuffer] input          = < 3 :: -1 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 3 :: -1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -14 :: -5 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 113 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[conv0][1/0/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 262142 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 524285
[DotProd] vecA = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 262142 :: -524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262146
acc  = 262139
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -5
[Conv2DKernel] ifmap = < 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: -5 >
[ConvLayerOfmapBuffer] input          = < 1 :: -5 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 1 :: -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 114 (384) nInputs 16
conv0f = 1 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[conv0][1/0/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < -524289 :: 262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262147
[DotProd] vecA = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < -262143 :: -262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524285
acc  = -786432
accA = -3 acc >> 18 = -3 acc.slice() = 253
accB = 0
[Conv2DKernel] ifmap = < 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -3 :: 0 >
[ConvLayerOfmapBuffer] input          = < -3 :: 0 >
[ConvLayerOfmapBuffer] read           = < 6 :: -1 >
[ConvLayerOfmapBuffer] output         = < -3 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 115 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[conv0][1/0/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < -524289 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524289
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 262143 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262143
acc  = -262146
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -2
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: -2 >
[ConvLayerOfmapBuffer] input          = < -1 :: -2 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < -1 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: -1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 116 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < -2 :: 2 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[conv0][1/0/1/1] [padAndBufferize] At stream 0 = < -2 :: 2 >
Line buffer inputVec = < -2 :: 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[conv0][1/0/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1048578 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
tmp         = -1048578
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
tmp         = 0
acc  = -1048578
accA = -4 acc >> 18 = -5 acc.slice() = 251
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: -2 >
[ConvLayerOfmapBuffer] input          = < -4 :: -2 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < -4 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 1 :: -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 117 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: -1 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[conv0][1/0/1/2] [padAndBufferize] At stream 0 = < 0 :: -1 >
Line buffer inputVec = < 0 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[conv0][1/0/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1048572 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
tmp         = 1048572
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1048574 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
tmp         = 1048574
acc  = 2097146
accA = 8 acc >> 18 = 7 acc.slice() = 7
accB = -6
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 8 :: -6 >
[ConvLayerOfmapBuffer] input          = < 8 :: -6 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 8 :: -6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 118 (384) nInputs 16
conv0f = 1 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[conv0][1/0/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[conv0][1/0/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524286 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
tmp         = 524286
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 524284 :: -524287 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
tmp         = -3
acc  = 524283
accA = 2 acc >> 18 = 1 acc.slice() = 1
accB = -5
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: -5 >
[ConvLayerOfmapBuffer] input          = < 2 :: -5 >
[ConvLayerOfmapBuffer] read           = < 6 :: -1 >
[ConvLayerOfmapBuffer] output         = < 2 :: -5 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 119 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[conv0][1/0/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[conv0][1/0/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262142 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
tmp         = -262142
acc  = -262142
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: 2 >
[ConvLayerOfmapBuffer] input          = < -1 :: 2 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < -1 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 120 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[conv0][1/0/2/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[conv0][1/0/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1048574 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
tmp         = 1048574
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 524286 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
tmp         = 524286
acc  = 1572860
accA = 6 acc >> 18 = 5 acc.slice() = 5
accB = -4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 6 :: -4 >
[ConvLayerOfmapBuffer] input          = < 6 :: -4 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 6 :: -4 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 :: -6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 121 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 0 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 10 read addr = 10 en = 0
[conv0][1/0/2/2] [padAndBufferize] At stream 0 = < 1 :: 0 >
Line buffer inputVec = < 1 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[conv0][1/0/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -524292 :: 0 :: 0 :: 0 :: 524289 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 >
tmp         = -3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: -524284 :: -262143 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
tmp         = -786427
acc  = -786430
accA = -3 acc >> 18 = -3 acc.slice() = 253
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -3 :: 2 >
[ConvLayerOfmapBuffer] input          = < -3 :: 2 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < -3 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 2 :: -5 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 122 (384) nInputs 16
conv0f = 1 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 11 read addr = 11 en = 0
[conv0][1/0/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -524286 :: 0 :: 0 :: 0 :: -524286 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 >
tmp         = -1048572
[DotProd] vecA = < 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -524286 :: 262142 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262144
acc  = -1310716
accA = -5 acc >> 18 = -5 acc.slice() = 251
accB = 4
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -5 :: 4 >
[ConvLayerOfmapBuffer] input          = < -5 :: 4 >
[ConvLayerOfmapBuffer] read           = < 6 :: -1 >
[ConvLayerOfmapBuffer] output         = < -5 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 123 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[conv0][1/0/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262143 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -262143
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 262143 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262143
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -14 :: -5 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 6 :: -4 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 124 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[conv0][1/0/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: 0 :: -524286 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524286
[DotProd] vecA = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: 0 :: -1048576 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -1048576
acc  = -1572862
accA = -6 acc >> 18 = -6 acc.slice() = 250
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -6 :: 2 >
[ConvLayerOfmapBuffer] input          = < -6 :: 2 >
[ConvLayerOfmapBuffer] read           = < -14 :: -5 >
[ConvLayerOfmapBuffer] output         = < -6 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -3 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 125 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 14 read addr = 14 en = 0
[conv0][1/0/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 0 :: -524284 :: 0 :: 0 :: 0 :: -524287 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -1048571
[DotProd] vecA = < 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 0 :: -524284 :: 524288 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 4
acc  = -1048567
accA = -4 acc >> 18 = -4 acc.slice() = 252
accB = 9
[Conv2DKernel] ifmap = < 0 :: -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: 9 >
[ConvLayerOfmapBuffer] input          = < -4 :: 9 >
[ConvLayerOfmapBuffer] read           = < -14 :: -5 >
[ConvLayerOfmapBuffer] output         = < -4 :: 9 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -5 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 126 (384) nInputs 16
conv0f = 1 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 15 read addr = 15 en = 0
[conv0][1/0/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/0/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 2
[DotProd] vecA = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
[DotProd] vecC = < 1048578 :: 0 :: 0 :: 0 :: 262146 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 >
coeffChunkB = < -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 >
coeffChunk  = < -524289 :: 262142 :: 262143 :: 262143 :: 262146 :: -524287 :: -262143 :: -524286 :: 524289 >
ifmapChunk  = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 1310724
[DotProd] vecA = < 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
[DotProd] vecC = < 524286 :: 262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 >
coeffChunkB = < -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
coeffChunk  = < 262143 :: -262142 :: -524288 :: -262143 :: -262142 :: 262143 :: 262142 :: 524287 :: 0 >
ifmapChunk  = < 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 786428
acc  = 2097152
accA = 8 acc >> 18 = 8 acc.slice() = 8
accB = 0
[Conv2DKernel] ifmap = < -2 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 1 :: 1 :: -2 :: -1 :: -2 :: 2 :: 1 :: -1 :: -2 :: -1 :: -1 :: 1 :: 1 :: 2 :: 0 :: -1 :: -2 :: -1 :: -1 :: 2 :: 1 :: 1 :: 2 :: 1 :: -1 :: 2 :: 0 :: 1 :: 2 :: -1 :: -2 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 8 :: 0 >
[ConvLayerOfmapBuffer] input          = < 8 :: 0 >
[ConvLayerOfmapBuffer] read           = < 1 :: 2 >
[ConvLayerOfmapBuffer] output         = < 8 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 127 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 16 16
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 16 read addr = 16 en = 0
[conv0][1/1/0/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 524289 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 524289
acc  = 524289
accA = 2 acc >> 18 = 2 acc.slice() = 2
accB = 1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 2 :: 1 >
[ConvLayerOfmapBuffer] input          = < 2 :: 1 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -1 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 128 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 17 17
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 17 read addr = 17 en = 0
[conv0][1/1/0/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -3 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: 9 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 129 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 18 18
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 18 read addr = 18 en = 0
[conv0][1/1/0/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 262142 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262142
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 262142
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -2 >
[ConvLayerOfmapBuffer] input          = < 1 :: -2 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -2 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 8 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 130 (384) nInputs 16
conv0f = 1 c = 1 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 19 19
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 19 read addr = 19 en = 0
[conv0][1/1/0/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/0/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 262146 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262146
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 262146
accA = 1 acc >> 18 = 1 acc.slice() = 1
accB = 2
[Conv2DKernel] ifmap = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: 2 >
[ConvLayerOfmapBuffer] input          = < 1 :: 2 >
[ConvLayerOfmapBuffer] read           = < -5 :: 4 >
[ConvLayerOfmapBuffer] output         = < -4 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -1 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 131 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 20 20
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 20 read addr = 20 en = 0
[conv0][1/1/1/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/1/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < -524287 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = -524287
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = -524287
accA = -2 acc >> 18 = -2 acc.slice() = 254
accB = 1
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -2 :: 1 >
[ConvLayerOfmapBuffer] input          = < -2 :: 1 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -5 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 132 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 1 >
[ConvLayerIfmapBuffer] addr = 21 21
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 21 read addr = 21 en = 0
[conv0][1/1/1/1] [padAndBufferize] At stream 0 = < 0 :: 1 >
Line buffer inputVec = < 0 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[conv0][1/1/1/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 262143 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
tmp         = 262143
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -2 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 133 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 22 22
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 22 read addr = 22 en = 0
[conv0][1/1/1/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[conv0][1/1/1/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -3 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -4 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 134 (384) nInputs 16
conv0f = 1 c = 1 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 23 23
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/1/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 23 read addr = 23 en = 0
[conv0][1/1/1/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][1/1/1/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262145 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -262145
acc  = -262145
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -1 :: -1 >
[ConvLayerOfmapBuffer] input          = < -1 :: -1 >
[ConvLayerOfmapBuffer] read           = < -5 :: 4 >
[ConvLayerOfmapBuffer] output         = < -6 :: 3 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -5 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 135 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 24 24
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 24 read addr = 24 en = 0
[conv0][1/1/2/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/2/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 0
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 0
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -3 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -2 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 136 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: -1 >
[ConvLayerIfmapBuffer] addr = 25 25
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 25 read addr = 25 en = 0
[conv0][1/1/2/1] [padAndBufferize] At stream 0 = < 1 :: -1 >
Line buffer inputVec = < 1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[conv0][1/1/2/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -524286 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 >
tmp         = -524286
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 524290 :: 0 :: 0 :: -262143 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
tmp         = 262147
acc  = -262139
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 5
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -1 :: 5 >
[ConvLayerOfmapBuffer] input          = < -1 :: 5 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -4 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -3 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 137 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 1 :: 1 >
[ConvLayerIfmapBuffer] addr = 26 26
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(5, 0, UNSIGNED)) = 26 read addr = 26 en = 0
[conv0][1/1/2/2] [padAndBufferize] At stream 0 = < 1 :: 1 >
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[conv0][1/1/2/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -524286 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 >
tmp         = -524287
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 262143 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
tmp         = 262145
acc  = -262142
accA = -1 acc >> 18 = -1 acc.slice() = 255
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -1 :: 2 >
[ConvLayerOfmapBuffer] input          = < -1 :: 2 >
[ConvLayerOfmapBuffer] read           = < -3 :: 2 >
[ConvLayerOfmapBuffer] output         = < -4 :: 4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < -6 :: 3 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 138 (384) nInputs 16
conv0f = 1 c = 1 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 27 27
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/2/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 27 read addr = 27 en = 0
[conv0][1/1/2/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[conv0][1/1/2/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 >
tmp         = -3
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -262145 :: 0 :: 0 :: 262145 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
tmp         = 0
acc  = -3
accA = 0 acc >> 18 = -1 acc.slice() = 255
accB = -3
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 0 :: -3 >
[ConvLayerOfmapBuffer] input          = < 0 :: -3 >
[ConvLayerOfmapBuffer] read           = < -5 :: 4 >
[ConvLayerOfmapBuffer] output         = < -5 :: 1 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < -3 :: 2 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 4fc 12 (384) nInputs 16
UNPADDING: 139 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 28 28
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 28 read addr = 28 en = 0
[conv0][1/1/3/0] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[conv0][1/1/3/0] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -2
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -262145 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
tmp         = -262145
acc  = -262147
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -3
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -1 :: -3 >
[ConvLayerOfmapBuffer] input          = < -1 :: -3 >
[ConvLayerOfmapBuffer] read           = < -4 :: 9 >
[ConvLayerOfmapBuffer] output         = < -5 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 :: 7 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 1fb 13 (384) nInputs 16
UNPADDING: 140 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 29 29
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 29 read addr = 29 en = 0
[conv0][1/1/3/1] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[conv0][1/1/3/1] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
tmp         = -1
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: 0 :: 262145 :: 0 :: 0 :: -524290 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
tmp         = -262145
acc  = -262146
accA = -1 acc >> 18 = -2 acc.slice() = 254
accB = -2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < -1 :: -2 >
[ConvLayerOfmapBuffer] input          = < -1 :: -2 >
[ConvLayerOfmapBuffer] read           = < -4 :: 9 >
[ConvLayerOfmapBuffer] output         = < -5 :: 7 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -4 :: 4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 141 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 30 30
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 30 read addr = 30 en = 0
[conv0][1/1/3/2] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[conv0][1/1/3/2] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262144 :: -1 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 >
tmp         = 262143
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < 0 :: -524288 :: 0 :: 0 :: -2 :: 524290 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
tmp         = 0
acc  = 262143
accA = 1 acc >> 18 = 0 acc.slice() = 0
accB = -1
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 1 :: -1 >
[ConvLayerOfmapBuffer] input          = < 1 :: -1 >
[ConvLayerOfmapBuffer] read           = < -4 :: 9 >
[ConvLayerOfmapBuffer] output         = < -3 :: 8 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -5 :: 1 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 3
UNPADDING: 142 (384) nInputs 16
conv0f = 1 c = 1 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 31 31
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][1/1/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(5, 0, UNSIGNED)) = 31 read addr = 31 en = 0
[conv0][1/1/3/3] [padAndBufferize] At stream 0 = < 0 :: 0 >
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[conv0][1/1/3/3] [initAndReadCoeff] stream 0: addr (dfeFix(2, 0, UNSIGNED)) = 3
[DotProd] vecA = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 262144 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 >
coeffChunkB = < 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 >
coeffChunk  = < -524287 :: 262146 :: 262142 :: 0 :: 262144 :: -1 :: -2 :: -1 :: -524286 >
ifmapChunk  = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = 262144
[DotProd] vecA = < 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
[DotProd] vecC = < -524289 :: 0 :: 0 :: 262145 :: 2 :: 0 :: 0 :: 0 :: 0 >
coeffChunkA = < -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 >
coeffChunkB = < -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
coeffChunk  = < -524289 :: -524288 :: 262145 :: -262145 :: 2 :: 524290 :: -262145 :: 0 :: 262143 >
ifmapChunk  = < 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
tmp         = -262142
acc  = 2
accA = 0 acc >> 18 = 0 acc.slice() = 0
accB = 2
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -2 :: 1 :: 1 :: 0 :: 1 :: 0 :: 0 :: 0 :: -2 :: -2 :: -2 :: 1 :: -1 :: 0 :: 2 :: -1 :: 0 :: 1 :: 1 :: 2 :: -2 :: 0 :: 0 :: -1 :: -2 :: -1 :: 2 :: -1 :: 0 :: 1 :: -1 :: 2 :: 2 :: -1 :: 0 :: -1 >
[Conv2DKernel] ofmap = < 0 :: 2 >
[ConvLayerOfmapBuffer] input          = < 0 :: 2 >
[ConvLayerOfmapBuffer] read           = < 8 :: 0 >
[ConvLayerOfmapBuffer] output         = < 8 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < -5 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 3
PADDING: 8fd 14 (384) nInputs 16
UNPADDING: 143 (384) nInputs 16
PADDING: 208 15 (384) nInputs 16
UNPADDING: 144 (384) nInputs 16
PADDING: 208 16 (384) nInputs 16
UNPADDING: 145 (384) nInputs 16
PADDING: 208 17 (384) nInputs 16
UNPADDING: 146 (384) nInputs 16
PADDING: 208 18 (384) nInputs 16
UNPADDING: 147 (384) nInputs 16
PADDING: 208 19 (384) nInputs 16
UNPADDING: 148 (384) nInputs 16
PADDING: 208 20 (384) nInputs 16
UNPADDING: 149 (384) nInputs 16
PADDING: 208 21 (384) nInputs 16
UNPADDING: 150 (384) nInputs 16
PADDING: 208 22 (384) nInputs 16
UNPADDING: 151 (384) nInputs 16
PADDING: 208 23 (384) nInputs 16
UNPADDING: 152 (384) nInputs 16
PADDING: 208 24 (384) nInputs 16
UNPADDING: 153 (384) nInputs 16
PADDING: 208 25 (384) nInputs 16
UNPADDING: 154 (384) nInputs 16
PADDING: 208 26 (384) nInputs 16
UNPADDING: 155 (384) nInputs 16
PADDING: 208 27 (384) nInputs 16
UNPADDING: 156 (384) nInputs 16
PADDING: 208 28 (384) nInputs 16
UNPADDING: 157 (384) nInputs 16
PADDING: 208 29 (384) nInputs 16
UNPADDING: 158 (384) nInputs 16
PADDING: 208 30 (384) nInputs 16
UNPADDING: 159 (384) nInputs 16
PADDING: 208 31 (384) nInputs 16
UNPADDING: 160 (384) nInputs 16
PADDING: 208 32 (384) nInputs 16
UNPADDING: 161 (384) nInputs 16
PADDING: 208 33 (384) nInputs 16
UNPADDING: 162 (384) nInputs 16
PADDING: 208 34 (384) nInputs 16
UNPADDING: 163 (384) nInputs 16
PADDING: 208 35 (384) nInputs 16
UNPADDING: 164 (384) nInputs 16
PADDING: 208 36 (384) nInputs 16
UNPADDING: 165 (384) nInputs 16
PADDING: 208 37 (384) nInputs 16
UNPADDING: 166 (384) nInputs 16
PADDING: 208 38 (384) nInputs 16
UNPADDING: 167 (384) nInputs 16
PADDING: 208 39 (384) nInputs 16
UNPADDING: 168 (384) nInputs 16
PADDING: 208 40 (384) nInputs 16
UNPADDING: 169 (384) nInputs 16
PADDING: 208 41 (384) nInputs 16
UNPADDING: 170 (384) nInputs 16
PADDING: 208 42 (384) nInputs 16
UNPADDING: 171 (384) nInputs 16
PADDING: 208 43 (384) nInputs 16
UNPADDING: 172 (384) nInputs 16
PADDING: 208 44 (384) nInputs 16
UNPADDING: 173 (384) nInputs 16
PADDING: 208 45 (384) nInputs 16
UNPADDING: 174 (384) nInputs 16
PADDING: 208 46 (384) nInputs 16
UNPADDING: 175 (384) nInputs 16
PADDING: 208 47 (384) nInputs 16
UNPADDING: 176 (384) nInputs 16
PADDING: 208 48 (384) nInputs 16
UNPADDING: 177 (384) nInputs 16
PADDING: 208 49 (384) nInputs 16
UNPADDING: 178 (384) nInputs 16
PADDING: 208 50 (384) nInputs 16
UNPADDING: 179 (384) nInputs 16
PADDING: 208 51 (384) nInputs 16
UNPADDING: 180 (384) nInputs 16
PADDING: 208 52 (384) nInputs 16
UNPADDING: 181 (384) nInputs 16
PADDING: 208 53 (384) nInputs 16
UNPADDING: 182 (384) nInputs 16
PADDING: 208 54 (384) nInputs 16
UNPADDING: 183 (384) nInputs 16
PADDING: 208 55 (384) nInputs 16
UNPADDING: 184 (384) nInputs 16
PADDING: 208 56 (384) nInputs 16
UNPADDING: 185 (384) nInputs 16
PADDING: 208 57 (384) nInputs 16
UNPADDING: 186 (384) nInputs 16
PADDING: 208 58 (384) nInputs 16
UNPADDING: 187 (384) nInputs 16
PADDING: 208 59 (384) nInputs 16
UNPADDING: 188 (384) nInputs 16
PADDING: 208 60 (384) nInputs 16
UNPADDING: 189 (384) nInputs 16
PADDING: 208 61 (384) nInputs 16
UNPADDING: 190 (384) nInputs 16
PADDING: 208 62 (384) nInputs 16
UNPADDING: 191 (384) nInputs 16
PADDING: 208 63 (384) nInputs 16
UNPADDING: 192 (384) nInputs 16
PADDING: 208 64 (384) nInputs 16
UNPADDING: 193 (384) nInputs 16
PADDING: 208 65 (384) nInputs 16
UNPADDING: 194 (384) nInputs 16
PADDING: 208 66 (384) nInputs 16
UNPADDING: 195 (384) nInputs 16
PADDING: 208 67 (384) nInputs 16
UNPADDING: 196 (384) nInputs 16
PADDING: 208 68 (384) nInputs 16
UNPADDING: 197 (384) nInputs 16
PADDING: 208 69 (384) nInputs 16
UNPADDING: 198 (384) nInputs 16
PADDING: 208 70 (384) nInputs 16
UNPADDING: 199 (384) nInputs 16
PADDING: 208 71 (384) nInputs 16
UNPADDING: 200 (384) nInputs 16
PADDING: 208 72 (384) nInputs 16
UNPADDING: 201 (384) nInputs 16
PADDING: 208 73 (384) nInputs 16
UNPADDING: 202 (384) nInputs 16
PADDING: 208 74 (384) nInputs 16
UNPADDING: 203 (384) nInputs 16
PADDING: 208 75 (384) nInputs 16
UNPADDING: 204 (384) nInputs 16
PADDING: 208 76 (384) nInputs 16
UNPADDING: 205 (384) nInputs 16
PADDING: 208 77 (384) nInputs 16
UNPADDING: 206 (384) nInputs 16
PADDING: 208 78 (384) nInputs 16
UNPADDING: 207 (384) nInputs 16
PADDING: 208 79 (384) nInputs 16
UNPADDING: 208 (384) nInputs 16
PADDING: 208 80 (384) nInputs 16
UNPADDING: 209 (384) nInputs 16
PADDING: 208 81 (384) nInputs 16
UNPADDING: 210 (384) nInputs 16
PADDING: 208 82 (384) nInputs 16
UNPADDING: 211 (384) nInputs 16
PADDING: 208 83 (384) nInputs 16
UNPADDING: 212 (384) nInputs 16
PADDING: 208 84 (384) nInputs 16
UNPADDING: 213 (384) nInputs 16
PADDING: 208 85 (384) nInputs 16
UNPADDING: 214 (384) nInputs 16
PADDING: 208 86 (384) nInputs 16
UNPADDING: 215 (384) nInputs 16
PADDING: 208 87 (384) nInputs 16
UNPADDING: 216 (384) nInputs 16
PADDING: 208 88 (384) nInputs 16
UNPADDING: 217 (384) nInputs 16
PADDING: 208 89 (384) nInputs 16
UNPADDING: 218 (384) nInputs 16
PADDING: 208 90 (384) nInputs 16
UNPADDING: 219 (384) nInputs 16
PADDING: 208 91 (384) nInputs 16
UNPADDING: 220 (384) nInputs 16
PADDING: 208 92 (384) nInputs 16
UNPADDING: 221 (384) nInputs 16
PADDING: 208 93 (384) nInputs 16
UNPADDING: 222 (384) nInputs 16
PADDING: 208 94 (384) nInputs 16
UNPADDING: 223 (384) nInputs 16
PADDING: 208 95 (384) nInputs 16
UNPADDING: 224 (384) nInputs 16
PADDING: 208 96 (384) nInputs 16
UNPADDING: 225 (384) nInputs 16
PADDING: 208 97 (384) nInputs 16
UNPADDING: 226 (384) nInputs 16
PADDING: 208 98 (384) nInputs 16
UNPADDING: 227 (384) nInputs 16
PADDING: 208 99 (384) nInputs 16
UNPADDING: 228 (384) nInputs 16
PADDING: 208 100 (384) nInputs 16
UNPADDING: 229 (384) nInputs 16
PADDING: 208 101 (384) nInputs 16
UNPADDING: 230 (384) nInputs 16
PADDING: 208 102 (384) nInputs 16
UNPADDING: 231 (384) nInputs 16
PADDING: 208 103 (384) nInputs 16
UNPADDING: 232 (384) nInputs 16
PADDING: 208 104 (384) nInputs 16
UNPADDING: 233 (384) nInputs 16
PADDING: 208 105 (384) nInputs 16
UNPADDING: 234 (384) nInputs 16
PADDING: 208 106 (384) nInputs 16
UNPADDING: 235 (384) nInputs 16
PADDING: 208 107 (384) nInputs 16
UNPADDING: 236 (384) nInputs 16
PADDING: 208 108 (384) nInputs 16
UNPADDING: 237 (384) nInputs 16
PADDING: 208 109 (384) nInputs 16
UNPADDING: 238 (384) nInputs 16
PADDING: 208 110 (384) nInputs 16
UNPADDING: 239 (384) nInputs 16
PADDING: 208 111 (384) nInputs 16
UNPADDING: 240 (384) nInputs 16
PADDING: 208 112 (384) nInputs 16
UNPADDING: 241 (384) nInputs 16
PADDING: 208 113 (384) nInputs 16
UNPADDING: 242 (384) nInputs 16
PADDING: 208 114 (384) nInputs 16
UNPADDING: 243 (384) nInputs 16
PADDING: 208 115 (384) nInputs 16
UNPADDING: 244 (384) nInputs 16
PADDING: 208 116 (384) nInputs 16
UNPADDING: 245 (384) nInputs 16
PADDING: 208 117 (384) nInputs 16
UNPADDING: 246 (384) nInputs 16
PADDING: 208 118 (384) nInputs 16
UNPADDING: 247 (384) nInputs 16
PADDING: 208 119 (384) nInputs 16
UNPADDING: 248 (384) nInputs 16
PADDING: 208 120 (384) nInputs 16
UNPADDING: 249 (384) nInputs 16
PADDING: 208 121 (384) nInputs 16
UNPADDING: 250 (384) nInputs 16
PADDING: 208 122 (384) nInputs 16
UNPADDING: 251 (384) nInputs 16
PADDING: 208 123 (384) nInputs 16
UNPADDING: 252 (384) nInputs 16
PADDING: 208 124 (384) nInputs 16
UNPADDING: 253 (384) nInputs 16
PADDING: 208 125 (384) nInputs 16
UNPADDING: 254 (384) nInputs 16
PADDING: 208 126 (384) nInputs 16
UNPADDING: 255 (384) nInputs 16
PADDING: 208 127 (384) nInputs 16
UNPADDING: 256 (384) nInputs 16
PADDING: 208 128 (384) nInputs 16
UNPADDING: 257 (384) nInputs 16
PADDING: 208 129 (384) nInputs 16
UNPADDING: 258 (384) nInputs 16
PADDING: 208 130 (384) nInputs 16
UNPADDING: 259 (384) nInputs 16
PADDING: 208 131 (384) nInputs 16
UNPADDING: 260 (384) nInputs 16
PADDING: 208 132 (384) nInputs 16
UNPADDING: 261 (384) nInputs 16
PADDING: 208 133 (384) nInputs 16
UNPADDING: 262 (384) nInputs 16
PADDING: 208 134 (384) nInputs 16
UNPADDING: 263 (384) nInputs 16
PADDING: 208 135 (384) nInputs 16
UNPADDING: 264 (384) nInputs 16
PADDING: 208 136 (384) nInputs 16
UNPADDING: 265 (384) nInputs 16
PADDING: 208 137 (384) nInputs 16
UNPADDING: 266 (384) nInputs 16
PADDING: 208 138 (384) nInputs 16
UNPADDING: 267 (384) nInputs 16
PADDING: 208 139 (384) nInputs 16
UNPADDING: 268 (384) nInputs 16
PADDING: 208 140 (384) nInputs 16
UNPADDING: 269 (384) nInputs 16
PADDING: 208 141 (384) nInputs 16
UNPADDING: 270 (384) nInputs 16
PADDING: 208 142 (384) nInputs 16
UNPADDING: 271 (384) nInputs 16
PADDING: 208 143 (384) nInputs 16
UNPADDING: 272 (384) nInputs 16
PADDING: 208 144 (384) nInputs 16
UNPADDING: 273 (384) nInputs 16
PADDING: 208 145 (384) nInputs 16
UNPADDING: 274 (384) nInputs 16
PADDING: 208 146 (384) nInputs 16
UNPADDING: 275 (384) nInputs 16
PADDING: 208 147 (384) nInputs 16
UNPADDING: 276 (384) nInputs 16
PADDING: 208 148 (384) nInputs 16
UNPADDING: 277 (384) nInputs 16
PADDING: 208 149 (384) nInputs 16
UNPADDING: 278 (384) nInputs 16
PADDING: 208 150 (384) nInputs 16
UNPADDING: 279 (384) nInputs 16
PADDING: 208 151 (384) nInputs 16
UNPADDING: 280 (384) nInputs 16
PADDING: 208 152 (384) nInputs 16
UNPADDING: 281 (384) nInputs 16
PADDING: 208 153 (384) nInputs 16
UNPADDING: 282 (384) nInputs 16
PADDING: 208 154 (384) nInputs 16
UNPADDING: 283 (384) nInputs 16
PADDING: 208 155 (384) nInputs 16
UNPADDING: 284 (384) nInputs 16
PADDING: 208 156 (384) nInputs 16
UNPADDING: 285 (384) nInputs 16
PADDING: 208 157 (384) nInputs 16
UNPADDING: 286 (384) nInputs 16
PADDING: 208 158 (384) nInputs 16
UNPADDING: 287 (384) nInputs 16
PADDING: 208 159 (384) nInputs 16
UNPADDING: 288 (384) nInputs 16
PADDING: 208 160 (384) nInputs 16
UNPADDING: 289 (384) nInputs 16
PADDING: 208 161 (384) nInputs 16
UNPADDING: 290 (384) nInputs 16
PADDING: 208 162 (384) nInputs 16
UNPADDING: 291 (384) nInputs 16
PADDING: 208 163 (384) nInputs 16
UNPADDING: 292 (384) nInputs 16
PADDING: 208 164 (384) nInputs 16
UNPADDING: 293 (384) nInputs 16
PADDING: 208 165 (384) nInputs 16
UNPADDING: 294 (384) nInputs 16
PADDING: 208 166 (384) nInputs 16
UNPADDING: 295 (384) nInputs 16
PADDING: 208 167 (384) nInputs 16
UNPADDING: 296 (384) nInputs 16
PADDING: 208 168 (384) nInputs 16
UNPADDING: 297 (384) nInputs 16
PADDING: 208 169 (384) nInputs 16
UNPADDING: 298 (384) nInputs 16
PADDING: 208 170 (384) nInputs 16
UNPADDING: 299 (384) nInputs 16
PADDING: 208 171 (384) nInputs 16
UNPADDING: 300 (384) nInputs 16
PADDING: 208 172 (384) nInputs 16
UNPADDING: 301 (384) nInputs 16
PADDING: 208 173 (384) nInputs 16
UNPADDING: 302 (384) nInputs 16
PADDING: 208 174 (384) nInputs 16
UNPADDING: 303 (384) nInputs 16
PADDING: 208 175 (384) nInputs 16
UNPADDING: 304 (384) nInputs 16
PADDING: 208 176 (384) nInputs 16
UNPADDING: 305 (384) nInputs 16
PADDING: 208 177 (384) nInputs 16
UNPADDING: 306 (384) nInputs 16
PADDING: 208 178 (384) nInputs 16
UNPADDING: 307 (384) nInputs 16
PADDING: 208 179 (384) nInputs 16
UNPADDING: 308 (384) nInputs 16
PADDING: 208 180 (384) nInputs 16
UNPADDING: 309 (384) nInputs 16
PADDING: 208 181 (384) nInputs 16
UNPADDING: 310 (384) nInputs 16
PADDING: 208 182 (384) nInputs 16
UNPADDING: 311 (384) nInputs 16
PADDING: 208 183 (384) nInputs 16
UNPADDING: 312 (384) nInputs 16
PADDING: 208 184 (384) nInputs 16
UNPADDING: 313 (384) nInputs 16
PADDING: 208 185 (384) nInputs 16
UNPADDING: 314 (384) nInputs 16
PADDING: 208 186 (384) nInputs 16
UNPADDING: 315 (384) nInputs 16
PADDING: 208 187 (384) nInputs 16
UNPADDING: 316 (384) nInputs 16
PADDING: 208 188 (384) nInputs 16
UNPADDING: 317 (384) nInputs 16
PADDING: 208 189 (384) nInputs 16
UNPADDING: 318 (384) nInputs 16
PADDING: 208 190 (384) nInputs 16
UNPADDING: 319 (384) nInputs 16
PADDING: 208 191 (384) nInputs 16
UNPADDING: 320 (384) nInputs 16
PADDING: 208 192 (384) nInputs 16
UNPADDING: 321 (384) nInputs 16
PADDING: 208 193 (384) nInputs 16
UNPADDING: 322 (384) nInputs 16
PADDING: 208 194 (384) nInputs 16
UNPADDING: 323 (384) nInputs 16
PADDING: 208 195 (384) nInputs 16
UNPADDING: 324 (384) nInputs 16
PADDING: 208 196 (384) nInputs 16
UNPADDING: 325 (384) nInputs 16
PADDING: 208 197 (384) nInputs 16
UNPADDING: 326 (384) nInputs 16
PADDING: 208 198 (384) nInputs 16
UNPADDING: 327 (384) nInputs 16
PADDING: 208 199 (384) nInputs 16
UNPADDING: 328 (384) nInputs 16
PADDING: 208 200 (384) nInputs 16
UNPADDING: 329 (384) nInputs 16
PADDING: 208 201 (384) nInputs 16
UNPADDING: 330 (384) nInputs 16
PADDING: 208 202 (384) nInputs 16
UNPADDING: 331 (384) nInputs 16
PADDING: 208 203 (384) nInputs 16
UNPADDING: 332 (384) nInputs 16
PADDING: 208 204 (384) nInputs 16
UNPADDING: 333 (384) nInputs 16
PADDING: 208 205 (384) nInputs 16
UNPADDING: 334 (384) nInputs 16
PADDING: 208 206 (384) nInputs 16
UNPADDING: 335 (384) nInputs 16
PADDING: 208 207 (384) nInputs 16
UNPADDING: 336 (384) nInputs 16
PADDING: 208 208 (384) nInputs 16
UNPADDING: 337 (384) nInputs 16
PADDING: 208 209 (384) nInputs 16
UNPADDING: 338 (384) nInputs 16
PADDING: 208 210 (384) nInputs 16
UNPADDING: 339 (384) nInputs 16
PADDING: 208 211 (384) nInputs 16
UNPADDING: 340 (384) nInputs 16
PADDING: 208 212 (384) nInputs 16
UNPADDING: 341 (384) nInputs 16
PADDING: 208 213 (384) nInputs 16
UNPADDING: 342 (384) nInputs 16
PADDING: 208 214 (384) nInputs 16
UNPADDING: 343 (384) nInputs 16
PADDING: 208 215 (384) nInputs 16
UNPADDING: 344 (384) nInputs 16
PADDING: 208 216 (384) nInputs 16
UNPADDING: 345 (384) nInputs 16
PADDING: 208 217 (384) nInputs 16
UNPADDING: 346 (384) nInputs 16
PADDING: 208 218 (384) nInputs 16
UNPADDING: 347 (384) nInputs 16
PADDING: 208 219 (384) nInputs 16
UNPADDING: 348 (384) nInputs 16
PADDING: 208 220 (384) nInputs 16
UNPADDING: 349 (384) nInputs 16
PADDING: 208 221 (384) nInputs 16
UNPADDING: 350 (384) nInputs 16
PADDING: 208 222 (384) nInputs 16
UNPADDING: 351 (384) nInputs 16
PADDING: 208 223 (384) nInputs 16
UNPADDING: 352 (384) nInputs 16
PADDING: 208 224 (384) nInputs 16
UNPADDING: 353 (384) nInputs 16
PADDING: 208 225 (384) nInputs 16
UNPADDING: 354 (384) nInputs 16
PADDING: 208 226 (384) nInputs 16
UNPADDING: 355 (384) nInputs 16
PADDING: 208 227 (384) nInputs 16
UNPADDING: 356 (384) nInputs 16
PADDING: 208 228 (384) nInputs 16
UNPADDING: 357 (384) nInputs 16
PADDING: 208 229 (384) nInputs 16
UNPADDING: 358 (384) nInputs 16
PADDING: 208 230 (384) nInputs 16
UNPADDING: 359 (384) nInputs 16
PADDING: 208 231 (384) nInputs 16
UNPADDING: 360 (384) nInputs 16
PADDING: 208 232 (384) nInputs 16
UNPADDING: 361 (384) nInputs 16
PADDING: 208 233 (384) nInputs 16
UNPADDING: 362 (384) nInputs 16
PADDING: 208 234 (384) nInputs 16
UNPADDING: 363 (384) nInputs 16
PADDING: 208 235 (384) nInputs 16
UNPADDING: 364 (384) nInputs 16
PADDING: 208 236 (384) nInputs 16
UNPADDING: 365 (384) nInputs 16
PADDING: 208 237 (384) nInputs 16
UNPADDING: 366 (384) nInputs 16
PADDING: 208 238 (384) nInputs 16
UNPADDING: 367 (384) nInputs 16
PADDING: 208 239 (384) nInputs 16
UNPADDING: 368 (384) nInputs 16
PADDING: 208 240 (384) nInputs 16
UNPADDING: 369 (384) nInputs 16
PADDING: 208 241 (384) nInputs 16
UNPADDING: 370 (384) nInputs 16
PADDING: 208 242 (384) nInputs 16
UNPADDING: 371 (384) nInputs 16
PADDING: 208 243 (384) nInputs 16
UNPADDING: 372 (384) nInputs 16
PADDING: 208 244 (384) nInputs 16
UNPADDING: 373 (384) nInputs 16
PADDING: 208 245 (384) nInputs 16
UNPADDING: 374 (384) nInputs 16
PADDING: 208 246 (384) nInputs 16
UNPADDING: 375 (384) nInputs 16
PADDING: 208 247 (384) nInputs 16
UNPADDING: 376 (384) nInputs 16
PADDING: 208 248 (384) nInputs 16
UNPADDING: 377 (384) nInputs 16
PADDING: 208 249 (384) nInputs 16
UNPADDING: 378 (384) nInputs 16
PADDING: 208 250 (384) nInputs 16
UNPADDING: 379 (384) nInputs 16
PADDING: 208 251 (384) nInputs 16
UNPADDING: 380 (384) nInputs 16
PADDING: 208 252 (384) nInputs 16
UNPADDING: 381 (384) nInputs 16
PADDING: 208 253 (384) nInputs 16
UNPADDING: 382 (384) nInputs 16
PADDING: 208 254 (384) nInputs 16
UNPADDING: 383 (384) nInputs 16
PADDING: 208 255 (384) nInputs 16
PADDING: 208 256 (384) nInputs 16
PADDING: 208 257 (384) nInputs 16
PADDING: 208 258 (384) nInputs 16
PADDING: 208 259 (384) nInputs 16
PADDING: 208 260 (384) nInputs 16
PADDING: 208 261 (384) nInputs 16
PADDING: 208 262 (384) nInputs 16
PADDING: 208 263 (384) nInputs 16
PADDING: 208 264 (384) nInputs 16
PADDING: 208 265 (384) nInputs 16
PADDING: 208 266 (384) nInputs 16
PADDING: 208 267 (384) nInputs 16
PADDING: 208 268 (384) nInputs 16
PADDING: 208 269 (384) nInputs 16
PADDING: 208 270 (384) nInputs 16
PADDING: 208 271 (384) nInputs 16
PADDING: 208 272 (384) nInputs 16
PADDING: 208 273 (384) nInputs 16
PADDING: 208 274 (384) nInputs 16
PADDING: 208 275 (384) nInputs 16
PADDING: 208 276 (384) nInputs 16
PADDING: 208 277 (384) nInputs 16
PADDING: 208 278 (384) nInputs 16
PADDING: 208 279 (384) nInputs 16
PADDING: 208 280 (384) nInputs 16
PADDING: 208 281 (384) nInputs 16
PADDING: 208 282 (384) nInputs 16
PADDING: 208 283 (384) nInputs 16
PADDING: 208 284 (384) nInputs 16
PADDING: 208 285 (384) nInputs 16
PADDING: 208 286 (384) nInputs 16
PADDING: 208 287 (384) nInputs 16
PADDING: 208 288 (384) nInputs 16
PADDING: 208 289 (384) nInputs 16
PADDING: 208 290 (384) nInputs 16
PADDING: 208 291 (384) nInputs 16
PADDING: 208 292 (384) nInputs 16
PADDING: 208 293 (384) nInputs 16
PADDING: 208 294 (384) nInputs 16
PADDING: 208 295 (384) nInputs 16
PADDING: 208 296 (384) nInputs 16
PADDING: 208 297 (384) nInputs 16
PADDING: 208 298 (384) nInputs 16
PADDING: 208 299 (384) nInputs 16
PADDING: 208 300 (384) nInputs 16
PADDING: 208 301 (384) nInputs 16
PADDING: 208 302 (384) nInputs 16
PADDING: 208 303 (384) nInputs 16
PADDING: 208 304 (384) nInputs 16
PADDING: 208 305 (384) nInputs 16
PADDING: 208 306 (384) nInputs 16
PADDING: 208 307 (384) nInputs 16
PADDING: 208 308 (384) nInputs 16
PADDING: 208 309 (384) nInputs 16
PADDING: 208 310 (384) nInputs 16
PADDING: 208 311 (384) nInputs 16
PADDING: 208 312 (384) nInputs 16
PADDING: 208 313 (384) nInputs 16
PADDING: 208 314 (384) nInputs 16
PADDING: 208 315 (384) nInputs 16
PADDING: 208 316 (384) nInputs 16
PADDING: 208 317 (384) nInputs 16
PADDING: 208 318 (384) nInputs 16
PADDING: 208 319 (384) nInputs 16
PADDING: 208 320 (384) nInputs 16
PADDING: 208 321 (384) nInputs 16
PADDING: 208 322 (384) nInputs 16
PADDING: 208 323 (384) nInputs 16
PADDING: 208 324 (384) nInputs 16
PADDING: 208 325 (384) nInputs 16
PADDING: 208 326 (384) nInputs 16
PADDING: 208 327 (384) nInputs 16
PADDING: 208 328 (384) nInputs 16
PADDING: 208 329 (384) nInputs 16
PADDING: 208 330 (384) nInputs 16
PADDING: 208 331 (384) nInputs 16
PADDING: 208 332 (384) nInputs 16
PADDING: 208 333 (384) nInputs 16
PADDING: 208 334 (384) nInputs 16
PADDING: 208 335 (384) nInputs 16
PADDING: 208 336 (384) nInputs 16
PADDING: 208 337 (384) nInputs 16
PADDING: 208 338 (384) nInputs 16
PADDING: 208 339 (384) nInputs 16
PADDING: 208 340 (384) nInputs 16
PADDING: 208 341 (384) nInputs 16
PADDING: 208 342 (384) nInputs 16
PADDING: 208 343 (384) nInputs 16
PADDING: 208 344 (384) nInputs 16
PADDING: 208 345 (384) nInputs 16
PADDING: 208 346 (384) nInputs 16
PADDING: 208 347 (384) nInputs 16
PADDING: 208 348 (384) nInputs 16
PADDING: 208 349 (384) nInputs 16
PADDING: 208 350 (384) nInputs 16
PADDING: 208 351 (384) nInputs 16
PADDING: 208 352 (384) nInputs 16
PADDING: 208 353 (384) nInputs 16
PADDING: 208 354 (384) nInputs 16
PADDING: 208 355 (384) nInputs 16
PADDING: 208 356 (384) nInputs 16
PADDING: 208 357 (384) nInputs 16
PADDING: 208 358 (384) nInputs 16
PADDING: 208 359 (384) nInputs 16
PADDING: 208 360 (384) nInputs 16
PADDING: 208 361 (384) nInputs 16
PADDING: 208 362 (384) nInputs 16
PADDING: 208 363 (384) nInputs 16
PADDING: 208 364 (384) nInputs 16
PADDING: 208 365 (384) nInputs 16
PADDING: 208 366 (384) nInputs 16
PADDING: 208 367 (384) nInputs 16
PADDING: 208 368 (384) nInputs 16
PADDING: 208 369 (384) nInputs 16
PADDING: 208 370 (384) nInputs 16
PADDING: 208 371 (384) nInputs 16
PADDING: 208 372 (384) nInputs 16
PADDING: 208 373 (384) nInputs 16
PADDING: 208 374 (384) nInputs 16
PADDING: 208 375 (384) nInputs 16
PADDING: 208 376 (384) nInputs 16
PADDING: 208 377 (384) nInputs 16
PADDING: 208 378 (384) nInputs 16
PADDING: 208 379 (384) nInputs 16
PADDING: 208 380 (384) nInputs 16
PADDING: 208 381 (384) nInputs 16
PADDING: 208 382 (384) nInputs 16
PADDING: 208 383 (384) nInputs 16
make stopsim
make[1]: Entering directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2'
maxcompilersim -n rz3515f -cLIMA stop
Terminating MaxelerOS daemon (PID 39513)...
MaxelerOS daemon killed
Terminating simulated system (PID 39508)...
Simulated system killed
make[1]: Leaving directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_conv_b8_p2'
