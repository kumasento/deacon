BUILD_NAME_OPTION = _FREQ_200_DBG
Running maxjc ...
Using maxj batch compiler.
jar: /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/ecj.jar
MAXAPPJCP=.:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar \
	MAXAPPPKG=single_dws_conv_par MAXSOURCEDIRS=../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src \
	maxJavaRun -v -m 8192 SingleDwsConvParManager \
	DFEModel=MAIA maxFileName=SingleDwsConvPar target='DFE_SIM' enableMPCX=false \
	FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par/data/data-single-dws-conv-par.txt 
]0; maxJavaRun: SingleDwsConvParManager DFEModel=MAIA maxFileName=SingleDwsConvPar target=DFE_SIM enableMPCX=false FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par/data/data-single-dws-conv-par.txt maxJavaRun : Execute Java program with Maxeler environment

Input classpath     : 
MaxCompiler JAR     : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar
                      (from MAXCOMPILERDIR)
MAXAPPJCP           : .:/mnt/ccnas2/bdp/rz3515/projects/deacon/src:/mnt/ccnas2/bdp/rz3515/projects/deacon/test:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
MAXSOURCEDIRS       : ../../src:/mnt/ccnas2/bdp/rz3515/projects/deacon/src

.maxJavaRun present : No
Custom Param file   : None
MAXAPPPKG           : single_dws_conv_par
MAXJVMMEM           : 
MAXEMMAJCP          : 
MAXEMMARUN          : 
JACOCO_AGENT        : 
JACOCO_AGENT_OPTIONS: 

----------------------------------------------------------
Java class to run   : single_dws_conv_par.SingleDwsConvParManager
Class arguments     : DFEModel=MAIA maxFileName=SingleDwsConvPar target=DFE_SIM enableMPCX=false FREQ=200 DEBUG=true COEFF_FILE=/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par/data/data-single-dws-conv-par.txt
Execution classpath : /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/MaxCompiler.jar:
                      .:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/src:
                      /mnt/ccnas2/bdp/rz3515/projects/deacon/test:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max4Platform.jar:
                      /vol/cc/opt/maxeler/maxcompiler-2021.1/lib/Max5Platform.jar
JVM memory limit    : 8192 MB
----------------------------------------------------------

Fri 20:48: MaxCompiler version: 2021.1
Fri 20:48: Build "SingleDwsConvPar" start time: Fri Dec 31 20:48:27 GMT 2021
Fri 20:48: Main build process running as user rz3515 on host cccad5.doc.ic.ac.uk
Fri 20:48: Build location: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG
Fri 20:48: Detailed build log available in "_build.log"
Fri 20:48: 
Fri 20:48: ENGINE BUILD PARAMETERS
Fri 20:48: 	              Build name: SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG                                                                            
Fri 20:48: 	             maxFileName: SingleDwsConvPar                                                                                                      
Fri 20:48: 	                  target: DFE_SIM                                                                                                               
Fri 20:48: 	                DFEModel: MAIA                                                                                                                  
Fri 20:48: 	              enableMPCX: false                                                                                                                 
Fri 20:48: 	                bitWidth: 32                                                                                                                    
Fri 20:48: 	                     WBW: 32                                                                                                                    
Fri 20:48: 	                   DTYPE: fixed                                                                                                                 
Fri 20:48: 	           NUM_FRAC_BITS: 8                                                                                                                     
Fri 20:48: 	                      PF: 1                                                                                                                     
Fri 20:48: 	                      PC: 1                                                                                                                     
Fri 20:48: 	                      PK: 1                                                                                                                     
Fri 20:48: 	                       H: 1                                                                                                                     
Fri 20:48: 	                       W: 1                                                                                                                     
Fri 20:48: 	                       C: 1                                                                                                                     
Fri 20:48: 	                       F: 1                                                                                                                     
Fri 20:48: 	                       K: 1                                                                                                                     
Fri 20:48: 	                     PAD: 0                                                                                                                     
Fri 20:48: 	                       S: 1                                                                                                                     
Fri 20:48: 	                     SEQ: 0                                                                                                                     
Fri 20:48: 	                    FREQ: 200                                                                                                                   
Fri 20:48: 	                USE_DRAM: false                                                                                                                 
Fri 20:48: 	                 USE_BNN: false                                                                                                                 
Fri 20:48: 	            USE_WINOGRAD: false                                                                                                                 
Fri 20:48: 	WINOGRAD_WEIGHTS_OFFLINE: false                                                                                                                 
Fri 20:48: 	   NUM_COEFF_FIFO_SPLITS: 1                                                                                                                     
Fri 20:48: 	                   DEBUG: true                                                                                                                  
Fri 20:48: 	           COEFF_ON_CHIP: false                                                                                                                 
Fri 20:48: 	              INIT_COEFF: false                                                                                                                 
Fri 20:48: 	              COEFF_FILE: /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par/data/data-single-dws-conv-par.txt
Fri 20:48: Generating kernel conv0 ...
Fri 20:48: Instantiating kernel "conv0"
Fri 20:48: T = dfeFix(16, 0, TWOSCOMPLEMENT)
Fri 20:48: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Fri 20:48: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Fri 20:48: coeffOnChip = true
Fri 20:48: Input height = 2, output height = 2, pad = 1
Fri 20:48: Counter H = 4 W = 4
Fri 20:48: oh is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 20:48: ow is dfeFix(32, 0, TWOSCOMPLEMENT)
Fri 20:48: Building line buffer for "conv0" ...
Fri 20:48: Line buffer shape 3 x 2, produces 1 number of 3 x 3 tiles per cycle
Fri 20:48: Line buffer input vector size: 2, output vector size: 18.
Fri 20:48: Number of separated line buffers: 2
Fri 20:48: Initialising line buffer kernel with 3 x 4 x 1
Fri 20:48: Size of line buffer output: 3
Fri 20:48: Number of line buffer output chunks: 3
Fri 20:48: Connecting outputs from chunk (#000) ...
Fri 20:48: Connecting outputs from chunk (#001) ...
Fri 20:48: Connecting outputs from chunk (#002) ...
Fri 20:48: Initialising line buffer kernel with 3 x 4 x 1
Fri 20:48: Size of line buffer output: 3
Fri 20:48: Number of line buffer output chunks: 3
Fri 20:48: Connecting outputs from chunk (#000) ...
Fri 20:48: Connecting outputs from chunk (#001) ...
Fri 20:48: Connecting outputs from chunk (#002) ...
Fri 20:48: Depthwise coeff ROM depth = 1
Fri 20:48: ROM created for conv0_dw of depth 1 and type {DFEVectorType: 18 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@11c9af63
Fri 20:48: Building the CORE arithmetic unit for "conv0_dw" ...
Fri 20:48: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Fri 20:48: CORE ifmap vector size: 18
Fri 20:48: CORE coefficient vector size: 18
Fri 20:48: CORE ofmap vector size: 2
Fri 20:48: Ifmap buffer configuration 16 x 2
Fri 20:48: loop = false
Fri 20:48: Pointwise coeff ROM depth = 1
Fri 20:48: ROM created for conv0_pw of depth 1 and type {DFEVectorType: 4 x dfeFix(16, 0, TWOSCOMPLEMENT)}: com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory@4efc180e
Fri 20:48: Building the CORE arithmetic unit for "conv0_pw" ...
Fri 20:48: WT = dfeFix(16, 0, TWOSCOMPLEMENT)
Fri 20:48: CORE ifmap vector size: 2
Fri 20:48: CORE coefficient vector size: 4
Fri 20:48: CORE ofmap vector size: 2
Fri 20:48: [ConvLayerOfmapBuffer] depth =     4 addr_bits =     2
Fri 20:48: Connecting to output: ofmap
Fri 20:48: Compiling kernel "conv0"
Fri 20:48: 
Fri 20:48: Generating padding kernels for DRAM access
Fri 20:48: Instantiating kernel "ifmap_unpad"
Fri 20:48: Compiling kernel "ifmap_unpad"
Fri 20:48: 
Fri 20:48: Instantiating kernel "ofmap_pad"
Fri 20:48: Compiling kernel "ofmap_pad"
Fri 20:48: 
Fri 20:48: Setting up stream connections for conv0
Fri 20:48: DRAM will be used to build the design
Fri 20:48: Setup streams for kernel "conv0"
Fri 20:48: # cycles:       16
Fri 20:48: # ifmap stream: 8
Fri 20:48: # ofmap stream: 8
Fri 20:48: coeff vec size: 36
Fri 20:48: coeff stream bit width: 576
Fri 20:48: coeff stream chunk size: 9
Fri 20:48: Running back-end simulation build (3 phases)
Fri 20:48: (1/3) - Prepare MaxFile Data (GenerateMaxFileDataFile)
Fri 20:48: (2/3) - Compile Simulation Modules (SimCompilePass)
Fri 20:48: (3/3) - Generate MaxFile (AddSimObjectToMaxFilePass)
Fri 20:48: MaxFile: /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleDwsConvPar.max (MD5Sum: 6d82aa611a25c9c1ddcf5b1a88a8dedd)
Fri 20:48: Build completed: Fri Dec 31 20:48:37 GMT 2021 (took 9 secs)
cp /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleDwsConvPar.h /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/Maxfiles.h
sliccompile /mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleDwsConvPar.max SingleDwsConvPar_FREQ_200_DBG_sim.o
Processing maxfile for MAX5_LIMA_SIM from '/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleDwsConvPar.max'.
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/dev/null" -DSLIC_NO_DESTRUCTORS -c /tmp/sliccompile_702747117339450995/cobject/max_5209988613371227671.c -o /tmp/sliccompile_702747117339450995/cobject/max_5209988613371227671.c.o 
/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/clang/bin/start.sh clang -fgnu89-inline -pipe -O0 -std=gnu99 -Wall -Werror -frandom-seed=foo -Wno-unused-variable -Wno-unused-function -fPIC -I /vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -DMAXFILE_INC="/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results/SingleDwsConvPar.max" -DSLIC_NO_DESTRUCTORS -c /vol/cc/opt/maxeler/maxcompiler-2021.1/src/slicinterface/MaxFileInit.c -o max_8598778804490271844.o 
ld -r /tmp/sliccompile_702747117339450995/cobject/max_5209988613371227671.c.o max_8598778804490271844.o -o SingleDwsConvPar_FREQ_200_DBG_sim.o 
Copying .max file C object into '/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par'
g++ ../../src/single_dws_conv_par/SingleDwsConvParCpuCode.cpp -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -I/mnt/ccnas2/bdp/rz3515/maxcompiler_builds/SingleDwsConvPar_MAIA_DFE_SIM_FREQ_200_DBG/results -D__SIM__ -DDESIGN_NAME=SingleDwsConvPar -c -o SingleDwsConvPar_FREQ_200_DBG_simc.o
g++ -fopenmp -lrt -D_GLIBCXX_USE_CXX11_ABI=0 -O3 -std=c++11  -Wall -I/mnt/ccnas2/bdp/rz3515/cccad/opt/include -I/usr/local/include -I../src -I../src/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/runtime/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include -I/vol/cc/opt/maxeler/maxcompiler-2021.1/include/slic -I/lib/maxeleros-sim/include -I/mnt/ccnas2/bdp/rz3515/projects/deacon/lib/dfe-snippets/include -D_XOPEN_SOURCE=600 -DDESIGN_  -DTRACE  -g -o SingleDwsConvPar_FREQ_200_DBG_sim SingleDwsConvPar_FREQ_200_DBG_sim.o SingleDwsConvPar_FREQ_200_DBG_simc.o -L/mnt/ccnas2/bdp/rz3515/cccad/opt/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib -L/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib -L/lib/maxeleros-sim/lib -L./ -lmaxeleros -lglog -lgflags -lslic -lm -lpthread -lcurl
maxcompilersim -n rz3515g -cLIMA -d1 restart

Simulated system 'rz3515g' started:
    Board:                   MAX5C (default: 48GB RAM)
    RAM size for simulation: 51539607552 bytes.
    Temporary RAM file in    /tmp/. (Use option -k to preserve it.)
    Simulation log:          /homes/rz3515/.maxcompilersim/rz3515g-cccad5.log
    Daemon log:              /homes/rz3515/.maxcompilersim/rz3515g-cccad5_daemon.log

Simulated devices available:
    rz3515g0:rz3515g

To use simulated devices you need to set the environment variables
LD_PRELOAD and MAXELEROSDIR. As LD_PRELOAD must not contain spaces,
you might need to set LD_LIBRARY_PATH in addition (see the MaxCompiler
tutorial for details).  Also, ensure that you add the correct simulated
system name (namely "rz3515g") to your SLiC configuration. The following
examples assume there are no spaces in LD_PRELOAD or SLIC_CONF.
Example for BASH:
    export MAXELEROSDIR=$MAXCOMPILERDIR/lib/maxeleros-sim
    export LD_PRELOAD=$MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    export SLIC_CONF="$SLIC_CONF;use_simulation=rz3515g"
Example for CSH:
    setenv MAXELEROSDIR $MAXCOMPILERDIR/lib/maxeleros-sim
    setenv LD_PRELOAD $MAXELEROSDIR/lib/libmaxeleros.so:$LD_PRELOAD
    setenv SLIC_CONF "$SLIC_CONF;use_simulation=rz3515g"

SLIC_CONF+="default_maxdebug_mode=MAX_DEBUG_ALWAYS;" SLIC_CONF+="use_simulation=rz3515g" LD_PRELOAD=/vol/cc/opt/maxeler/maxcompiler-2021.1/lib/maxeleros-sim/lib/libmaxeleros.so ./SingleDwsConvPar_FREQ_200_DBG_sim -n 2 -f /mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par/data/data-single-dws-conv-par.txt -g
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[0] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[0] =   2.000000 +   1.000000 =   3.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[0] =   3.000000 +   2.000000 =   5.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[0] =   5.000000 +   0.000000 =   5.000000
output[0] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[0] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[0] =   1.000000 +   1.000000 =   2.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[0] =   2.000000 +  -1.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   0.000000
output[0] =   1.000000 +   0.000000 =   1.000000
output[0] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[1] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[1] =   1.000000 +  -2.000000 =  -1.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[1] =  -1.000000 +   0.000000 =  -1.000000
output[1] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[1] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[1] =  -1.000000 +   1.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -1.000000
output[1] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =  -1.000000
output[1] =  -1.000000 +  -2.000000 =  -3.000000
output[1] =   0.000000 +   3.000000 =   3.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[2] =   0.000000 +  -4.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   1.000000
output[2] =  -4.000000 +  -1.000000 =  -5.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[2] =  -5.000000 +  -1.000000 =  -6.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[2] =  -6.000000 +   0.000000 =  -6.000000
output[2] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[2] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   2.000000
output[2] =   2.000000 +  -2.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[2] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[2] =  -1.000000 +  -2.000000 =  -3.000000
output[2] =   0.000000 +   3.000000 =   3.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[3] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[3] =   2.000000 +  -2.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[3] =   0.000000 +   0.000000 =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[3] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[3] =  -1.000000 +   2.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   1.000000
output[3] =   1.000000 +   1.000000 =   2.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[3] =   2.000000 +  -2.000000 =   0.000000
output[3] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[4] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[4] =   2.000000 +   1.000000 =   3.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[4] =   3.000000 +   2.000000 =   5.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   0.000000 weight =   0.000000
output[4] =   5.000000 +   0.000000 =   5.000000
output[4] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[4] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -1.000000 weight =  -1.000000
output[4] =   1.000000 +   1.000000 =   2.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[4] =   2.000000 +  -1.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   2.000000 weight =   0.000000
output[4] =   1.000000 +   0.000000 =   1.000000
output[4] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   0.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[5] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -2.000000
output[5] =   1.000000 +  -2.000000 =  -1.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   0.000000 weight =   2.000000
output[5] =  -1.000000 +   0.000000 =  -1.000000
output[5] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[5] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[5] =  -1.000000 +   1.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =   1.000000 weight =  -1.000000
output[5] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   2.000000 weight =  -1.000000
output[5] =  -1.000000 +  -2.000000 =  -3.000000
output[5] =   0.000000 +   6.000000 =   6.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[6] =   0.000000 +  -4.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   1.000000
output[6] =  -4.000000 +  -1.000000 =  -5.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[6] =  -5.000000 +  -1.000000 =  -6.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   0.000000 weight =  -1.000000
output[6] =  -6.000000 +   0.000000 =  -6.000000
output[6] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[6] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -1.000000 weight =   2.000000
output[6] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[6] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   2.000000 weight =  -1.000000
output[6] =  -1.000000 +  -2.000000 =  -3.000000
output[6] =   0.000000 +   6.000000 =   6.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -2.000000 weight =  -1.000000
output[7] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[7] =   2.000000 +  -2.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   0.000000
output[7] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   0.000000 weight =  -1.000000
output[7] =   0.000000 +   0.000000 =   0.000000
output[7] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[7] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[7] =  -1.000000 +   2.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =   1.000000 weight =   1.000000
output[7] =   1.000000 +   1.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   2.000000 weight =  -1.000000
output[7] =   2.000000 +  -2.000000 =   0.000000
output[7] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[8] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[8] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   2.000000
output[8] =   3.000000 +  -2.000000 =   1.000000
f = 0 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   0.000000
output[8] =   1.000000 +   0.000000 =   1.000000
output[8] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[8] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[8] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =  -1.000000
output[8] =   3.000000 +   2.000000 =   5.000000
f = 0 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   0.000000
output[8] =   5.000000 +   0.000000 =   5.000000
output[8] =   0.000000 +  -5.000000 =  -5.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[9] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[9] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =  -2.000000
output[9] =   2.000000 +   2.000000 =   4.000000
f = 0 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[9] =   4.000000 +   2.000000 =   6.000000
output[9] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[9] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[9] =  -1.000000 +   2.000000 =   1.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =  -1.000000
output[9] =   1.000000 +   2.000000 =   3.000000
f = 0 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[9] =   3.000000 +  -1.000000 =   2.000000
output[9] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[10] =   0.000000 +  -2.000000 =  -2.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   1.000000
output[10] =  -2.000000 +  -2.000000 =  -4.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[10] =  -4.000000 +   1.000000 =  -3.000000
f = 0 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[10] =  -3.000000 +  -1.000000 =  -4.000000
output[10] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[10] =   0.000000 +   2.000000 =   2.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   2.000000
output[10] =   2.000000 +  -4.000000 =  -2.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[10] =  -2.000000 +   2.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[10] =   0.000000 +  -1.000000 =  -1.000000
output[10] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[11] =   0.000000 +   1.000000 =   1.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[11] =   1.000000 +  -4.000000 =  -3.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[11] =  -3.000000 +   0.000000 =  -3.000000
f = 0 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[11] =  -3.000000 +  -1.000000 =  -4.000000
output[11] =   0.000000 +   0.000000 =   0.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[11] =   0.000000 +  -1.000000 =  -1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[11] =  -1.000000 +   4.000000 =   3.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   1.000000
output[11] =   3.000000 +  -2.000000 =   1.000000
f = 0 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[11] =   1.000000 +  -1.000000 =   0.000000
output[11] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[12] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[12] =   1.000000 +   2.000000 =   3.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 1: input =  -1.000000 weight =   2.000000
output[12] =   3.000000 +  -2.000000 =   1.000000
f = 1 c = 0 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   0.000000
output[12] =   1.000000 +   0.000000 =   1.000000
output[12] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[12] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 1 kw = 2: input =  -2.000000 weight =  -1.000000
output[12] =   1.000000 +   2.000000 =   3.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 1: input =  -2.000000 weight =  -1.000000
output[12] =   3.000000 +   2.000000 =   5.000000
f = 1 c = 1 oh = 0 ow = 0 kh = 2 kw = 2: input =   1.000000 weight =   0.000000
output[12] =   5.000000 +   0.000000 =   5.000000
output[12] =   0.000000 + -10.000000 = -10.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[13] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[13] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 0: input =  -1.000000 weight =  -2.000000
output[13] =   2.000000 +   2.000000 =   4.000000
f = 1 c = 0 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =   2.000000
output[13] =   4.000000 +   2.000000 =   6.000000
output[13] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   1.000000
output[13] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[13] =  -1.000000 +   2.000000 =   1.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 0: input =  -2.000000 weight =  -1.000000
output[13] =   1.000000 +   2.000000 =   3.000000
f = 1 c = 1 oh = 0 ow = 1 kh = 2 kw = 1: input =   1.000000 weight =  -1.000000
output[13] =   3.000000 +  -1.000000 =   2.000000
output[13] =   0.000000 +  -4.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =   2.000000
output[14] =   0.000000 +  -2.000000 =  -2.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   1.000000
output[14] =  -2.000000 +  -2.000000 =  -4.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 1: input =  -1.000000 weight =  -1.000000
output[14] =  -4.000000 +   1.000000 =  -3.000000
f = 1 c = 0 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[14] =  -3.000000 +  -1.000000 =  -4.000000
output[14] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 1: input =  -1.000000 weight =  -2.000000
output[14] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 0 kw = 2: input =  -2.000000 weight =   2.000000
output[14] =   2.000000 +  -4.000000 =  -2.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 1: input =  -2.000000 weight =  -1.000000
output[14] =  -2.000000 +   2.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 0 kh = 1 kw = 2: input =   1.000000 weight =  -1.000000
output[14] =   0.000000 +  -1.000000 =  -1.000000
output[14] =   0.000000 +   2.000000 =   2.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =  -1.000000
output[15] =   0.000000 +   1.000000 =   1.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =   2.000000
output[15] =   1.000000 +  -4.000000 =  -3.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 0: input =  -1.000000 weight =   0.000000
output[15] =  -3.000000 +   0.000000 =  -3.000000
f = 1 c = 0 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[15] =  -3.000000 +  -1.000000 =  -4.000000
output[15] =   0.000000 +   0.000000 =   0.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 0: input =  -1.000000 weight =   1.000000
output[15] =   0.000000 +  -1.000000 =  -1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 0 kw = 1: input =  -2.000000 weight =  -2.000000
output[15] =  -1.000000 +   4.000000 =   3.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 0: input =  -2.000000 weight =   1.000000
output[15] =   3.000000 +  -2.000000 =   1.000000
f = 1 c = 1 oh = 1 ow = 1 kh = 1 kw = 1: input =   1.000000 weight =  -1.000000
output[15] =   1.000000 +  -1.000000 =   0.000000
output[15] =   0.000000 +   0.000000 =   0.000000
UNPADDING: 0 (192) nInputs 8
UNPADDING: 1 (192) nInputs 8
UNPADDING: 2 (192) nInputs 8
UNPADDING: 3 (192) nInputs 8
UNPADDING: 4 (192) nInputs 8
UNPADDING: 5 (192) nInputs 8
UNPADDING: 6 (192) nInputs 8
UNPADDING: 7 (192) nInputs 8
UNPADDING: 8 (192) nInputs 8
UNPADDING: 9 (192) nInputs 8
UNPADDING: 10 (192) nInputs 8
UNPADDING: 11 (192) nInputs 8
UNPADDING: 12 (192) nInputs 8
UNPADDING: 13 (192) nInputs 8
UNPADDING: 14 (192) nInputs 8
UNPADDING: 15 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 16 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 17 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 18 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 19 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 20 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < -2 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 21 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -4 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: 1 >
[ConvLayerIfmapBuffer] input = < -4 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < -4 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 22 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: -2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 2 >
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < 2 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 23 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 1 >
[ConvLayerIfmapBuffer] input = < 2 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 2 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 24 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 1 >
[ConvLayerIfmapBuffer] input = < 2 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 2 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 25 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < 0 :: 2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 2 :: 1 :: 0 :: 2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 1 :: 1 :: 0 :: -1 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 5 :: 1 >
[ConvLayerIfmapBuffer] input = < 5 :: 1 >
[ConvLayerIfmapBuffer] output = < 5 :: 1 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 5 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[DotProd] vecA = < 5 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -1 >
[DotProd] vecA = < 5 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -2 >
[Conv2DKernel] ifmap = < 5 :: 1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < -1 :: -2 >
[ConvLayerOfmapBuffer] input          = < -1 :: -2 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < -1 :: -2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 26 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -1 :: 1 :: 0 :: -1 :: -2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: -3 >
[ConvLayerIfmapBuffer] input = < -1 :: -3 >
[ConvLayerIfmapBuffer] output = < -1 :: -3 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < -1 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 3 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -3 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < -1 :: -3 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 3 :: 6 >
[ConvLayerOfmapBuffer] input          = < 3 :: 6 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 3 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 27 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: -3 >
[ConvLayerIfmapBuffer] input = < 0 :: -3 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < 0 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -1 :: -2 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
PADDING: fffeffff 0 (192) nInputs 8
UNPADDING: 28 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -3 :: -3 >
[ConvLayerIfmapBuffer] input = < -3 :: -3 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < -3 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 3 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
PADDING: 60003 1 (192) nInputs 8
UNPADDING: 29 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: -4 :: -1 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 2 :: -2 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -6 :: -3 >
[ConvLayerIfmapBuffer] input = < -6 :: -3 >
[ConvLayerIfmapBuffer] output = < -6 :: -3 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < -6 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[DotProd] vecA = < -6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -3 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 3 >
[DotProd] vecA = < -6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -3 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 6 >
[Conv2DKernel] ifmap = < -6 :: -3 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 3 :: 6 >
[ConvLayerOfmapBuffer] input          = < 3 :: 6 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 3 :: 6 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 30 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 2 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < -1 :: 2 :: 0 :: 1 :: -2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -2 :: -1 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -1 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 31 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: 1 >
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 0 0
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/0] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 0 read addr = 0 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 3 :: 6 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
PADDING: 60003 2 (192) nInputs 8
UNPADDING: 32 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: 2 >
[ConvLayerIfmapBuffer] input = < 1 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 1 1
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/1] [bufferizeIfmap] At stream 0: data = < 1 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 1 read addr = 1 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 3
[ConvLayerOfmapBuffer] latency        = 2
PADDING: 0 3 (192) nInputs 8
UNPADDING: 33 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 2
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: -2 :: 4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 2 :: 2 >
[ConvLayerIfmapBuffer] input = < 2 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 2 2
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/2] [bufferizeIfmap] At stream 0: data = < 2 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 2 read addr = 2 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 34 (192) nInputs 8
conv0f = 0 c = 0 h = 0 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 1 :: -4 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -1 :: -3 >
[ConvLayerIfmapBuffer] input = < -1 :: -3 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 3 3
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/0/3] [bufferizeIfmap] At stream 0: data = < -1 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 3 read addr = 3 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 35 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 2 >
[ConvLayerIfmapBuffer] input = < 0 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 4 4
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/0] [bufferizeIfmap] At stream 0: data = < 0 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 4 read addr = 4 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 36 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < -1 :: -1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 5 5
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 5 read addr = 5 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 37 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 2
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < -2 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -2 :: 1 >
[ConvLayerIfmapBuffer] input = < -2 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 6 6
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/2] [bufferizeIfmap] At stream 0: data = < -2 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 6 read addr = 6 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 38 (192) nInputs 8
conv0f = 0 c = 0 h = 1 w = 3
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: -4 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -2 :: 3 >
[ConvLayerIfmapBuffer] input = < -2 :: 3 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 7 7
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/1/3] [bufferizeIfmap] At stream 0: data = < -2 :: 3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 7 read addr = 7 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 39 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 4 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 4 :: 2 >
[ConvLayerIfmapBuffer] input = < 4 :: 2 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 8 8
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/2/0] [bufferizeIfmap] At stream 0: data = < 4 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 8 read addr = 8 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 40 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 1
ifmapEn = 1
ofmapEn = 0
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < -1 :: -2 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: 1 >
[ConvLayerIfmapBuffer] input = < 1 :: 1 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 9 9
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/2/1] [bufferizeIfmap] At stream 0: data = < 1 :: 1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 9 read addr = 9 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 41 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 2
ifmapEn = 1
ofmapEn = 1
oh = 0 ow = 0
ofmap buffer addr = 0
isInPaddedArea = 0
Line buffer inputVec = < 1 :: 1 >
Line buffer outputVec = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: -2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 1 :: 2 :: 0 :: 2 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 1 :: 5 >
[ConvLayerIfmapBuffer] input = < 1 :: 5 >
[ConvLayerIfmapBuffer] output = < 1 :: 5 >
[ConvLayerIfmapBuffer] addr = 10 10
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/2] [bufferizeIfmap] At stream 0: data = < 1 :: 5 >, write addr (dfeFix(4, 0, UNSIGNED)) = 10 read addr = 10 en = 1
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 5 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -5 >
[DotProd] vecA = < 1 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 5 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -10 >
[Conv2DKernel] ifmap = < 1 :: 5 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < -5 :: -10 >
[ConvLayerOfmapBuffer] input          = < -5 :: -10 >
[ConvLayerOfmapBuffer] read           = < -1 :: -2 >
[ConvLayerOfmapBuffer] output         = < -5 :: -10 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 0
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 42 (192) nInputs 8
conv0f = 0 c = 0 h = 2 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 0 ow = 1
ofmap buffer addr = 1
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 2 :: 0 :: 2 :: 2 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -1 :: 2 :: 0 :: 2 :: -1 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 6 :: 2 >
[ConvLayerIfmapBuffer] input = < 6 :: 2 >
[ConvLayerIfmapBuffer] output = < 6 :: 2 >
[ConvLayerIfmapBuffer] addr = 11 11
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/2/3] [bufferizeIfmap] At stream 0: data = < 6 :: 2 >, write addr (dfeFix(4, 0, UNSIGNED)) = 11 read addr = 11 en = 1
[DotProd] vecA = < 6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < -2 >
[DotProd] vecA = < 6 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 2 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < -4 >
[Conv2DKernel] ifmap = < 6 :: 2 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < -2 :: -4 >
[ConvLayerOfmapBuffer] input          = < -2 :: -4 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < -2 :: -4 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 1
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 43 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 0
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: -1 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -2 :: 0 :: 0 :: 1 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -2 :: -3 >
[ConvLayerIfmapBuffer] input = < -2 :: -3 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 12 12
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/3/0] [bufferizeIfmap] At stream 0: data = < -2 :: -3 >, write addr (dfeFix(4, 0, UNSIGNED)) = 12 read addr = 12 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -5 :: -10 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 0
[ConvLayerOfmapBuffer] latency        = 2
PADDING: fff6fffb 4 (192) nInputs 8
UNPADDING: 44 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 1
ifmapEn = 0
ofmapEn = 0
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: 0 :: -1 :: 0 :: 0 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 0 :: -2 :: 0 :: 0 :: 2 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: 0 :: -1 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 :: 0 :: -1 :: 0 :: 0 :: -2 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerIfmapBuffer] input = < 0 :: 0 >
[ConvLayerIfmapBuffer] output = < 0 :: 0 >
[ConvLayerIfmapBuffer] addr = 13 13
[ConvLayerIfmapBuffer] writeEn = 0 0
[conv0][0/0/3/1] [bufferizeIfmap] At stream 0: data = < 0 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 13 read addr = 13 en = 0
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < 0 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 0
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < -2 :: -4 >
[ConvLayerOfmapBuffer] actual writeEn = 1
[ConvLayerOfmapBuffer] actual addr    = 1
[ConvLayerOfmapBuffer] latency        = 2
PADDING: fffcfffe 5 (192) nInputs 8
UNPADDING: 45 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 2
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 0
ofmap buffer addr = 2
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 0 :: -2 :: -2 :: 0 :: 1 :: -1 :: 0 :: 0 :: 0 >
[DotProd] vecA = < 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < 0 :: 2 :: -4 :: 0 :: 2 :: -1 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < 0 :: -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: -1 >
[ConvLayerIfmapBuffer] input = < -4 :: -1 >
[ConvLayerIfmapBuffer] output = < -4 :: -1 >
[ConvLayerIfmapBuffer] addr = 14 14
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/2] [bufferizeIfmap] At stream 0: data = < -4 :: -1 >, write addr (dfeFix(4, 0, UNSIGNED)) = 14 read addr = 14 en = 1
[DotProd] vecA = < -4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 1 >
[DotProd] vecA = < -4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -1 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 2 >
[Conv2DKernel] ifmap = < -4 :: -1 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 1 :: 2 >
[ConvLayerOfmapBuffer] input          = < 1 :: 2 >
[ConvLayerOfmapBuffer] read           = < 3 :: 6 >
[ConvLayerOfmapBuffer] output         = < 1 :: 2 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 2
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 46 (192) nInputs 8
conv0f = 0 c = 0 h = 3 w = 3
ifmapEn = 0
ofmapEn = 1
oh = 1 ow = 1
ofmap buffer addr = 3
isInPaddedArea = 1
Line buffer inputVec = < 0 :: 0 >
Line buffer outputVec = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 >
[DotProd] vecC = < 1 :: -4 :: 0 :: 0 :: -1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecA = < -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[DotProd] vecB = < 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[DotProd] vecC = < -1 :: 4 :: 0 :: -2 :: -1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] ifmap = < -1 :: -2 :: 0 :: -1 :: 1 :: 0 :: 0 :: 0 :: 0 :: -1 :: -2 :: 0 :: -2 :: 1 :: 0 :: 0 :: 0 :: 0 >
[Conv2DKernel] coeff = < -1 :: 2 :: 1 :: 0 :: -1 :: -1 :: -2 :: 2 :: 0 :: 1 :: -2 :: 2 :: 1 :: -1 :: -1 :: -1 :: -1 :: 0 >
[Conv2DKernel] ofmap = < -4 :: 0 >
[ConvLayerIfmapBuffer] input = < -4 :: 0 >
[ConvLayerIfmapBuffer] output = < -4 :: 0 >
[ConvLayerIfmapBuffer] addr = 15 15
[ConvLayerIfmapBuffer] writeEn = 1 1
[conv0][0/0/3/3] [bufferizeIfmap] At stream 0: data = < -4 :: 0 >, write addr (dfeFix(4, 0, UNSIGNED)) = 15 read addr = 15 en = 1
[DotProd] vecA = < -4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -1 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < -4 >
[DotProd] vecB = < 0 >
[DotProd] vecC = < 0 >
[DotProd] vecA = < 0 >
[DotProd] vecB = < -2 >
[DotProd] vecC = < 0 >
[Conv2DKernel] ifmap = < -4 :: 0 >
[Conv2DKernel] coeff = < 0 :: -1 :: 0 :: -2 >
[Conv2DKernel] ofmap = < 0 :: 0 >
[ConvLayerOfmapBuffer] input          = < 0 :: 0 >
[ConvLayerOfmapBuffer] read           = < 0 :: 0 >
[ConvLayerOfmapBuffer] output         = < 0 :: 0 >
[ConvLayerOfmapBuffer] writeEn        = 1
[ConvLayerOfmapBuffer] addr           = 3
[ConvLayerOfmapBuffer] actual output  = < 0 :: 0 >
[ConvLayerOfmapBuffer] actual writeEn = 0
[ConvLayerOfmapBuffer] actual addr    = 2
[ConvLayerOfmapBuffer] latency        = 2
UNPADDING: 47 (192) nInputs 8
PADDING: 20001 6 (192) nInputs 8
UNPADDING: 48 (192) nInputs 8
PADDING: 0 7 (192) nInputs 8
UNPADDING: 49 (192) nInputs 8
PADDING: 0 8 (192) nInputs 8
UNPADDING: 50 (192) nInputs 8
PADDING: 0 9 (192) nInputs 8
UNPADDING: 51 (192) nInputs 8
PADDING: 0 10 (192) nInputs 8
UNPADDING: 52 (192) nInputs 8
PADDING: 0 11 (192) nInputs 8
UNPADDING: 53 (192) nInputs 8
PADDING: 0 12 (192) nInputs 8
UNPADDING: 54 (192) nInputs 8
PADDING: 0 13 (192) nInputs 8
UNPADDING: 55 (192) nInputs 8
PADDING: 0 14 (192) nInputs 8
UNPADDING: 56 (192) nInputs 8
PADDING: 0 15 (192) nInputs 8
UNPADDING: 57 (192) nInputs 8
PADDING: 0 16 (192) nInputs 8
UNPADDING: 58 (192) nInputs 8
PADDING: 0 17 (192) nInputs 8
UNPADDING: 59 (192) nInputs 8
PADDING: 0 18 (192) nInputs 8
UNPADDING: 60 (192) nInputs 8
PADDING: 0 19 (192) nInputs 8
UNPADDING: 61 (192) nInputs 8
PADDING: 0 20 (192) nInputs 8
UNPADDING: 62 (192) nInputs 8
PADDING: 0 21 (192) nInputs 8
UNPADDING: 63 (192) nInputs 8
PADDING: 0 22 (192) nInputs 8
UNPADDING: 64 (192) nInputs 8
PADDING: 0 23 (192) nInputs 8
UNPADDING: 65 (192) nInputs 8
PADDING: 0 24 (192) nInputs 8
UNPADDING: 66 (192) nInputs 8
PADDING: 0 25 (192) nInputs 8
UNPADDING: 67 (192) nInputs 8
PADDING: 0 26 (192) nInputs 8
UNPADDING: 68 (192) nInputs 8
PADDING: 0 27 (192) nInputs 8
UNPADDING: 69 (192) nInputs 8
PADDING: 0 28 (192) nInputs 8
UNPADDING: 70 (192) nInputs 8
PADDING: 0 29 (192) nInputs 8
UNPADDING: 71 (192) nInputs 8
PADDING: 0 30 (192) nInputs 8
UNPADDING: 72 (192) nInputs 8
PADDING: 0 31 (192) nInputs 8
UNPADDING: 73 (192) nInputs 8
PADDING: 0 32 (192) nInputs 8
UNPADDING: 74 (192) nInputs 8
PADDING: 0 33 (192) nInputs 8
UNPADDING: 75 (192) nInputs 8
PADDING: 0 34 (192) nInputs 8
UNPADDING: 76 (192) nInputs 8
PADDING: 0 35 (192) nInputs 8
UNPADDING: 77 (192) nInputs 8
PADDING: 0 36 (192) nInputs 8
UNPADDING: 78 (192) nInputs 8
PADDING: 0 37 (192) nInputs 8
UNPADDING: 79 (192) nInputs 8
PADDING: 0 38 (192) nInputs 8
UNPADDING: 80 (192) nInputs 8
PADDING: 0 39 (192) nInputs 8
UNPADDING: 81 (192) nInputs 8
PADDING: 0 40 (192) nInputs 8
UNPADDING: 82 (192) nInputs 8
PADDING: 0 41 (192) nInputs 8
UNPADDING: 83 (192) nInputs 8
PADDING: 0 42 (192) nInputs 8
UNPADDING: 84 (192) nInputs 8
PADDING: 0 43 (192) nInputs 8
UNPADDING: 85 (192) nInputs 8
PADDING: 0 44 (192) nInputs 8
UNPADDING: 86 (192) nInputs 8
PADDING: 0 45 (192) nInputs 8
UNPADDING: 87 (192) nInputs 8
PADDING: 0 46 (192) nInputs 8
UNPADDING: 88 (192) nInputs 8
PADDING: 0 47 (192) nInputs 8
UNPADDING: 89 (192) nInputs 8
PADDING: 0 48 (192) nInputs 8
UNPADDING: 90 (192) nInputs 8
PADDING: 0 49 (192) nInputs 8
UNPADDING: 91 (192) nInputs 8
PADDING: 0 50 (192) nInputs 8
UNPADDING: 92 (192) nInputs 8
PADDING: 0 51 (192) nInputs 8
UNPADDING: 93 (192) nInputs 8
PADDING: 0 52 (192) nInputs 8
UNPADDING: 94 (192) nInputs 8
PADDING: 0 53 (192) nInputs 8
UNPADDING: 95 (192) nInputs 8
PADDING: 0 54 (192) nInputs 8
UNPADDING: 96 (192) nInputs 8
PADDING: 0 55 (192) nInputs 8
UNPADDING: 97 (192) nInputs 8
PADDING: 0 56 (192) nInputs 8
UNPADDING: 98 (192) nInputs 8
PADDING: 0 57 (192) nInputs 8
UNPADDING: 99 (192) nInputs 8
PADDING: 0 58 (192) nInputs 8
UNPADDING: 100 (192) nInputs 8
PADDING: 0 59 (192) nInputs 8
UNPADDING: 101 (192) nInputs 8
PADDING: 0 60 (192) nInputs 8
UNPADDING: 102 (192) nInputs 8
PADDING: 0 61 (192) nInputs 8
UNPADDING: 103 (192) nInputs 8
PADDING: 0 62 (192) nInputs 8
UNPADDING: 104 (192) nInputs 8
PADDING: 0 63 (192) nInputs 8
UNPADDING: 105 (192) nInputs 8
PADDING: 0 64 (192) nInputs 8
UNPADDING: 106 (192) nInputs 8
PADDING: 0 65 (192) nInputs 8
UNPADDING: 107 (192) nInputs 8
PADDING: 0 66 (192) nInputs 8
UNPADDING: 108 (192) nInputs 8
PADDING: 0 67 (192) nInputs 8
UNPADDING: 109 (192) nInputs 8
PADDING: 0 68 (192) nInputs 8
UNPADDING: 110 (192) nInputs 8
PADDING: 0 69 (192) nInputs 8
UNPADDING: 111 (192) nInputs 8
PADDING: 0 70 (192) nInputs 8
UNPADDING: 112 (192) nInputs 8
PADDING: 0 71 (192) nInputs 8
UNPADDING: 113 (192) nInputs 8
PADDING: 0 72 (192) nInputs 8
UNPADDING: 114 (192) nInputs 8
PADDING: 0 73 (192) nInputs 8
UNPADDING: 115 (192) nInputs 8
PADDING: 0 74 (192) nInputs 8
UNPADDING: 116 (192) nInputs 8
PADDING: 0 75 (192) nInputs 8
UNPADDING: 117 (192) nInputs 8
PADDING: 0 76 (192) nInputs 8
UNPADDING: 118 (192) nInputs 8
PADDING: 0 77 (192) nInputs 8
UNPADDING: 119 (192) nInputs 8
PADDING: 0 78 (192) nInputs 8
UNPADDING: 120 (192) nInputs 8
PADDING: 0 79 (192) nInputs 8
UNPADDING: 121 (192) nInputs 8
PADDING: 0 80 (192) nInputs 8
UNPADDING: 122 (192) nInputs 8
PADDING: 0 81 (192) nInputs 8
UNPADDING: 123 (192) nInputs 8
PADDING: 0 82 (192) nInputs 8
UNPADDING: 124 (192) nInputs 8
PADDING: 0 83 (192) nInputs 8
UNPADDING: 125 (192) nInputs 8
PADDING: 0 84 (192) nInputs 8
UNPADDING: 126 (192) nInputs 8
PADDING: 0 85 (192) nInputs 8
UNPADDING: 127 (192) nInputs 8
PADDING: 0 86 (192) nInputs 8
UNPADDING: 128 (192) nInputs 8
PADDING: 0 87 (192) nInputs 8
UNPADDING: 129 (192) nInputs 8
PADDING: 0 88 (192) nInputs 8
UNPADDING: 130 (192) nInputs 8
PADDING: 0 89 (192) nInputs 8
UNPADDING: 131 (192) nInputs 8
PADDING: 0 90 (192) nInputs 8
UNPADDING: 132 (192) nInputs 8
PADDING: 0 91 (192) nInputs 8
UNPADDING: 133 (192) nInputs 8
PADDING: 0 92 (192) nInputs 8
UNPADDING: 134 (192) nInputs 8
PADDING: 0 93 (192) nInputs 8
UNPADDING: 135 (192) nInputs 8
PADDING: 0 94 (192) nInputs 8
UNPADDING: 136 (192) nInputs 8
PADDING: 0 95 (192) nInputs 8
UNPADDING: 137 (192) nInputs 8
PADDING: 0 96 (192) nInputs 8
UNPADDING: 138 (192) nInputs 8
PADDING: 0 97 (192) nInputs 8
UNPADDING: 139 (192) nInputs 8
PADDING: 0 98 (192) nInputs 8
UNPADDING: 140 (192) nInputs 8
PADDING: 0 99 (192) nInputs 8
UNPADDING: 141 (192) nInputs 8
PADDING: 0 100 (192) nInputs 8
UNPADDING: 142 (192) nInputs 8
PADDING: 0 101 (192) nInputs 8
UNPADDING: 143 (192) nInputs 8
PADDING: 0 102 (192) nInputs 8
UNPADDING: 144 (192) nInputs 8
PADDING: 0 103 (192) nInputs 8
UNPADDING: 145 (192) nInputs 8
PADDING: 0 104 (192) nInputs 8
UNPADDING: 146 (192) nInputs 8
PADDING: 0 105 (192) nInputs 8
UNPADDING: 147 (192) nInputs 8
PADDING: 0 106 (192) nInputs 8
UNPADDING: 148 (192) nInputs 8
PADDING: 0 107 (192) nInputs 8
UNPADDING: 149 (192) nInputs 8
PADDING: 0 108 (192) nInputs 8
UNPADDING: 150 (192) nInputs 8
PADDING: 0 109 (192) nInputs 8
UNPADDING: 151 (192) nInputs 8
PADDING: 0 110 (192) nInputs 8
UNPADDING: 152 (192) nInputs 8
PADDING: 0 111 (192) nInputs 8
UNPADDING: 153 (192) nInputs 8
PADDING: 0 112 (192) nInputs 8
UNPADDING: 154 (192) nInputs 8
PADDING: 0 113 (192) nInputs 8
UNPADDING: 155 (192) nInputs 8
PADDING: 0 114 (192) nInputs 8
UNPADDING: 156 (192) nInputs 8
PADDING: 0 115 (192) nInputs 8
UNPADDING: 157 (192) nInputs 8
PADDING: 0 116 (192) nInputs 8
UNPADDING: 158 (192) nInputs 8
PADDING: 0 117 (192) nInputs 8
UNPADDING: 159 (192) nInputs 8
PADDING: 0 118 (192) nInputs 8
UNPADDING: 160 (192) nInputs 8
PADDING: 0 119 (192) nInputs 8
UNPADDING: 161 (192) nInputs 8
PADDING: 0 120 (192) nInputs 8
UNPADDING: 162 (192) nInputs 8
PADDING: 0 121 (192) nInputs 8
UNPADDING: 163 (192) nInputs 8
PADDING: 0 122 (192) nInputs 8
UNPADDING: 164 (192) nInputs 8
PADDING: 0 123 (192) nInputs 8
UNPADDING: 165 (192) nInputs 8
PADDING: 0 124 (192) nInputs 8
UNPADDING: 166 (192) nInputs 8
PADDING: 0 125 (192) nInputs 8
UNPADDING: 167 (192) nInputs 8
PADDING: 0 126 (192) nInputs 8
UNPADDING: 168 (192) nInputs 8
PADDING: 0 127 (192) nInputs 8
UNPADDING: 169 (192) nInputs 8
PADDING: 0 128 (192) nInputs 8
UNPADDING: 170 (192) nInputs 8
PADDING: 0 129 (192) nInputs 8
UNPADDING: 171 (192) nInputs 8
PADDING: 0 130 (192) nInputs 8
UNPADDING: 172 (192) nInputs 8
PADDING: 0 131 (192) nInputs 8
UNPADDING: 173 (192) nInputs 8
PADDING: 0 132 (192) nInputs 8
UNPADDING: 174 (192) nInputs 8
PADDING: 0 133 (192) nInputs 8
UNPADDING: 175 (192) nInputs 8
PADDING: 0 134 (192) nInputs 8
UNPADDING: 176 (192) nInputs 8
PADDING: 0 135 (192) nInputs 8
UNPADDING: 177 (192) nInputs 8
PADDING: 0 136 (192) nInputs 8
UNPADDING: 178 (192) nInputs 8
PADDING: 0 137 (192) nInputs 8
UNPADDING: 179 (192) nInputs 8
PADDING: 0 138 (192) nInputs 8
UNPADDING: 180 (192) nInputs 8
PADDING: 0 139 (192) nInputs 8
UNPADDING: 181 (192) nInputs 8
PADDING: 0 140 (192) nInputs 8
UNPADDING: 182 (192) nInputs 8
PADDING: 0 141 (192) nInputs 8
UNPADDING: 183 (192) nInputs 8
PADDING: 0 142 (192) nInputs 8
UNPADDING: 184 (192) nInputs 8
PADDING: 0 143 (192) nInputs 8
UNPADDING: 185 (192) nInputs 8
PADDING: 0 144 (192) nInputs 8
UNPADDING: 186 (192) nInputs 8
PADDING: 0 145 (192) nInputs 8
UNPADDING: 187 (192) nInputs 8
PADDING: 0 146 (192) nInputs 8
UNPADDING: 188 (192) nInputs 8
PADDING: 0 147 (192) nInputs 8
UNPADDING: 189 (192) nInputs 8
PADDING: 0 148 (192) nInputs 8
UNPADDING: 190 (192) nInputs 8
PADDING: 0 149 (192) nInputs 8
UNPADDING: 191 (192) nInputs 8
PADDING: 0 150 (192) nInputs 8
PADDING: 0 151 (192) nInputs 8
PADDING: 0 152 (192) nInputs 8
PADDING: 0 153 (192) nInputs 8
PADDING: 0 154 (192) nInputs 8
PADDING: 0 155 (192) nInputs 8
PADDING: 0 156 (192) nInputs 8
PADDING: 0 157 (192) nInputs 8
PADDING: 0 158 (192) nInputs 8
PADDING: 0 159 (192) nInputs 8
PADDING: 0 160 (192) nInputs 8
PADDING: 0 161 (192) nInputs 8
PADDING: 0 162 (192) nInputs 8
PADDING: 0 163 (192) nInputs 8
PADDING: 0 164 (192) nInputs 8
PADDING: 0 165 (192) nInputs 8
PADDING: 0 166 (192) nInputs 8
PADDING: 0 167 (192) nInputs 8
PADDING: 0 168 (192) nInputs 8
PADDING: 0 169 (192) nInputs 8
PADDING: 0 170 (192) nInputs 8
PADDING: 0 171 (192) nInputs 8
PADDING: 0 172 (192) nInputs 8
PADDING: 0 173 (192) nInputs 8
PADDING: 0 174 (192) nInputs 8
PADDING: 0 175 (192) nInputs 8
PADDING: 0 176 (192) nInputs 8
PADDING: 0 177 (192) nInputs 8
PADDING: 0 178 (192) nInputs 8
PADDING: 0 179 (192) nInputs 8
PADDING: 0 180 (192) nInputs 8
PADDING: 0 181 (192) nInputs 8
PADDING: 0 182 (192) nInputs 8
PADDING: 0 183 (192) nInputs 8
PADDING: 0 184 (192) nInputs 8
PADDING: 0 185 (192) nInputs 8
PADDING: 0 186 (192) nInputs 8
PADDING: 0 187 (192) nInputs 8
PADDING: 0 188 (192) nInputs 8
PADDING: 0 189 (192) nInputs 8
PADDING: 0 190 (192) nInputs 8
PADDING: 0 191 (192) nInputs 8
make stopsim
make[1]: Entering directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par'
maxcompilersim -n rz3515g -cLIMA stop
Terminating MaxelerOS daemon (PID 37177)...
MaxelerOS daemon killed
Terminating simulated system (PID 37155)...
Simulated system killed
make[1]: Leaving directory `/mnt/ccnas2/bdp/rz3515/projects/deacon/evaluation/unittest/build/single_dws_conv_par'
