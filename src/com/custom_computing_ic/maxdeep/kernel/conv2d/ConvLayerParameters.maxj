/**
 *
 */
package com.custom_computing_ic.maxdeep.kernel.conv2d;

/**
 * Parameters used for building a convolution layer.
 * 
 * @author Ruizhe Zhao
 * 
 */
public class ConvLayerParameters {

  public final int H;
  public final int W;
  public final int C;
  public final int F;
  public final int K;
  public final int PC, PF, PK;

  public ConvLayerParameters(Builder builder) {
    this.H = builder.H;
    this.W = builder.W;
    this.C = builder.C;
    this.F = builder.F;
    this.K = builder.K;
    this.PC = builder.PC;
    this.PF = builder.PF;
    this.PK = builder.PK;
  }

  /**
   * Builder class for ConvLayerParameters
   * 
   * @author Ruizhe Zhao
   * 
   */
  public static class Builder {
    private final int H;
    private final int W;
    private final int C;
    private final int F;
    private final int K;
    private int       PC;
    private int       PF;
    private int       PK;

    public Builder(int H, int W, int C, int F, int K) {

      if (H <= 0)
        throw new IllegalArgumentException("H should be larger than 0");
      if (W <= 0)
        throw new IllegalArgumentException("W should be larger than 0");
      if (C <= 0)
        throw new IllegalArgumentException("C should be larger than 0");
      if (F <= 0)
        throw new IllegalArgumentException("F should be larger than 0");
      if (K <= 0)
        throw new IllegalArgumentException("K should be larger than 0");

      this.H = H;
      this.W = W;
      this.C = C;
      this.F = F;
      this.K = K;
      this.PF = 1;
      this.PC = 1;
      this.PK = 1;
    }

    public Builder PF(int PF) {
      if (PF <= 0)
        throw new IllegalArgumentException("PF should be larger than 0");
      this.PF = PF;
      return this;
    }

    public Builder PK(int PK) {
      if (PK <= 0)
        throw new IllegalArgumentException("PK should be larger than 0");
      this.PK = PK;
      return this;
    }

    public Builder PC(int PC) {
      if (PC <= 0)
        throw new IllegalArgumentException("PC should be larger than 0");
      this.PC = PC;
      return this;
    }

    public ConvLayerParameters build() {
      return new ConvLayerParameters(this);
    }
  }

}
