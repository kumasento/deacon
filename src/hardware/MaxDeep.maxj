package maxdeep;

import com.maxeler.maxcompiler.v2.build.EngineParameters;

import maxdeep.managers.NetworkManager;
import maxdeep.proto.MaxDeepProtos.NetParameter;
import maxdeep.graph.NeuralNetworkGraph;
import maxdeep.optimiser.NetworkOptimiser;

import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.IOException;

import com.google.protobuf.TextFormat;

public class MaxDeep {

  public static void main(String [] args) {
    System.setProperty("java.util.logging.SimpleFormatter.format",
        "%1$ta %1$tH:%1$tM: [%3$s] %5$s%6$s%n");

    NetParameter netParameter = null;
    try {
      FileInputStream fis = new FileInputStream("/home/vzhao/projects/maxdeep/models/lenet.prototxt"); 
      InputStreamReader reader = new InputStreamReader(fis, "ASCII");
      NetParameter.Builder builder = NetParameter.newBuilder();
      TextFormat.merge(reader, builder);
      netParameter = builder.build();
    } catch (IOException e) {
      e.printStackTrace();
    }

    NeuralNetworkGraph graph = new NeuralNetworkGraph(netParameter);
    EngineParameters params = new EngineParameters(args); 
    NetworkManager manager = new NetworkManager(params);
    NetworkOptimiser optimiser = new NetworkOptimiser();

    optimiser.optimise(manager, graph);
    // manager.createSLiCinterface(manager.interfaceDefault());
    manager.build();
  }

}
